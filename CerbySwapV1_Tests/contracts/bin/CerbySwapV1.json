{
    "contractName": "CerbySwapV1",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "CerbyCronJobsExecution_TransactionsAreTemporarilyDisabled",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapLP1155V1_CallerIsNotOwnerNorApproved",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapLP1155V1_TransactionsAreTemporarilyDisabled",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapV1_AmountOfCerUsdMustBeLargerThanOne",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapV1_AmountOfCerUsdOrTokensInMustBeLargerThanOne",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapV1_AmountOfTokensMustBeLargerThanOne",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapV1_CreditCerUsdIsOverflown",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapV1_CreditCerUsdMustNotBeBelowZero",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapV1_FeeIsWrong",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapV1_FeeOnTransferTokensArentSupported",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapV1_InputCerUsdAmountIsLargerThanMaximumSpecified",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapV1_InputTokensAmountIsLargerThanMaximumSpecified",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapV1_InvariantKValueMustBeSameOrIncreasedOnAnySwaps",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapV1_MintFeeMultiplierMustNotBeLargerThan50Percent",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapV1_MsgValueProvidedMustBeLargerThanAmountTokensIn",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapV1_MsgValueProvidedMustBeZero",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapV1_OutputCerUsdAmountIsLowerThanMinimumSpecified",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapV1_OutputTokensAmountIsLowerThanMinimumSpecified",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapV1_SafeTransferFromFailed",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapV1_SafeTransferNativeFailed",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapV1_SafeTransferTokensFailed",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapV1_SwappingTokenToSameTokenIsForbidden",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapV1_TokenAlreadyExists",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapV1_TokenDoesNotExist",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapV1_TransactionIsExpired",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "CerbySwapV1_TvlMultiplierIsWrong",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "ERC1155_AddressMustNotBeZeroAddress",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "ERC1155_BurnAmountExceedsBalance",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "ERC1155_CallerIsNotOwnerNorApproved",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "ERC1155_ERC1155ReceiverRejectsTokens",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "ERC1155_IdsLengthMismatch",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "ERC1155_InsufficientBalanceForTransfer",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "ERC1155_SettingApprovalStatusForSelf",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "ERC1155_TransferToNonERC1155ReceiverImplementer",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "Ownable_CallerIsNotOwner",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "Ownable_NewOwnerIsNotTheZeroAddress",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "ApprovalForAll",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "_token",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_amountTokensIn",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_amountCerUsdToMint",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_lpAmount",
                    "type": "uint256"
                }
            ],
            "name": "LiquidityAdded",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "_token",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_amountTokensOut",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_amountCerUsdToBurn",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_amountLpTokensBalanceToBurn",
                    "type": "uint256"
                }
            ],
            "name": "LiquidityRemoved",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "_token",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "_vaultAddress",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_poolId",
                    "type": "uint256"
                }
            ],
            "name": "PoolCreated",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "_token",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "_sender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_amountTokensIn",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_amountCerUsdIn",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "__amountTokensOut",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amountCerUsdOut",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_currentFee",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "_transferTo",
                    "type": "address"
                }
            ],
            "name": "Swap",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "_token",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_newBalanceToken",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_newBalanceCerUsd",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_newCreditCerUsd",
                    "type": "uint256"
                }
            ],
            "name": "Sync",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256[]",
                    "name": "ids",
                    "type": "uint256[]"
                },
                {
                    "indexed": false,
                    "internalType": "uint256[]",
                    "name": "values",
                    "type": "uint256[]"
                }
            ],
            "name": "TransferBatch",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "id",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "TransferSingle",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "value",
                    "type": "string"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "id",
                    "type": "uint256"
                }
            ],
            "name": "URI",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_token",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_amountTokensIn",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_expireTimestamp",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "_transferTo",
                    "type": "address"
                }
            ],
            "name": "addTokenLiquidity",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_token",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_amountCerUsdCredit",
                    "type": "uint256"
                }
            ],
            "name": "adminChangeCerUsdCreditInPool",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_token",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_amountTokensIn",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_amountCerUsdToMint",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "_transferTo",
                    "type": "address"
                }
            ],
            "name": "adminCreatePool",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "adminInitialize",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_newUrlPrefix",
                    "type": "string"
                }
            ],
            "name": "adminSetURI",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "internalType": "address",
                            "name": "mintFeeBeneficiary",
                            "type": "address"
                        },
                        {
                            "internalType": "uint32",
                            "name": "mintFeeMultiplier",
                            "type": "uint32"
                        },
                        {
                            "internalType": "uint16",
                            "name": "feeMinimum",
                            "type": "uint16"
                        },
                        {
                            "internalType": "uint16",
                            "name": "feeMaximum",
                            "type": "uint16"
                        },
                        {
                            "internalType": "uint64",
                            "name": "tvlMultiplierMinimum",
                            "type": "uint64"
                        },
                        {
                            "internalType": "uint64",
                            "name": "tvlMultiplierMaximum",
                            "type": "uint64"
                        }
                    ],
                    "internalType": "struct CerbySwapV1_Declarations.Settings",
                    "name": "_settings",
                    "type": "tuple"
                }
            ],
            "name": "adminUpdateFeesAndTvlMultipliers",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_newContractName",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "_newContractSymbol",
                    "type": "string"
                }
            ],
            "name": "adminUpdateNameAndSymbol",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_account",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_id",
                    "type": "uint256"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address[]",
                    "name": "_accounts",
                    "type": "address[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "_ids",
                    "type": "uint256[]"
                }
            ],
            "name": "balanceOfBatch",
            "outputs": [
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_token",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_amountTokensIn",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_amountCerUsdToMint",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "_transferTo",
                    "type": "address"
                }
            ],
            "name": "createPool",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "pure",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_id",
                    "type": "uint256"
                }
            ],
            "name": "exists",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_token",
                    "type": "address"
                }
            ],
            "name": "getCurrentOneMinusFeeBasedOnTrades",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "fee",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_tokenIn",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_tokenOut",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_amountTokensOut",
                    "type": "uint256"
                }
            ],
            "name": "getInputTokensForExactTokens",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_tokenIn",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_tokenOut",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_amountTokensIn",
                    "type": "uint256"
                }
            ],
            "name": "getOutputExactTokensForTokens",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address[]",
                    "name": "_tokens",
                    "type": "address[]"
                }
            ],
            "name": "getPoolsByTokens",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "uint256",
                            "name": "balanceToken",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "balanceCerUsd",
                            "type": "uint256"
                        }
                    ],
                    "internalType": "struct CerbySwapV1_Declarations.PoolBalances[]",
                    "name": "",
                    "type": "tuple[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getSettings",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "address",
                            "name": "mintFeeBeneficiary",
                            "type": "address"
                        },
                        {
                            "internalType": "uint32",
                            "name": "mintFeeMultiplier",
                            "type": "uint32"
                        },
                        {
                            "internalType": "uint16",
                            "name": "feeMinimum",
                            "type": "uint16"
                        },
                        {
                            "internalType": "uint16",
                            "name": "feeMaximum",
                            "type": "uint16"
                        },
                        {
                            "internalType": "uint64",
                            "name": "tvlMultiplierMinimum",
                            "type": "uint64"
                        },
                        {
                            "internalType": "uint64",
                            "name": "tvlMultiplierMaximum",
                            "type": "uint64"
                        }
                    ],
                    "internalType": "struct CerbySwapV1_Declarations.Settings",
                    "name": "",
                    "type": "tuple"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_token",
                    "type": "address"
                }
            ],
            "name": "getTokenToPoolId",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_pos",
                    "type": "uint256"
                }
            ],
            "name": "getUtilsContractAtPos",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_token",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_amountCerUsdCredit",
                    "type": "uint256"
                }
            ],
            "name": "increaseCerUsdCreditInPool",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_account",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_operator",
                    "type": "address"
                }
            ],
            "name": "isApprovedForAll",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_token",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_amountLpTokensBalanceToBurn",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_expireTimestamp",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "_transferTo",
                    "type": "address"
                }
            ],
            "name": "removeTokenLiquidity",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_id",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_amount",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "_data",
                    "type": "bytes"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_operator",
                    "type": "address"
                },
                {
                    "internalType": "bool",
                    "name": "_approved",
                    "type": "bool"
                }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_tokenIn",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_tokenOut",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_amountTokensIn",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_minAmountTokensOut",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_expireTimestamp",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "_transferTo",
                    "type": "address"
                }
            ],
            "name": "swapExactTokensForTokens",
            "outputs": [
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                }
            ],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_tokenIn",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_tokenOut",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_amountTokensOut",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_maxAmountTokensIn",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_expireTimestamp",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "_transferTo",
                    "type": "address"
                }
            ],
            "name": "swapTokensForExactTokens",
            "outputs": [
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                }
            ],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "testInit",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_testCerbyToken",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_cerUsdToken",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_testUsdcToken",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "testSetupTokens",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_id",
                    "type": "uint256"
                }
            ],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_id",
                    "type": "uint256"
                }
            ],
            "name": "uri",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CerbyCronJobsExecution_TransactionsAreTemporarilyDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapLP1155V1_CallerIsNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapLP1155V1_TransactionsAreTemporarilyDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_AmountOfCerUsdMustBeLargerThanOne\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_AmountOfCerUsdOrTokensInMustBeLargerThanOne\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_AmountOfTokensMustBeLargerThanOne\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_CreditCerUsdIsOverflown\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_CreditCerUsdMustNotBeBelowZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_FeeIsWrong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_FeeOnTransferTokensArentSupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_InputCerUsdAmountIsLargerThanMaximumSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_InputTokensAmountIsLargerThanMaximumSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_InvariantKValueMustBeSameOrIncreasedOnAnySwaps\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_MintFeeMultiplierMustNotBeLargerThan50Percent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_MsgValueProvidedMustBeLargerThanAmountTokensIn\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_MsgValueProvidedMustBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_OutputCerUsdAmountIsLowerThanMinimumSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_OutputTokensAmountIsLowerThanMinimumSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_SafeTransferFromFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_SafeTransferNativeFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_SafeTransferTokensFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_SwappingTokenToSameTokenIsForbidden\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_TokenDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_TransactionIsExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_TvlMultiplierIsWrong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1155_AddressMustNotBeZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1155_BurnAmountExceedsBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1155_CallerIsNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1155_ERC1155ReceiverRejectsTokens\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1155_IdsLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1155_InsufficientBalanceForTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1155_SettingApprovalStatusForSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1155_TransferToNonERC1155ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable_CallerIsNotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable_NewOwnerIsNotTheZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountTokensIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountCerUsdToMint\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lpAmount\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountTokensOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountCerUsdToBurn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountLpTokensBalanceToBurn\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_vaultAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountTokensIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountCerUsdIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"__amountTokensOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountCerUsdOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_currentFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_transferTo\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newBalanceToken\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newBalanceCerUsd\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newCreditCerUsd\",\"type\":\"uint256\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountTokensIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expireTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_transferTo\",\"type\":\"address\"}],\"name\":\"addTokenLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountCerUsdCredit\",\"type\":\"uint256\"}],\"name\":\"adminChangeCerUsdCreditInPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountTokensIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountCerUsdToMint\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_transferTo\",\"type\":\"address\"}],\"name\":\"adminCreatePool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adminInitialize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newUrlPrefix\",\"type\":\"string\"}],\"name\":\"adminSetURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"mintFeeBeneficiary\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"mintFeeMultiplier\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"feeMinimum\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"feeMaximum\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"tvlMultiplierMinimum\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tvlMultiplierMaximum\",\"type\":\"uint64\"}],\"internalType\":\"struct CerbySwapV1_Declarations.Settings\",\"name\":\"_settings\",\"type\":\"tuple\"}],\"name\":\"adminUpdateFeesAndTvlMultipliers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newContractName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_newContractSymbol\",\"type\":\"string\"}],\"name\":\"adminUpdateNameAndSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountTokensIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountCerUsdToMint\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_transferTo\",\"type\":\"address\"}],\"name\":\"createPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getCurrentOneMinusFeeBasedOnTrades\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountTokensOut\",\"type\":\"uint256\"}],\"name\":\"getInputTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountTokensIn\",\"type\":\"uint256\"}],\"name\":\"getOutputExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"getPoolsByTokens\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"balanceToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceCerUsd\",\"type\":\"uint256\"}],\"internalType\":\"struct CerbySwapV1_Declarations.PoolBalances[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSettings\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"mintFeeBeneficiary\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"mintFeeMultiplier\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"feeMinimum\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"feeMaximum\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"tvlMultiplierMinimum\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tvlMultiplierMaximum\",\"type\":\"uint64\"}],\"internalType\":\"struct CerbySwapV1_Declarations.Settings\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTokenToPoolId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pos\",\"type\":\"uint256\"}],\"name\":\"getUtilsContractAtPos\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountCerUsdCredit\",\"type\":\"uint256\"}],\"name\":\"increaseCerUsdCreditInPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountLpTokensBalanceToBurn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expireTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_transferTo\",\"type\":\"address\"}],\"name\":\"removeTokenLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountTokensIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minAmountTokensOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expireTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_transferTo\",\"type\":\"address\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountTokensOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxAmountTokensIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expireTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_transferTo\",\"type\":\"address\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testInit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_testCerbyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_cerUsdToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_testUsdcToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"testSetupTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply(uint256)\":{\"details\":\"Total amount of tokens in with a given id.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/CerbySwapV1.sol\":\"CerbySwapV1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/CerbyCronJobsExecution.sol\":{\"keccak256\":\"0xc7159882b84f72eb78c6b27ccda491efda455ff1abc2b3baaeb28c118a739dbd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0e02f14796cccb64ff4cef2a257046875e5a14182323244606d17c3eff37b9cc\",\"dweb:/ipfs/QmQCqX2H4e6j5EtCvPvZCZeCJULwWHZoL9KtVEMfgMdW2C\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/CerbySwapV1.sol\":{\"keccak256\":\"0x28bff0ed56d7b372e1272c39ff4d0d509aca2fa9c2364eb996372584aee9967f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1734b8b447fa3994b4818ecf7536162d145d7d34ce95868031c9625140aa50a8\",\"dweb:/ipfs/QmVL8j3Aivfdu8hHvEt5RmWXzeAi2johN1QSsbGuZqAuny\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/CerbySwapV1_AdminFunctions.sol\":{\"keccak256\":\"0x38584cbaadb1aeb4d4253b9654622312345d3133d9571e3a4ae200b08d9a3032\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://881ddc8c6dbef85900034fa4be5df8f123376085a303391d22cc7026db0def30\",\"dweb:/ipfs/QmaLmfNo2Y5MqWBmpsTRq7cUEHgYazUhsJR6QqcmrESey7\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/CerbySwapV1_Declarations.sol\":{\"keccak256\":\"0x69b8d9b3b4881a001d906d6058a5276e3a3b895e7bc334876c9316587a96f4da\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c86313169a8258f6b75f390b137cd2cb5ea818fb6126e0f00f64c581255f08b1\",\"dweb:/ipfs/QmSib5VmbLrrb272YnzdBZ3cJTsexiMK8XyYx12ZwKYDDZ\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/CerbySwapV1_ERC1155.sol\":{\"keccak256\":\"0xe83728de17bf27d1f859d1c62c8cf52563cd37697ba9edfa9ab4b04243515ade\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c3378da7a17c478947a66334cfef6dee0ce3c48b0c3d27c29bf7408a196cd8c7\",\"dweb:/ipfs/QmcsokQ5q1NwAbeJquNfmFPrUax5Tex1qpjqTu96vrSQoV\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/CerbySwapV1_EventsAndErrors.sol\":{\"keccak256\":\"0x03ea06d55c9a31eded1ce09f954e2c5ff298b74df7c9c41a2fd6e249a64c539e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e14466b7918be006e2646eee4440012e621add0a4cafd3f56bc439f2315510bb\",\"dweb:/ipfs/QmPuvryyV1RsZhdRnhpGCC5HSyRJNmycRjC6SsfiYPkPph\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/CerbySwapV1_GetFunctions.sol\":{\"keccak256\":\"0xfdc97b1c69d43aa9a2eac4529c906379afe3388eee555c5fb6e2a13ce2a69f7d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://fd3e0a9f1854b4dca6d574186e7db691da48df65a6dcbcb6b9df2a17f1f28947\",\"dweb:/ipfs/QmRjN9bkkwwotQAN9WqLpvF5rNNmUqWeRUikurYVtUxQNe\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/CerbySwapV1_LiquidityFunctions.sol\":{\"keccak256\":\"0xbd444277fc4bf72c6bfafbf68be4b06d4a8e7327060a1de2a5316b6e1f2af1c5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://af28fd99dd2bee40abac6adb0e8e7f88e75e682e7080a74a0a6e58dad926816f\",\"dweb:/ipfs/QmVUFc5kftL3rgZbUnKHZDhG54FTiDn2Gq7pvKW1tootmG\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/CerbySwapV1_Math.sol\":{\"keccak256\":\"0x882aab1d88d1013bc6149ece45c805fe37a81268bf592fe80f90cc7aff1070a0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ffa4a39ed33eca81db0e2be7e8417c8bee72b4e637cf991cae303fc882783871\",\"dweb:/ipfs/QmW4PTCcj2XXgGbuuCbJjwk1Jv2Mw6PQSBxJcdYhntCJk2\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/CerbySwapV1_MinimalProxy.sol\":{\"keccak256\":\"0x879dfdb2d1a50f35a6239320ea7aee1a75514ea506dbdea9b5a7076348a66f7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e138fbaff29842e9b9fe3e7943414723a88a0be5acf94bdf79dcac045f8d1b7\",\"dweb:/ipfs/QmcFYMQSrNd12PaFFtuBDN98PSu3GpS78AvLZAhjP5F1UD\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/CerbySwapV1_Modifiers.sol\":{\"keccak256\":\"0x27bcb516d1bb07b85bb8b7341fe3c5981313e19d8b7d9c3befff36513a74f785\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ea6e5227f9f2eb537cd4292347c14fdb20f04a576ea8b71f5bf6da32dbb01dfe\",\"dweb:/ipfs/QmceWyxZmYCFVLYxSpVB7NrBFmCLgYRXRbFq9tb2KucWRk\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/CerbySwapV1_SafeFunctions.sol\":{\"keccak256\":\"0xf4c3987a8d8bdfc8d5b4d544dd0aef5e00a0b077580ff50474db782379f02385\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0246d8bb57ba8db0305b4cb004e768d42c2a38a979e0c3a58debac54062a4af5\",\"dweb:/ipfs/Qmc2oTkGwerfgmjB5n4xbGfp7Cv8nvj8bwzN2XAVHjSgic\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/CerbySwapV1_SwapFunctions.sol\":{\"keccak256\":\"0xf994e2ea58122ac88df9b3b30ed823854a6c5ac5ef2e2730c4a72eb3fb8329cf\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1c77b3ae4dab5ff911b1843774e246ea7d44f196e1ea2c3b21b57f5d0abdc053\",\"dweb:/ipfs/QmPeNsP11AKNLuZ17yFiaHpqbnwin2eXYoXM5mboXMbsfv\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/CerbySwapV1_VaultImplementation.sol\":{\"keccak256\":\"0x8d48e1a149c82e6dd5a57a9b410c89b113fd14a41cf2076da7e80317e564d6da\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cad4efcfc6faf5b39a0fb85c3c5aa85aed6e3d7a5c7f53de0a3d594ed7fba4b1\",\"dweb:/ipfs/QmcFFHrJ2nYAH55ci63kVRDokP8oyGR7n4MbDTrfCXRyp1\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/interfaces/ICerbyBotDetection.sol\":{\"keccak256\":\"0xbc95b2664c6eba1c562504b57a6a8c384104b29d516d7a50adc88bc7690f7838\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5766813310ea6a93f250416a9047fbfbfaff52e2fcd136c9b8ad74c3b195553b\",\"dweb:/ipfs/QmSEutKMBmwTsmJjTa3M6MrtXhi4VbLTzizrRmPuuvcx4e\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/interfaces/ICerbySwapV1_VaultImplementation.sol\":{\"keccak256\":\"0x51bb5e7ad86437911df70d51462bb9739077d9ccd4f5ad60f58a93d86727df29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed542fb8f5d40c4f35d8bc9909fa8f121f2b81131e1760171467a63af74a9925\",\"dweb:/ipfs/QmVbdiBjqSXKMDx9EF3uDG5msv6aU55C5ALBoddVjimwVn\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/interfaces/ICerbyToken.sol\":{\"keccak256\":\"0x3ddbd9e279dd16038e700b5e47ee89dc8127bca86aa05bb237194b49f21908f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5aa13fd55b3881ab3d4fb0df0b0b9aff01eb8dd36620a093c9bd1d164be6b51\",\"dweb:/ipfs/QmeA9f9E4z7BysW64W1pju3ipTRELVjaVL9sEMN22j7vA8\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/interfaces/ICerbyTokenMinterBurner.sol\":{\"keccak256\":\"0x89fd351c41604517629a39a85449643cd342768c36edc319069f564edc8a2866\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://a57fcef8c026eeac77196a954df700e232d2491e7ded08807c1a1b0ff3f20591\",\"dweb:/ipfs/QmcS2yVjmd9cG7YZRXMhXPfg7QjgooMuuMGwZK4r3R6qJq\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xabae57af947a1915f61f1cc922415bb8106190b5227c28c2636c5017e3d3363d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbf258a74b24d51bc1df66076d0fa301444627c754c23485d204917248b402e4\",\"dweb:/ipfs/QmdfkmgShgwxLb6nTeqiRP6TGvqCMjKG2emnVYPgcqo6y9\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/openzeppelin/access/Ownable.sol\":{\"keccak256\":\"0xad82ebf927970e319c1bdb67d37c521732c550b87d9aff07a26cb8c8cd6e6819\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f3fadaee719e438607454e6f4983e9ca6db40a10154d47980899580ad2cb6b9\",\"dweb:/ipfs/QmbEKGDEMZQ7rafp2xgBPiqJXppNtWNJAJMoZ6CdZGBvEo\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/openzeppelin/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xa3afe9577e134cca570a451b3c6688e9aade3cc27fb7f491d77ee3db37f192e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac8b8aedc7b02889b4e0183b339b6b0f5cc96501be19b65f61ffca02f6949059\",\"dweb:/ipfs/QmR5kcJxdAzGngJa16BasNByCY5XFQ8TwqESER7UvRhwcZ\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/openzeppelin/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe3902a350c3562b17daad046f58b70f9dfc9740a71f84cc7ec0e661a8c1abc8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce329f355c855313c453538862b1c2768cf0cde460e24cdfe180bc15aec396e7\",\"dweb:/ipfs/QmdqQNyiPMDHPmAFsUwMoKKEWQtDQ8FeSWyiPGCvQwvSVE\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/openzeppelin/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/openzeppelin/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/openzeppelin/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x80cff4f25810ab85caa3f5839b7cb5b7683a9540da82268e2b9f422e0d4d58e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1858a5438e273c2f48db04bfa9e49e5a5bbf5ccb36b1c666756647aacfca2a04\",\"dweb:/ipfs/QmR1bYQhYWtRLLXMyRJYtZRaEmXkbFGWHcd6a59VKrFgMR\"]},\"/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/openzeppelin/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
    "bytecode": "600380546001600160a01b031990811673527ea24a5917c452dbf402edc9da4190239bccf11790915560048054821673947ef3df5b7d5ec37214dd06c4042c8e7b0cebd71790556005805482167346e8e0af862f636199af69acd082b9963066ed9c179055600680549091167314769f96e57b80c66837701de0b43686fb4632de17905560c0604052600b60808190526a436572627953776170563160a81b60a0908152620000b291600d91906200055d565b506040805180820190915260038082526243533160e81b6020909201918252620000df91600e916200055d565b506040518060600160405280602381526020016200557f6023913980516200011091600f916020909101906200055d565b503480156200011e57600080fd5b50600f6040516020016200013391906200070d565b60408051601f198184030181529190526200014e81620004f2565b506200015a336200050b565b73def78a28c78a461598d948bc0c689ce88f812ad860006064620001826127106014620007cb565b6200018e9190620007f9565b90506351a67366600160c882600083620001a98484620007cb565b620001b59190620007f9565b6040805160c0810182526001600160a01b038a1680825263ffffffff8a166020830181905261ffff8981169484018590528816606084018190526001600160401b038881166080860181905290871660a0909501859052600780546001600160c01b031916909417600160a01b9093029290921763ffffffff60c01b1916600160c01b90950261ffff60d01b191694909417600160d01b909402939093179055600880546001600160801b03191690921768010000000000000000909102179055905062000282620005ec565b6040805160a08101825282815260006020820181905291810182905260608101829052608081018290528154600181018355918052805190916003027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630190620002f090829060066200060a565b506020820151600182810180546040860151606087015161ffff90951662ffffff19909216919091176201000060ff90921691909102176301000000600160901b03191663010000006001600160781b0394851602179055608090930151600290920180546001600160781b031916929091169190911790554614156200039d57600680546001600160a01b03191673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc217905562000471565b4660381415620003d357600680546001600160a01b03191673bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c17905562000471565b46608914156200040957600680546001600160a01b031916730d500b1d8e8ef31e21c99d1db9a6444d3adf127017905562000471565b4661a86a14156200044057600680546001600160a01b03191673b31f66aa3c1e785363f0875a1b74e27b85fd66c717905562000471565b4660fa14156200047157600680546001600160a01b0319167321be370d5312f44cb42ce377bc9b8a0cef1a4c831790555b600680546001600160a01b0319167314769f96e57b80c66837701de0b43686fb4632de179055604051620004a590620006ab565b604051809103906000f080158015620004c2573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b0392909216919091179055506200081c9650505050505050565b80516200050790600b9060208401906200055d565b5050565b601080546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200056b90620006d0565b90600052602060002090601f0160209004810192826200058f5760008555620005da565b82601f10620005aa57805160ff1916838001178555620005da565b82800160010185558215620005da579182015b82811115620005da578251825591602001919060010190620005bd565b50620005e8929150620006b9565b5090565b6040518060c001604052806006906020820280368337509192915050565b600183019183908215620005da5791602002820160005b838211156200066957835183826101000a81548164ffffffffff021916908364ffffffffff160217905550926020019260050160208160040104928301926001030262000621565b80156200069c5782816101000a81549064ffffffffff021916905560050160208160040104928301926001030262000669565b5050620005e8929150620006b9565b610442806200513d83390190565b5b80821115620005e85760008155600101620006ba565b600181811c90821680620006e557607f821691505b602082108114156200070757634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806200072a57607f831692505b60208084108214156200074b57634e487b7160e01b86526022600452602486fd5b8180156200076257600181146200077457620007a3565b60ff19861689528489019650620007a3565b60008a81526020902060005b868110156200079b5781548b82015290850190830162000780565b505084890196505b505050505050620007c381683db4b23e973539b7b760b91b815260090190565b949350505050565b6000816000190483118215151615620007f457634e487b7160e01b600052601160045260246000fd5b500290565b6000826200081757634e487b7160e01b600052601260045260246000fd5b500490565b614911806200082c6000396000f3fe60806040526004361061021d5760003560e01c806374fcf07111610123578063bd85b039116100ab578063e985e9c51161006f578063e985e9c514610744578063eca010931461078d578063f242432a146107ad578063f2fde38b146107cd578063f6524724146107ed57600080fd5b8063bd85b039146106bc578063c09c923b146106e9578063c790985a146106f1578063cab4ba8214610711578063d5d607371461073157600080fd5b806395d89b41116100f257806395d89b411461063f578063a22cb46514610654578063a60c6e5514610674578063a7fd40bf14610687578063b5d11e99146106a757600080fd5b806374fcf071146104c9578063842980f4146104e957806385b4bb53146104fc5780638da5cb5b1461062157600080fd5b80634301bae1116101a65780634e1273f4116101755780634e1273f4146104025780634f558e791461042f578063614175161461045e578063715018a61461049457806371858049146104a957600080fd5b80634301bae11461038f57806343fefad4146103af57806348b08d62146103c25780634c3c0eb2146103e257600080fd5b80630e89341c116101ed5780630e89341c146102f757806318160ddd14610317578063313ce5671461032c57806334e150ab146103405780633935ac111461036d57600080fd5b8062fdd58e1461022957806301ffc9a71461025c57806306fb1a071461029d57806306fdde03146102d557600080fd5b3661022457005b600080fd5b34801561023557600080fd5b50610249610244366004613cc4565b610800565b6040519081526020015b60405180910390f35b34801561026857600080fd5b5061028d610277366004613d06565b6001600160e01b0319166301ffc9a760e01b1490565b6040519015158152602001610253565b3480156102a957600080fd5b506102bd6102b8366004613d23565b610853565b6040516001600160a01b039091168152602001610253565b3480156102e157600080fd5b506102ea6108d0565b6040516102539190613d94565b34801561030357600080fd5b506102ea610312366004613d23565b610962565b34801561032357600080fd5b5061024961098e565b34801561033857600080fd5b506012610249565b34801561034c57600080fd5b5061036061035b366004613df2565b6109da565b6040516102539190613e33565b34801561037957600080fd5b5061038d610388366004613f24565b610ab6565b005b34801561039b57600080fd5b5061038d6103aa366004613f87565b610b1c565b6102496103bd366004613f99565b610c78565b3480156103ce57600080fd5b506102496103dd366004613fe3565b610fae565b3480156103ee57600080fd5b506102496103fd366004614024565b611044565b34801561040e57600080fd5b5061042261041d366004614041565b6110a0565b60405161025391906140ac565b34801561043b57600080fd5b5061028d61044a366004613d23565b6000908152600c6020526040902054151590565b34801561046a57600080fd5b50610249610479366004614024565b6001600160a01b031660009081526001602052604090205490565b3480156104a057600080fd5b5061038d611196565b3480156104b557600080fd5b5061038d6104c4366004613cc4565b6111dc565b3480156104d557600080fd5b506102496104e4366004613f99565b61132a565b61038d6104f7366004613f99565b6113b2565b34801561050857600080fd5b506105b06040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152506040805160c0810182526007546001600160a01b038116825263ffffffff600160a01b820416602083015261ffff600160c01b8204811693830193909352600160d01b900490911660608201526008546001600160401b038082166080840152600160401b9091041660a082015290565b604051610253919081516001600160a01b0316815260208083015163ffffffff169082015260408083015161ffff90811691830191909152606080840151909116908201526080808301516001600160401b039081169183019190915260a092830151169181019190915260c00190565b34801561062d57600080fd5b506010546001600160a01b03166102bd565b34801561064b57600080fd5b506102ea6113c6565b34801561066057600080fd5b5061038d61066f3660046140fe565b6113d5565b610422610682366004614137565b611441565b34801561069357600080fd5b5061038d6106a23660046141df565b611806565b3480156106b357600080fd5b5061038d611876565b3480156106c857600080fd5b506102496106d7366004613d23565b6000908152600c602052604090205490565b61038d6118d4565b3480156106fd57600080fd5b5061024961070c366004613fe3565b61193f565b34801561071d57600080fd5b5061038d61072c366004613cc4565b6119c0565b61038d61073f366004613f99565b611af6565b34801561075057600080fd5b5061028d61075f366004614214565b6001600160a01b039182166000908152600a6020908152604080832093909416825291909152205460ff1690565b34801561079957600080fd5b5061038d6107a8366004614242565b611b44565b3480156107b957600080fd5b5061038d6107c83660046142b3565b611b90565b3480156107d957600080fd5b5061038d6107e8366004614024565b611c63565b6104226107fb366004614137565b611cd0565b6000826001600160a01b03811661082a57604051630b9f42b360e31b815260040160405180910390fd5b505060009081526009602090815260408083206001600160a01b03949094168352929052205490565b6040516306fb1a0760e01b81526004810182905260009073def1fac7bf08f173d286bbbdcbeeade695129840906306fb1a0790602401602060405180830381865afa1580156108a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ca919061432e565b92915050565b6060600d80546108df9061434b565b80601f016020809104026020016040519081016040528092919081815260200182805461090b9061434b565b80156109585780601f1061092d57610100808354040283529160200191610958565b820191906000526020600020905b81548152906001019060200180831161093b57829003601f168201915b5050505050905090565b6060600f82604051602001610978929190614380565b6040516020818303038152906040529050919050565b60008060005b6000600c816109a28561444d565b94508481526020019081526020016000205411156108ca576000828152600c60205260409020546109d39082614468565b9050610994565b60606000826001600160401b038111156109f6576109f6613e82565b604051908082528060200260200182016040528015610a3b57816020015b6040805180820190915260008082526020820152815260200190600190039081610a145790505b50905060005b83811015610aae576000858583818110610a5d57610a5d614480565b9050602002016020810190610a729190614024565b9050610a7d816120fe565b838381518110610a8f57610a8f614480565b6020026020010181905250508080610aa69061444d565b915050610a41565b509392505050565b33610ac96010546001600160a01b031690565b6001600160a01b031614610af05760405163ebf9845960e01b815260040160405180910390fd5b8151610b0390600d906020850190613aee565b508051610b1790600e906020840190613aee565b505050565b33610b2f6010546001600160a01b031690565b6001600160a01b031614610b565760405163ebf9845960e01b815260040160405180910390fd5b610b6660608201604083016144a6565b61ffff161580610b9b5750610b8160808201606083016144a6565b61ffff16610b9560608301604084016144a6565b61ffff16115b80610bba57506101f4610bb460808301606084016144a6565b61ffff16115b15610bd857604051637420258d60e11b815260040160405180910390fd5b610be860c0820160a083016144d8565b6001600160401b0316610c0160a08301608084016144d8565b6001600160401b03161115610c29576040516375e1700b60e11b815260040160405180910390fd5b612710610c3c6040830160208401614507565b610c47906002614524565b63ffffffff1610610c6b57604051631457c3c360e11b815260040160405180910390fd5b806007610b17828261456a565b6001600160a01b03841660009081526001602052604081205485901580610cac57506005546001600160a01b038281169116145b15610cd25760405162461bcd60e51b8152600401610cc990614694565b60405180910390fd5b8380421115610cf35760405162461bcd60e51b8152600401610cc9906146af565b6001600160a01b0387166000908152600160205260408120548154909190819083908110610d2357610d23614480565b906000526020600020906003020190506000610d3e8a61215b565b90506000610d4b8b6120fe565b9050610d598b33848d612200565b6000610d648c6120fe565b82518151919250610d74916146ca565b9a5060018b11610d965760405162461bcd60e51b8152600401610cc9906146e1565b600184015460208301518351600092610de19263010000009091046001600160781b031691610dcd91610dc8916146fc565b612322565b6000898152600c6020526040902054612392565b600754909150610dfb906001600160a01b0316878361242a565b82516000878152600c6020526040812054909190610e19908f6146fc565b610e239190614731565b9050610e308b888361242a565b6000846000015185602001518f610e4791906146fc565b610e519190614731565b905060018111610e7357604051621037cb60e91b815260040160405180910390fd5b600554604051630bb9ff5d60e01b81526001600160a01b0388811660048301526024820184905290911690630bb9ff5d90604401600060405180830381600087803b158015610ec157600080fd5b505af1158015610ed5573d6000803e3d6000fd5b5050505060208401518451610eed91610dc8916146fc565b8760010160036101000a8154816001600160781b0302191690836001600160781b031602179055507f64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e8f8f8385604051610f4a9493929190614745565b60405180910390a16000805160206148bc8339815191528f856000015186602001518a60020160009054906101000a90046001600160781b0316604051610f94949392919061476b565b60405180910390a1509d9c50505050505050505050505050565b60055460009081906001600160a01b0385811691161415610fe557610fdc610fd5866120fe565b8685612507565b915061103d9050565b6005546001600160a01b038681169116141561100e57610fdc611007856120fe565b858561256a565b600061102361101c876120fe565b8786612507565b9050611038611031866120fe565b868361256a565b925050505b9392505050565b6001600160a01b038116600090815260016020526040812054815482918291811061107157611071614480565b90600052602060002090600302019050600061108c846120fe565b90506110988282612582565b949350505050565b606081848082146110c457604051632ce5f24f60e01b815260040160405180910390fd5b6000866001600160401b038111156110de576110de613e82565b604051908082528060200260200182016040528015611107578160200160208202803683370190505b50905060005b8581101561118a5761115d89898381811061112a5761112a614480565b905060200201602081019061113f9190614024565b88888481811061115157611151614480565b90506020020135610800565b82828151811061116f5761116f614480565b60209081029190910101526111838161444d565b905061110d565b50979650505050505050565b336111a96010546001600160a01b031690565b6001600160a01b0316146111d05760405163ebf9845960e01b815260040160405180910390fd5b6111da600061274b565b565b6001600160a01b0382166000908152600160205260408120548154829190811061120857611208614480565b906000526020600020906003020190506000611223846120fe565b60028301549091506001600160781b0390811610156112e45760028201805484919060009061125c9084906001600160781b031661479a565b82546001600160781b039182166101009390930a9283029190920219909116179055506005546040516318a8ad8760e01b8152336004820152602481018590526001600160a01b03909116906318a8ad8790604401600060405180830381600087803b1580156112cb57600080fd5b505af11580156112df573d6000803e3d6000fd5b505050505b8051602082015160028401546040516000805160206148bc8339815191529361131c938993919290916001600160781b03169061476b565b60405180910390a150505050565b6001600160a01b0384166000908152600160205260408120548590158061135e57506005546001600160a01b038281169116145b1561137b5760405162461bcd60e51b8152600401610cc990614694565b838042111561139c5760405162461bcd60e51b8152600401610cc9906146af565b6113a787878661279d565b979650505050505050565b6113c0848484600085612a1d565b50505050565b6060600e80546108df9061434b565b60006113e16003610853565b9050806001600160a01b031663eef84ba16040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561141e57600080fd5b505af1158015611432573d6000803e3d6000fd5b50505050610b17338484612e06565b606082804211156114645760405162461bcd60e51b8152600401610cc9906146af565b866001600160a01b0316886001600160a01b031614156114aa5760405162461bcd60e51b81526020600482015260016024820152601360fa1b6044820152606401610cc9565b600186116114ca5760405162461bcd60e51b8152600401610cc9906146e1565b60006114d58961215b565b6040805160028082526060820183529293506000929091602083019080368337019050509050878160008151811061150f5761150f614480565b602002602001018181525050611538604051806040016040528060008152602001600081525090565b6005546001600160a01b038b81169116141561160f576115578b6120fe565b9050611564818c8b612507565b8260018151811061157757611577614480565b602002602001018181525050878260018151811061159757611597614480565b602002602001015110156115d15760405162461bcd60e51b81526020600482015260016024820152600960fb1b6044820152606401610cc9565b6115dd8b33858c612200565b6116058b826000856001815181106115f7576115f7614480565b60200260200101518a612ea6565b5092506117fb9050565b600061161a8b61215b565b9050611639604051806040016040528060008152602001600081525090565b6005546001600160a01b038e811691161415611713576116588c6120fe565b9050611665818d8d61256a565b8460018151811061167857611678614480565b602002602001018181525050898460018151811061169857611698614480565b602002602001015110156116d25760405162461bcd60e51b81526020600482015260016024820152606960f81b6044820152606401610cc9565b6116de8d33848e612200565b6117068c82866001815181106116f6576116f6614480565b602002602001015160008c612ea6565b83965050505050506117fb565b61171c8d6120fe565b9250600061172b848f8e612507565b90506117368d6120fe565b9150611743828e8361256a565b8560018151811061175657611756614480565b6020026020010181815250508a8560018151811061177657611776614480565b602002602001015110156117b05760405162461bcd60e51b81526020600482015260016024820152606960f81b6044820152606401610cc9565b6117bc8e33888f612200565b6117ca8e8560008487612ea6565b6117f28d83876001815181106117e2576117e2614480565b602002602001015160008d612ea6565b50929550505050505b509695505050505050565b336118196010546001600160a01b031690565b6001600160a01b0316146118405760405163ebf9845960e01b815260040160405180910390fd5b61186a82826040516020016118569291906147c5565b6040516020818303038152906040526133ed565b610b17600f8383613b72565b6003546118aa906001600160a01b031669d3c21bcecceda10000006969e10de76676d08000006001600160781b0333612a1d565b6004546111da906001600160a01b031669943b1377290cbd800000806001600160781b0333612a1d565b336118e76010546001600160a01b031690565b6001600160a01b03161461190e5760405163ebf9845960e01b815260040160405180910390fd5b6006546111da906001600160a01b031666038d7ea4c6800069d3c21bcecceda10000006001600160781b0333612a1d565b60055460009081906001600160a01b038581169116141561196d57610fdc611966866120fe565b8685613404565b6005546001600160a01b038681169116141561199657610fdc61198f856120fe565b858561345e565b60006119ab6119a4876120fe565b868661345e565b90506110386119b9866120fe565b8783613404565b336119d36010546001600160a01b031690565b6001600160a01b0316146119fa5760405163ebf9845960e01b815260040160405180910390fd5b6001600160a01b03821660009081526001602052604090205482901580611a2e57506005546001600160a01b038281169116145b15611a4b5760405162461bcd60e51b8152600401610cc990614694565b6000611a56846120fe565b6001600160a01b038516600090815260016020526040812054815492935090918291908110611a8757611a87614480565b6000918252602091829020600260039092020190810180546001600160781b0319166dffffffffffffffffffffffffffff88161790558351918401516040519193506000805160206148bc83398151915292611ae7928992908990614745565b60405180910390a15050505050565b33611b096010546001600160a01b031690565b6001600160a01b031614611b305760405163ebf9845960e01b815260040160405180910390fd5b6113c08484846001600160781b0385612a1d565b600380546001600160a01b038087166001600160a01b031992831617909255600580548684169083161790556004805492851692909116919091179055611b89611876565b5050505050565b856001600160a01b03811633148015611bcc57506001600160a01b0381166000908152600a6020908152604080832033845290915290205460ff165b15611bea57604051631fc3afe760e01b815260040160405180910390fd5b6000611bf66003610853565b9050806001600160a01b031663eef84ba16040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611c3357600080fd5b505af1158015611c47573d6000803e3d6000fd5b50505050611c59888888888888613476565b5050505050505050565b33611c766010546001600160a01b031690565b6001600160a01b031614611c9d5760405163ebf9845960e01b815260040160405180910390fd5b6001600160a01b038116611cc457604051635868b79d60e01b815260040160405180910390fd5b611ccd8161274b565b50565b60608280421115611cf35760405162461bcd60e51b8152600401610cc9906146af565b866001600160a01b0316886001600160a01b03161415611d395760405162461bcd60e51b81526020600482015260016024820152601360fa1b6044820152606401610cc9565b6000611d448961215b565b60408051600280825260608201835292935060009290916020830190803683370190505090508781600181518110611d7e57611d7e614480565b602002602001018181525050611da7604051806040016040528060008152602001600081525090565b6005546001600160a01b038b811691161415611eae57611dc68b6120fe565b9050611dd3818c8b613404565b82600081518110611de657611de6614480565b6020026020010181815250508782600081518110611e0657611e06614480565b60200260200101511115611e405760405162461bcd60e51b81526020600482015260016024820152604b60f81b6044820152606401610cc9565b600182600081518110611e5557611e55614480565b602002602001015111611e7a5760405162461bcd60e51b8152600401610cc9906146e1565b611ea08b338585600081518110611e9357611e93614480565b6020026020010151612200565b6116058b8260008c8a612ea6565b6000611eb98b61215b565b9050611ed8604051806040016040528060008152602001600081525090565b6005546001600160a01b038e811691161415611fd257611ef78c6120fe565b9050611f04818d8d61345e565b84600081518110611f1757611f17614480565b6020026020010181815250508984600081518110611f3757611f37614480565b60200260200101511115611f715760405162461bcd60e51b81526020600482015260016024820152602560f91b6044820152606401610cc9565b600184600081518110611f8657611f86614480565b602002602001015111611fab5760405162461bcd60e51b8152600401610cc9906147e3565b611fc48d338487600081518110611e9357611e93614480565b6117068c828d60008c612ea6565b611fdb8c6120fe565b90506000611fea828e8e61345e565b90506001811161200c5760405162461bcd60e51b8152600401610cc9906147e3565b6120158e6120fe565b9350612022848f83613404565b8560008151811061203557612035614480565b60200260200101818152505060018560008151811061205657612056614480565b60200260200101511161207b5760405162461bcd60e51b8152600401610cc9906147e3565b8a8560008151811061208f5761208f614480565b602002602001015111156120c95760405162461bcd60e51b81526020600482015260016024820152604b60f81b6044820152606401610cc9565b6120e28e338888600081518110611e9357611e93614480565b6120f08e8560008487612ea6565b6117f28d838e60008d612ea6565b6040805180820190915260008082526020820152600061211d8361215b565b9050604051806040016040528061213485846135d9565b8152600554602090910190612152906001600160a01b0316846135d9565b90529392505050565b6040516001600160601b0319606083901b166020820152600090819060340160408051601f19818403018152908290528051602090910120600254733d602d80600a3d3981f3363d3d373d3d3d363d7360601b83526001600160601b0319606091821b1660148401526f5af43d82803e903d91602b57fd5bf3ff60801b602884015230901b6038830152604c8201526037808220606c83015260559101209392505050565b6001811115806122215750816001600160a01b0316836001600160a01b0316145b1561222b576113c0565b6006546001600160a01b038581169116146122515761224c84848484613670565b6113c0565b6001600160a01b0383163314156122c45747818110156122995760405162461bcd60e51b8152602060048201526003602482015262185cd960ea1b6044820152606401610cc9565b818111156122b4576122b4336122af84846146ca565b613765565b6122be8383613765565b506113c0565b6040516306e6a46960e21b81526001600160a01b03838116600483015260248201839052841690631b9a91a490604401600060405180830381600087803b15801561230e57600080fd5b505af1158015611c59573d6000803e3d6000fd5b60006003821115612383575080600061233c600283614731565b612347906001614468565b90505b8181101561237d579050806002816123628186614731565b61236c9190614468565b6123769190614731565b905061234a565b50919050565b811561238d575060015b919050565b600754600090600160a01b900463ffffffff1684841180156123b45750600085115b80156123c05750600081115b1561241f576123cf81866146fc565b6123db826127106146ca565b6123e590866146fc565b6123ef9190614468565b6123f986866146ca565b61240383866146fc565b61240d91906146fc565b6124179190614731565b91505061103d565b506000949350505050565b826001600160a01b03811661245257604051630b9f42b360e31b815260040160405180910390fd5b8161245c576113c0565b6000838152600c602052604081208054339285929161247c908490614468565b909155505060008481526009602090815260408083206001600160a01b038981168086529184528285208054890190558251898152938401889052909392908516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611b89816000878787604051806020016040528060008152506137f3565b6001600160a01b038216600090815260016020526040812054815482918291811061253457612534614480565b90600052602060002090600302019050612561838660000151876020015161255c858a612582565b6138c0565b95945050505050565b600061109882856020015186600001516127106138c0565b60008061258d6138fc565b90506000805b60068110156125f757828114156125a9576125e5565b8581600681106125bb576125bb614480565b6006808204909201546125e29264ffffffffff600591909306026101000a90041683614468565b91505b806125ef8161444d565b915050612593565b50670de0b6b3a764000061260d600160066146ca565b61261790836146ca565b61262191906146fc565b60085460208601519192506000916402540be4009161264b916001600160401b03909116906146fc565b6126559190614731565b60085460208701519192506000916402540be4009161268591600160401b9091046001600160401b0316906146fc565b61268f9190614731565b90508183116126bd576007546126b290600160d01b900461ffff166127106146ca565b9450505050506108ca565b8083106126de576007546126b290600160c01b900461ffff166127106146ca565b6126e882826146ca565b6007546127099061ffff600160c01b8204811691600160d01b9004166146ca565b61271384866146ca565b61271d91906146fc565b6127279190614731565b60075461274190600160d01b900461ffff166127106146ca565b6113a79190614468565b601080546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038316600090815260016020526040812054815482908190839081106127cc576127cc614480565b9060005260206000209060030201905060006127e7876120fe565b6000848152600c60205260408120548251929350918290612809908a906146fc565b6128139190614731565b905060008289856020015161282891906146fc565b6128329190614731565b60018601546020860151865192935060009261286d92630100000090046001600160781b03169161286791610dc891906146fc565b86612392565b600754909150612887906001600160a01b0316888361242a565b600060405180604001604052808588600001516128a491906146ca565b81526020018488602001516128b991906146ca565b9052602081015181519192506128d391610dc891906146fc565b8760010160036101000a8154816001600160781b0302191690836001600160781b0316021790555061290633898d61391b565b60006129118d61215b565b6005546040516318a8ad8760e01b81526001600160a01b038084166004830152602482018890529293509116906318a8ad8790604401600060405180830381600087803b15801561296157600080fd5b505af1158015612975573d6000803e3d6000fd5b505050506129858d828d88612200565b7f1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d8d86868f6040516129ba9493929190614745565b60405180910390a16000805160206148bc8339815191528d836000015184602001518b60020160009054906101000a90046001600160781b0316604051612a04949392919061476b565b60405180910390a150929b9a5050505050505050505050565b6001600160a01b038516600090815260016020526040902054859015612a565760405163402670df60e01b815260040160405180910390fd5b6000612a6187613a08565b600554600654604051631c9776b560e31b81526001600160a01b038b811660048301819052938116602483015291821690921460448301529192509082169063e4bbb5a890606401600060405180830381600087803b158015612ac357600080fd5b505af1158015612ad7573d6000803e3d6000fd5b50505050612ae787338389612200565b600554604051630bb9ff5d60e01b81526001600160a01b0383811660048301526024820188905290911690630bb9ff5d90604401600060405180830381600087803b158015612b3557600080fd5b505af1158015612b49573d6000803e3d6000fd5b50505050612b5787826135d9565b955060018611612b795760405162461bcd60e51b8152600401610cc9906146e1565b612b81613be6565b60005b6006811015612bc4576001828260068110612ba157612ba1614480565b64ffffffffff909216602092909202015280612bbc8161444d565b915050612b84565b506000612bd4610dc8888a6146fc565b6040805160a081019091528381526007549192506000916020820190612c0790600160d01b900461ffff166127106146ca565b61ffff168152602001612c186138fc565b60ff1681526001600160781b0380851660208301528916604090910152600080546001810182559080528151919250908290600383027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630190612c7e9082906006613c04565b5060208281015160018381018054604080880151606089015161ffff90961662ffffff19909316929092176201000060ff909316929092029190911771ffffffffffffffffffffffffffffff000000191663010000006001600160781b039586160217909155608090950151600290940180546001600160781b031916949092169390931790556001600160a01b038e16600090815291905220819055612d2a61dead826103e861242a565b6000612d386103e8856146ca565b9050612d4588838361242a565b604080516001600160a01b03808f168252881660208201529081018390527ff8a0462f666b427ea753848be7e91f9ce413975906f6f39950be296ca9a4d5249060600160405180910390a17f64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e8c8c8c84604051612dc59493929190614745565b60405180910390a16000805160206148bc8339815191528c8c8c8c604051612df09493929190614745565b60405180910390a1505050505050505050505050565b816001600160a01b0316836001600160a01b03161415612e395760405163180a65b960e31b815260040160405180910390fd5b6001600160a01b038381166000818152600a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03851660009081526001602052604090205485901580612eda57506005546001600160a01b038281169116145b15612ef75760405162461bcd60e51b8152600401610cc990614694565b6000612f02876120fe565b9050600086602001518260200151612f1a91906146ca565b87518351919250600091612f2e91906146ca565b90506001612f3c8383614468565b11612f6d5760405162461bcd60e51b81526020600482015260016024820152601960f91b6044820152606401610cc9565b6001600160a01b03891660009081526001602052604081205481548291908110612f9957612f99614480565b6000918252602090912060039091020160028101549091506001600160781b03908116108015612fe1575060028101548790612fdf9085906001600160781b0316614468565b105b156130125760405162461bcd60e51b81526020600482015260016024820152602d60f91b6044820152606401610cc9565b600061301c6138fc565b9050612710600185118015613032575060018411155b1561311157600183015462010000900460ff16828114158061305257503a155b156131055760008184106130665783613071565b613071600685614468565b90505b8061307e8361444d565b925082116130d4576001856130946006856147fe565b600681106130a4576130a4614480565b600691828204019190066005026101000a81548164ffffffffff021916908364ffffffffff160217905550613074565b6130de858e612582565b60018601805461ffff9290921662ffffff19909216919091176201000060ff871602179055505b5050600182015461ffff165b600061311f612710806146fc565b60208d01518d5161313091906146fc565b61313a91906146fc565b9050600061314a836127106146ca565b61315490876146fc565b885161316390612710906146fc565b61316d91906146ca565b613179846127106146ca565b61318390896146fc565b6127108a6020015161319591906146fc565b61319f91906146ca565b6131a991906146fc565b9050818110156131df5760405162461bcd60e51b81526020600482015260016024820152603160f81b6044820152606401610cc9565b60028501546001600160781b03908116101561323d5760028501548b906132109089906001600160781b0316614468565b61321a91906146ca565b6002860180546001600160781b0319166001600160781b03929092169190911790555b670de0b6b3a76400008b11156132f8576000613261670de0b6b3a76400008d614731565b86866006811061327357613273614480565b60068082049092015461329a939264ffffffffff600591909306026101000a900416614468565b905063ffffffff81106132b15763ffffffff6132b3565b805b63ffffffff168686600681106132cb576132cb614480565b600691828204019190066005026101000a81548164ffffffffff021916908364ffffffffff160217905550505b505060055461331a906001600160a01b03166133138e61215b565b8a8c612200565b61332e8c6133278e61215b565b8a8d612200565b7f4ab7f3f4678bf8f6cbe4d85e4007b7c64df8e1d5d97de1628f4a6416f9d1db038c3386888e8e613361886127106146ca565b604080516001600160a01b03988916815296881660208801528601949094526060850192909252608084015260a083015260c0820152908a1660e08201526101000160405180910390a16000805160206148bc8339815191528c876000015188602001518660020160009054906101000a90046001600160781b0316604051612df0949392919061476b565b805161340090600b906020840190613aee565b5050565b6001600160a01b038216600090815260016020526040812054815482918291811061343157613431614480565b906000526020600020906003020190506125618386600001518760200151613459858a612582565b613aa0565b60006110988285602001518660000151612710613aa0565b846001600160a01b03811661349e57604051630b9f42b360e31b815260040160405180910390fd5b60008581526009602090815260408083206001600160a01b038b1684529091529020543390858110156134e457604051632d688f6160e11b815260040160405180910390fd5b60008781526009602090815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290613523908490614468565b90915550506000878152600c602090815260409182902080548901905581518981529081018890526001600160a01b038a8116928c821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46135ce828a8a8a8a8a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506137f392505050565b505050505050505050565b6006546000906001600160a01b03848116911614613660576040516370a0823160e01b81526001600160a01b0383811660048301528416906370a0823190602401602060405180830381865afa158015613637573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061365b9190614812565b61103d565b506001600160a01b031631919050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916136d4919061482b565b6000604051808303816000865af19150503d8060008114613711576040519150601f19603f3d011682016040523d82523d6000602084013e613716565b606091505b50915091508180156137405750805115806137405750808060200190518101906137409190614847565b61375d57604051636050fe2960e01b815260040160405180910390fd5b505050505050565b604080516000808252602082019092526001600160a01b03841690839060405161378f919061482b565b60006040518083038185875af1925050503d80600081146137cc576040519150601f19603f3d011682016040523d82523d6000602084013e6137d1565b606091505b5050905080610b17576040516330667aab60e01b815260040160405180910390fd5b833b1561375d5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061382e9089908990889088908890600401614864565b6020604051808303816000875af1925050508015613869575060408051601f3d908101601f191682019092526138669181019061489e565b60015b613886576040516322ea035960e11b815260040160405180910390fd5b6001600160e01b0319811663f23a6e6160e01b146138b7576040516315d5293760e11b815260040160405180910390fd5b50505050505050565b6000806138cd83876146fc565b90506000816138de612710886146fc565b6138e89190614468565b6138f283876146fc565b6113a79190614731565b6000600661390c61438042614731565b61391691906147fe565b905090565b826001600160a01b03811661394357604051630b9f42b360e31b815260040160405180910390fd5b60008381526009602090815260408083206001600160a01b038816845290915290205433908381101561398957604051631cfb29e160e21b815260040160405180910390fd5b60008581526009602090815260408083206001600160a01b038a81168086529184528285208987039055898552600c845282852080548a9003905582518a81529384018990529092908616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050505050565b6040516001600160601b0319606083901b166020820152600090819060340160408051808303601f19018152908290528051602090910120600254733d602d80600a3d3981f3363d3d373d3d3d363d7360601b835260601b6001600160601b031916601483018190526e5af43d82803e903d91602b57fd5bf360881b6028840152909250906000908360378284f59695505050505050565b600080613aad86856146ca565b83612710613abb89896146fc565b613ac591906146fc565b613acf9190614731565b613ad99190614731565b613ae4906001614468565b9695505050505050565b828054613afa9061434b565b90600052602060002090601f016020900481019282613b1c5760008555613b62565b82601f10613b3557805160ff1916838001178555613b62565b82800160010185558215613b62579182015b82811115613b62578251825591602001919060010190613b47565b50613b6e929150613c9a565b5090565b828054613b7e9061434b565b90600052602060002090601f016020900481019282613ba05760008555613b62565b82601f10613bb95782800160ff19823516178555613b62565b82800160010185558215613b62579182015b82811115613b62578235825591602001919060010190613bcb565b6040518060c001604052806006906020820280368337509192915050565b600183019183908215613b625791602002820160005b83821115613c6057835183826101000a81548164ffffffffff021916908364ffffffffff1602179055509260200192600501602081600401049283019260010302613c1a565b8015613c915782816101000a81549064ffffffffff0219169055600501602081600401049283019260010302613c60565b5050613b6e9291505b5b80821115613b6e5760008155600101613c9b565b6001600160a01b0381168114611ccd57600080fd5b60008060408385031215613cd757600080fd5b8235613ce281613caf565b946020939093013593505050565b6001600160e01b031981168114611ccd57600080fd5b600060208284031215613d1857600080fd5b813561103d81613cf0565b600060208284031215613d3557600080fd5b5035919050565b60005b83811015613d57578181015183820152602001613d3f565b838111156113c05750506000910152565b60008151808452613d80816020860160208601613d3c565b601f01601f19169290920160200192915050565b60208152600061103d6020830184613d68565b60008083601f840112613db957600080fd5b5081356001600160401b03811115613dd057600080fd5b6020830191508360208260051b8501011115613deb57600080fd5b9250929050565b60008060208385031215613e0557600080fd5b82356001600160401b03811115613e1b57600080fd5b613e2785828601613da7565b90969095509350505050565b602080825282518282018190526000919060409081850190868401855b82811015613e7557815180518552860151868501529284019290850190600101613e50565b5091979650505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112613ea957600080fd5b81356001600160401b0380821115613ec357613ec3613e82565b604051601f8301601f19908116603f01168101908282118183101715613eeb57613eeb613e82565b81604052838152866020858801011115613f0457600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215613f3757600080fd5b82356001600160401b0380821115613f4e57600080fd5b613f5a86838701613e98565b93506020850135915080821115613f7057600080fd5b50613f7d85828601613e98565b9150509250929050565b600060c0828403121561237d57600080fd5b60008060008060808587031215613faf57600080fd5b8435613fba81613caf565b935060208501359250604085013591506060850135613fd881613caf565b939692955090935050565b600080600060608486031215613ff857600080fd5b833561400381613caf565b9250602084013561401381613caf565b929592945050506040919091013590565b60006020828403121561403657600080fd5b813561103d81613caf565b6000806000806040858703121561405757600080fd5b84356001600160401b038082111561406e57600080fd5b61407a88838901613da7565b9096509450602087013591508082111561409357600080fd5b506140a087828801613da7565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b818110156140e4578351835292840192918401916001016140c8565b50909695505050505050565b8015158114611ccd57600080fd5b6000806040838503121561411157600080fd5b823561411c81613caf565b9150602083013561412c816140f0565b809150509250929050565b60008060008060008060c0878903121561415057600080fd5b863561415b81613caf565b9550602087013561416b81613caf565b945060408701359350606087013592506080870135915060a087013561419081613caf565b809150509295509295509295565b60008083601f8401126141b057600080fd5b5081356001600160401b038111156141c757600080fd5b602083019150836020828501011115613deb57600080fd5b600080602083850312156141f257600080fd5b82356001600160401b0381111561420857600080fd5b613e278582860161419e565b6000806040838503121561422757600080fd5b823561423281613caf565b9150602083013561412c81613caf565b600080600080600060a0868803121561425a57600080fd5b853561426581613caf565b9450602086013561427581613caf565b9350604086013561428581613caf565b9250606086013561429581613caf565b915060808601356142a581613caf565b809150509295509295909350565b60008060008060008060a087890312156142cc57600080fd5b86356142d781613caf565b955060208701356142e781613caf565b9450604087013593506060870135925060808701356001600160401b0381111561431057600080fd5b61431c89828a0161419e565b979a9699509497509295939492505050565b60006020828403121561434057600080fd5b815161103d81613caf565b600181811c9082168061435f57607f821691505b6020821081141561237d57634e487b7160e01b600052602260045260246000fd5b600080845481600182811c91508083168061439c57607f831692505b60208084108214156143bc57634e487b7160e01b86526022600452602486fd5b8180156143d057600181146143e15761440e565b60ff1986168952848901965061440e565b60008b81526020902060005b868110156144065781548b8201529085019083016143ed565b505084890196505b5088865261442981870164173539b7b760d91b815260050190565b9a9950505050505050505050565b634e487b7160e01b600052601160045260246000fd5b600060001982141561446157614461614437565b5060010190565b6000821982111561447b5761447b614437565b500190565b634e487b7160e01b600052603260045260246000fd5b61ffff81168114611ccd57600080fd5b6000602082840312156144b857600080fd5b813561103d81614496565b6001600160401b0381168114611ccd57600080fd5b6000602082840312156144ea57600080fd5b813561103d816144c3565b63ffffffff81168114611ccd57600080fd5b60006020828403121561451957600080fd5b813561103d816144f5565b600063ffffffff8083168185168183048111821515161561454757614547614437565b02949350505050565b600081356108ca81614496565b600081356108ca816144c3565b813561457581613caf565b81546001600160a01b031981166001600160a01b0392909216918217835560208401356145a1816144f5565b63ffffffff60a01b60a09190911b166001600160c01b0319821683178117845560408501356145cf81614496565b6001600160d01b0319929092169092179190911760c09190911b61ffff60c01b1617815561462261460260608401614550565b82805461ffff60d01b191660d09290921b61ffff60d01b16919091179055565b600181016146536146356080850161455d565b825467ffffffffffffffff19166001600160401b0391909116178255565b610b1761466260a0850161455d565b82546fffffffffffffffff0000000000000000191660409190911b6fffffffffffffffff000000000000000016178255565b6020808252600190820152604360f81b604082015260600190565b6020808252600190820152601160fa1b604082015260600190565b6000828210156146dc576146dc614437565b500390565b6020808252600190820152602360f91b604082015260600190565b600081600019048311821515161561471657614716614437565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826147405761474061471b565b500490565b6001600160a01b0394909416845260208401929092526040830152606082015260800190565b6001600160a01b03949094168452602084019290925260408301526001600160781b0316606082015260800190565b60006001600160781b038083168185168083038211156147bc576147bc614437565b01949350505050565b81838237683db4b23e973539b7b760b91b9101908152600901919050565b6020808252600190820152605560f81b604082015260600190565b60008261480d5761480d61471b565b500690565b60006020828403121561482457600080fd5b5051919050565b6000825161483d818460208701613d3c565b9190910192915050565b60006020828403121561485957600080fd5b815161103d816140f0565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906113a790830184613d68565b6000602082840312156148b057600080fd5b815161103d81613cf056fe51ab1232a73b82b6b0acb0fa91b834cf6e258a1858c4e23c72ce97241c71aa0da264697066735822122098bce38d3aea4b9dc42ae2e6e710340893709d26e4ea86f069924410fdeb6c4464736f6c634300080b0033608060405234801561001057600080fd5b50610422806100206000396000f3fe6080604052600436106100435760003560e01c80630dfe16811461004f5780631b9a91a414610085578063d21220a7146100a7578063e4bbb5a8146100c557600080fd5b3661004a57005b600080fd5b34801561005b57600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b34801561009157600080fd5b506100a56100a036600461030b565b6100e5565b005b3480156100b357600080fd5b506001546001600160a01b0316610069565b3480156100d157600080fd5b506100a56100e0366004610346565b6101a3565b6002546001600160a01b031633146101105760405163ab243e4960e01b815260040160405180910390fd5b604080516000808252602082019092526001600160a01b03841690839060405161013a919061038d565b60006040518083038185875af1925050503d8060008114610177576040519150601f19603f3d011682016040523d82523d6000602084013e61017c565b606091505b505090508061019e57604051635aeccf6b60e01b815260040160405180910390fd5b505050565b6002546001600160a01b0316156101cd57604051635df00fd960e11b815260040160405180910390fd5b600080546001600160a01b03199081166001600160a01b03868116919091179092556001805482169285169283179055600280543392168217905560405163095ea7b360e01b81526004810191909152600019602482015263095ea7b3906044016020604051808303816000875af115801561024d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027191906103c8565b508061019e5760405163095ea7b360e01b815233600482015260001960248201526001600160a01b0384169063095ea7b3906044016020604051808303816000875af11580156102c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e991906103c8565b50505050565b80356001600160a01b038116811461030657600080fd5b919050565b6000806040838503121561031e57600080fd5b610327836102ef565b946020939093013593505050565b801515811461034357600080fd5b50565b60008060006060848603121561035b57600080fd5b610364846102ef565b9250610372602085016102ef565b9150604084013561038281610335565b809150509250925092565b6000825160005b818110156103ae5760208186018101518583015201610394565b818111156103bd576000828501525b509190910192915050565b6000602082840312156103da57600080fd5b81516103e581610335565b939250505056fea26469706673582212209fcbeac7373157eeb0ebd7f6978b88c8c1739d5e6be4ccb01380760ebe1b413064736f6c634300080b003368747470733a2f2f646174612e63657262792e66692f4365726279537761702f76312f",
    "deployedBytecode": "",
    "sourceMap": "291:67:3:-:0;;;-1:-1:-1;;;;;;291:67:3;;;316:42;291:67;;;;394:66;;;;;418:42;394:66;;;497:64;;;;;519:42;497:64;;;567;;;;;;589:42;567:64;;;234:44:4;198:2426:1;234:44:4;;198:2426:1;234:44:4;;;-1:-1:-1;;;234:44:4;;;;;;;;;;:::i;:::-;-1:-1:-1;324:38:4;;;;;;;;;;;;;-1:-1:-1;;;324:38:4;;;;;;;;;;;;:::i;:::-;;368:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;256:2331:1;;;;;;;;;;638:9:4;621:40;;;;;;;;:::i;:::-;;;;-1:-1:-1;;621:40:4;;;;;;;;;1560:13:20;621:40:4;1560:7:20;:13::i;:::-;-1:-1:-1;281:52:1;313:10;281:18;:52::i;:::-;373:42;344:26;503:3;480:20;673:5:3;498:2:1;480:20;:::i;:::-;:26;;;;:::i;:::-;452:54;-1:-1:-1;590:10:1;648:1;689:3;590:10;566:21;648:1;819:38;689:3;590:10;819:38;:::i;:::-;:63;;;;:::i;:::-;926:346;;;;;;;;-1:-1:-1;;;;;926:346:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;926:346:1;;;;;;;;;;;;;;;;;;;915:8;:357;;-1:-1:-1;;;;;;915:357:1;;;;-1:-1:-1;;;915:357:1;;;;;;;-1:-1:-1;;;;915:357:1;-1:-1:-1;;;915:357:1;;;-1:-1:-1;;;;915:357:1;;;;;-1:-1:-1;;;915:357:1;;;;;;;;;;;;-1:-1:-1;;;;;;915:357:1;;;;;;;;;;;926:346;-1:-1:-1;1325:67:1;;:::i;:::-;1426:248;;;;;;;;;;;1402:5;1426:248;;;;;;;;;;;;;;;;;;;;;;;;1402:282;;;;;;;;;;;;1426:248;;1402:282;;;;;;;;;;;:::i;:::-;-1:-1:-1;1402:282:1;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1402:282:1;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1402:282:1;;-1:-1:-1;;;;;1402:282:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1402:282:1;;;;;;;;;;;1699:13;:18;1695:671;;;1757:11;:56;;-1:-1:-1;;;;;;1757:56:1;1771:42;1757:56;;;1695:671;;;1834:13;1851:2;1834:19;1830:536;;;1888:11;:56;;-1:-1:-1;;;;;;1888:56:1;1902:42;1888:56;;;1830:536;;;1965:13;1982:3;1965:20;1961:405;;;2024:11;:56;;-1:-1:-1;;;;;;2024:56:1;2038:42;2024:56;;;1961:405;;;2101:13;2118:5;2101:22;2097:269;;;2164:11;:56;;-1:-1:-1;;;;;;2164:56:1;2178:42;2164:56;;;2097:269;;;2241:13;2258:3;2241:20;2237:129;;;2299:11;:56;;-1:-1:-1;;;;;;2299:56:1;2313:42;2299:56;;;2237:129;2408:11;:56;;-1:-1:-1;;;;;;2408:56:1;2422:42;2408:56;;;2533:37;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2490:19:1;:90;;-1:-1:-1;;;;;;2490:90:1;-1:-1:-1;;;;;2490:90:1;;;;;;;;;;-1:-1:-1;198:2426:1;;-1:-1:-1;;;;;;;198:2426:1;6875:111:20;6950:29;;;;:11;;:29;;;;;:::i;:::-;;6875:111;:::o;2347:204:19:-;2440:13;;;-1:-1:-1;;;;;2463:25:19;;;-1:-1:-1;;;;;;2463:25:19;;;;;;;2503:41;;2440:13;;;2463:25;2440:13;;2503:41;;2421:16;;2503:41;2411:140;2347:204;:::o;198:2426:1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;198:2426:1;;;-1:-1:-1;198:2426:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;198:2426:1;;;-1:-1:-1;;198:2426:1:o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;198:2426:1;;;-1:-1:-1;198:2426:1;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:380:26;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;647:1226::-;876:3;905:1;938:6;932:13;968:3;990:1;1018:9;1014:2;1010:18;1000:28;;1078:2;1067:9;1063:18;1100;1090:61;;1144:4;1136:6;1132:17;1122:27;;1090:61;1170:2;1218;1210:6;1207:14;1187:18;1184:38;1181:165;;;-1:-1:-1;;;1245:33:26;;1301:4;1298:1;1291:15;1331:4;1252:3;1319:17;1181:165;1362:18;1389:104;;;;1507:1;1502:320;;;;1355:467;;1389:104;-1:-1:-1;;1422:24:26;;1410:37;;1467:16;;;;-1:-1:-1;1389:104:26;;1502:320;472:1;465:14;;;509:4;496:18;;1597:1;1611:165;1625:6;1622:1;1619:13;1611:165;;;1703:14;;1690:11;;;1683:35;1746:16;;;;1640:10;;1611:165;;;1615:3;;1805:6;1800:3;1796:16;1789:23;;1355:467;;;;;;;1838:29;1863:3;-1:-1:-1;;;585:24:26;;634:1;625:11;;525:117;1838:29;1831:36;647:1226;-1:-1:-1;;;;647:1226:26:o;1878:265::-;1918:7;1984:1;1980;1976:6;1972:14;1969:1;1966:21;1961:1;1954:9;1947:17;1943:45;1940:168;;;2030:10;2025:3;2021:20;2018:1;2011:31;2065:4;2062:1;2055:15;2093:4;2090:1;2083:15;1940:168;-1:-1:-1;2128:9:26;;1878:265::o;2148:217::-;2188:1;2214;2204:132;;2258:10;2253:3;2249:20;2246:1;2239:31;2293:4;2290:1;2283:15;2321:4;2318:1;2311:15;2204:132;-1:-1:-1;2350:9:26;;2148:217::o;:::-;198:2426:1;;;;;;",
    "deployedSourceMap": "198:2426:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3664:230:20;;;;;;;;;;-1:-1:-1;3664:230:20;;;;;:::i;:::-;;:::i;:::-;;;616:25:26;;;604:2;589:18;3664:230:20;;;;;;;;829:199:24;;;;;;;;;;-1:-1:-1;829:199:24;;;;;:::i;:::-;-1:-1:-1;;;;;;981:40:24;-1:-1:-1;;;981:40:24;;829:199;;;;1203:14:26;;1196:22;1178:41;;1166:2;1151:18;829:199:24;1038:187:26;1106:191:0;;;;;;;;;;-1:-1:-1;1106:191:0;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1579:32:26;;;1561:51;;1549:2;1534:18;1106:191:0;1415:203:26;677:118:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1368:228::-;;;;;;;;;;-1:-1:-1;1368:228:4;;;;;:::i;:::-;;:::i;1041:321::-;;;;;;;;;;;;;:::i;929:106::-;;;;;;;;;;-1:-1:-1;1026:2:4;929:106;;550:412:6;;;;;;;;;;-1:-1:-1;550:412:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1741:254:2:-;;;;;;;;;;-1:-1:-1;1741:254:2;;;;;:::i;:::-;;:::i;:::-;;2001:741;;;;;;;;;;-1:-1:-1;2001:741:2;;;;;:::i;:::-;;:::i;5242:3461:7:-;;;;;;:::i;:::-;;:::i;1452:1518:6:-;;;;;;;;;;-1:-1:-1;1452:1518:6;;;;;:::i;:::-;;:::i;968:478::-;;;;;;;;;;-1:-1:-1;968:478:6;;;;;:::i;:::-;;:::i;4051::20:-;;;;;;;;;;-1:-1:-1;4051:478:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2464:118::-;;;;;;;;;;-1:-1:-1;2464:118:20;;;;;:::i;:::-;2524:4;2547:24;;;:19;:24;;;;;;:28;;;2464:118;254:161:6;;;;;;;;;;-1:-1:-1;254:161:6;;;;;:::i;:::-;-1:-1:-1;;;;;387:21:6;357:7;387:21;;;:13;:21;;;;;;;254:161;1719:101:19;;;;;;;;;;;;;:::i;517:995:7:-;;;;;;;;;;-1:-1:-1;517:995:7;;;;;:::i;:::-;;:::i;8709:511::-;;;;;;;;;;-1:-1:-1;8709:511:7;;;;;:::i;:::-;;:::i;1594:362::-;;;;;;:::i;:::-;;:::i;421:123:6:-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;522:15:6;;;;;;;;529:8;522:15;-1:-1:-1;;;;;522:15:6;;;;;-1:-1:-1;;;522:15:6;;;;;;;;-1:-1:-1;;;522:15:6;;;;;;;;;;;-1:-1:-1;;;522:15:6;;;;;;;;;;;-1:-1:-1;;;;;522:15:6;;;;;;;-1:-1:-1;;;522:15:6;;;;;;;;;421:123;;;;;;;8469:13:26;;-1:-1:-1;;;;;8465:39:26;8447:58;;8565:4;8553:17;;;8547:24;8573:10;8543:41;8521:20;;;8514:71;8632:4;8620:17;;;8614:24;8657:6;8701:21;;;8679:20;;;8672:51;;;;8783:4;8771:17;;;8765:24;8761:33;;;8739:20;;;8732:63;8844:4;8832:17;;;8826:24;-1:-1:-1;;;;;8925:23:26;;;8903:20;;;8896:53;;;;8492:3;8997:17;;;8991:24;8987:33;8965:20;;;8958:63;;;;8434:3;8419:19;;8250:777;1064:92:19;;;;;;;;;;-1:-1:-1;1136:13:19;;-1:-1:-1;;;;;1136:13:19;1064:92;;801:122:4;;;;;;;;;;;;;:::i;1602:285::-;;;;;;;;;;-1:-1:-1;1602:285:4;;;;;:::i;:::-;;:::i;197:5332:12:-;;;;;;:::i;:::-;;:::i;1517:218:2:-;;;;;;;;;;-1:-1:-1;1517:218:2;;;;;:::i;:::-;;:::i;724:436::-;;;;;;;;;;;;;:::i;2249:122:20:-;;;;;;;;;;-1:-1:-1;2249:122:20;;;;;:::i;:::-;2314:7;2340:24;;;:19;:24;;;;;;;2249:122;1200:311:2;;;:::i;2976:1512:6:-;;;;;;;;;;-1:-1:-1;2976:1512:6;;;;;:::i;:::-;;:::i;3586:764:2:-;;;;;;;;;;-1:-1:-1;3586:764:2;;;;;:::i;:::-;;:::i;2896:402::-;;;;;;:::i;:::-;;:::i;4596:213:20:-;;;;;;;;;;-1:-1:-1;4596:213:20;;;;;:::i;:::-;-1:-1:-1;;;;;4764:27:20;;;4737:4;4764:27;;;:17;:27;;;;;;;;:38;;;;;;;;;;;;;;;4596:213;282:402:2;;;;;;;;;;-1:-1:-1;282:402:2;;;;;:::i;:::-;;:::i;1894:408:4:-;;;;;;;;;;-1:-1:-1;1894:408:4;;;;;:::i;:::-;;:::i;1969:224:19:-;;;;;;;;;;-1:-1:-1;1969:224:19;;;;;:::i;:::-;;:::i;5585:6025:12:-;;;;;;:::i;:::-;;:::i;3664:230:20:-;3834:7;3807:8;-1:-1:-1;;;;;1864:21:20;;1860:96;;1908:37;;-1:-1:-1;;;1908:37:20;;;;;;;;;;;1860:96;-1:-1:-1;;3864:13:20::1;::::0;;;:8:::1;:13;::::0;;;;;;;-1:-1:-1;;;;;3864:23:20;;;::::1;::::0;;;;;;;;3664:230::o;1106:191:0:-;1242:48;;-1:-1:-1;;;1242:48:0;;;;;616:25:26;;;1212:7:0;;321:42;;1242;;589:18:26;;1242:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1235:55;1106:191;-1:-1:-1;;1106:191:0:o;677:118:4:-;740:13;776:12;769:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;677:118;:::o;1368:228::-;1482:13;1555:9;1566:3;1538:41;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1511:78;;1368:228;;;:::o;1041:321::-;1111:7;1134:9;1153:25;1216:105;1250:1;1223:19;1250:1;1243:3;;;:::i;:::-;;;;1223:24;;;;;;;;;;;;:28;1216:105;;;1288:22;;;;:19;:22;;;;;;1267:43;;;;:::i;:::-;;;1216:105;;550:412:6;665:21;702:33;757:7;-1:-1:-1;;;;;738:34:6;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;738:34:6;;;;;;;;;;;;;;;;702:70;;787:9;782:146;798:18;;;782:146;;;837:13;853:7;;861:1;853:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;837:26;;894:23;911:5;894:16;:23::i;:::-;877:11;889:1;877:14;;;;;;;;:::i;:::-;;;;;;:40;;;;823:105;818:3;;;;;:::i;:::-;;;;782:146;;;-1:-1:-1;944:11:6;550:412;-1:-1:-1;;;550:412:6:o;1741:254:2:-;1290:10:19;1279:7;1136:13;;-1:-1:-1;;;;;1136:13:19;;1064:92;1279:7;-1:-1:-1;;;;;1279:21:19;;1275:85;;1323:26;;-1:-1:-1;;;1323:26:19;;;;;;;;;;;1275:85;1912:31:2;;::::1;::::0;:12:::1;::::0;:31:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;1953:35:2;;::::1;::::0;:14:::1;::::0;:35:::1;::::0;::::1;::::0;::::1;:::i;:::-;;1741:254:::0;;:::o;2001:741::-;1290:10:19;1279:7;1136:13;;-1:-1:-1;;;;;1136:13:19;;1064:92;1279:7;-1:-1:-1;;;;;1279:21:19;;1275:85;;1323:26;;-1:-1:-1;;;1323:26:19;;;;;;;;;;;1275:85;2152:20:2::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;:25;;::::0;;:84:::1;;-1:-1:-1::0;2216:20:2::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;2193:43;;:20;::::0;;;::::1;::::0;::::1;;:::i;:::-;:43;;;2152:84;:126;;;-1:-1:-1::0;2275:3:2::1;2252:20;::::0;;;::::1;::::0;::::1;;:::i;:::-;:26;;;2152:126;2135:268;;;2368:24;;-1:-1:-1::0;;;2368:24:2::1;;;;;;;;;;;2135:268;2450:30;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;2417:63:2::1;:30;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;2417:63:2::1;;2413:135;;;2503:34;;-1:-1:-1::0;;;2503:34:2::1;;;;;;;;;;;2413:135;673:5:3;2562:27:2;::::0;;;::::1;::::0;::::1;;:::i;:::-;:31;::::0;2592:1:::1;2562:31;:::i;:::-;:50;;;2558:147;;2635:59;;-1:-1:-1::0;;;2635:59:2::1;;;;;;;;;;;2558:147;2726:9:::0;2715:8:::1;:20;2726:9:::0;2715:8;:20:::1;:::i;5242:3461:7:-:0;-1:-1:-1;;;;;241:21:10;;5598:7:7;241:21:10;;;:13;:21;;;;;;5457:6:7;;241:26:10;;:51;;-1:-1:-1;281:11:10;;-1:-1:-1;;;;;271:21:10;;;281:11;;271:21;241:51;237:185;;;308:11;;-1:-1:-1;;;308:11:10;;;;;;;:::i;:::-;;;;;;;;237:185;5497:16:7::1;713::10;695:15;:34;691:171;;;745:11;;-1:-1:-1::0;;;745:11:10::1;;;;;;;:::i;691:171::-;-1:-1:-1::0;;;;;5706:21:7;::::2;5689:14;5706:21:::0;;;:13:::2;:21;::::0;;;;;5757:13;;5706:21;;5689:14;;;5706:21;;5757:13;::::2;;;;;:::i;:::-;;;;;;;;;;;5737:33;;5781:22;5806:57;5847:6;5806:27;:57::i;:::-;5781:82;;5925:38;5966:46;5996:6;5966:16;:46::i;:::-;5925:87;;6086:134;6123:6;6143:10;6167:14;6195:15;6086:23;:134::i;:::-;6281:37;6321:46;6351:6;6321:16;:46::i;:::-;6504:31:::0;;6459:30;;6281:86;;-1:-1:-1;6459:76:7::2;::::0;::::2;:::i;:::-;6441:94;;6569:1;6550:15;:20;6546:170;;6586:11;;-1:-1:-1::0;;;6586:11:7::2;;;;;;;:::i;6546:170::-;6881:19;::::0;::::2;::::0;7015:32:::2;::::0;::::2;::::0;6981:31;;6805:33:::2;::::0;6841:258:::2;::::0;6881:19;;;::::2;-1:-1:-1::0;;;;;6881:19:7::2;::::0;6976:72:::2;::::0;6981:66:::2;::::0;::::2;:::i;:::-;6976:4;:72::i;:::-;7062:27;::::0;;;:19:::2;:27;::::0;;;;;6841:26:::2;:258::i;:::-;7129:8;:27:::0;6805:294;;-1:-1:-1;7110:115:7::2;::::0;-1:-1:-1;;;;;7129:27:7::2;7170:6:::0;6805:294;7110:5:::2;:115::i;:::-;7356:31:::0;;7265:16:::2;7314:27:::0;;;:19:::2;:27;::::0;;;;;7265:16;;7356:31;7284:57:::2;::::0;:15;:57:::2;:::i;:::-;:103;;;;:::i;:::-;7265:122;;7398:82;7417:11;7442:6;7462:8;7398:5;:82::i;:::-;7612:26;7718:18;:31;;;7671:18;:32;;;7641:15;:62;;;;:::i;:::-;:108;;;;:::i;:::-;7612:137;;7786:1;7764:18;:23;7760:108;;7810:47;;-1:-1:-1::0;;;7810:47:7::2;;;;;;;;;;;7760:108;7954:11;::::0;7930:123:::2;::::0;-1:-1:-1;;;7930:123:7;;-1:-1:-1;;;;;21138:32:26;;;7930:123:7::2;::::0;::::2;21120:51:26::0;21187:18;;;21180:34;;;7954:11:7;;::::2;::::0;7930:53:::2;::::0;21093:18:26;;7930:123:7::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;;;8180:31:7::2;::::0;::::2;::::0;8147:30;;8142:70:::2;::::0;8147:64:::2;::::0;::::2;:::i;8142:70::-;8099:4;:19;;;:123;;;;;-1:-1:-1::0;;;;;8099:123:7::2;;;;;-1:-1:-1::0;;;;;8099:123:7::2;;;;;;8308:127;8336:6;8356:15;8385:18;8417:8;8308:127;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;;;;;;;8534:6:7::2;8554:17;:30;;;8598:17;:31;;;8643:4;:17;;;;;;;;;;-1:-1:-1::0;;;;;8643:17:7::2;8516:154;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;8688:8:7;5242:3461;-1:-1:-1;;;;;;;;;;;;;5242:3461:7:o;1452:1518:6:-;1818:11;;1630:7;;;;-1:-1:-1;;;;;1805:24:6;;;1818:11;;1805:24;1801:295;;;1902:147;1950:26;1967:8;1950:16;:26::i;:::-;1994:8;2020:15;1902:30;:147::i;:::-;1884:165;-1:-1:-1;2063:22:6;;-1:-1:-1;2063:22:6;1801:295;2158:11;;-1:-1:-1;;;;;2146:23:6;;;2158:11;;2146:23;2142:296;;;2242:149;2290:27;2307:9;2290:16;:27::i;:::-;2335:9;2362:15;2242:30;:149::i;2142:296::-;2611:23;2637:131;2681:26;2698:8;2681:16;:26::i;:::-;2721:8;2743:15;2637:30;:131::i;:::-;2611:157;;2797:133;2841:27;2858:9;2841:16;:27::i;:::-;2882:9;2905:15;2797:30;:133::i;:::-;2779:151;-1:-1:-1;;;1452:1518:6;;;;;;:::o;968:478::-;-1:-1:-1;;;;;1210:21:6;;1089:11;1210:21;;;:13;:21;;;;;;1204:28;;1089:11;;;;1204:28;;;;;;:::i;:::-;;;;;;;;;;;1184:48;;1251:32;1286:46;1316:6;1286:16;:46::i;:::-;1251:81;;1350:89;1399:4;1417:12;1350:35;:89::i;:::-;1343:96;968:478;-1:-1:-1;;;;968:478:6:o;4051::20:-;4267:16;4219:4;4232:9;2065:29;;;2061:94;;2117:27;;-1:-1:-1;;;2117:27:20;;;;;;;;;;;2061:94;4299:30:::1;4346:9:::0;-1:-1:-1;;;;;4332:31:20;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;4332:31:20::1;;4299:64;;4379:9;4374:118;4394:15:::0;;::::1;4374:118;;;4449:32;4459:9;;4469:1;4459:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;4473:4;;4478:1;4473:7;;;;;;;:::i;:::-;;;;;;;4449:9;:32::i;:::-;4430:13;4444:1;4430:16;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:51;4411:3:::1;::::0;::::1;:::i;:::-;;;4374:118;;;-1:-1:-1::0;4509:13:20;4051:478;-1:-1:-1;;;;;;;4051:478:20:o;1719:101:19:-;1290:10;1279:7;1136:13;;-1:-1:-1;;;;;1136:13:19;;1064:92;1279:7;-1:-1:-1;;;;;1279:21:19;;1275:85;;1323:26;;-1:-1:-1;;;1323:26:19;;;;;;;;;;;1275:85;1783:30:::1;1810:1;1783:18;:30::i;:::-;1719:101::o:0;517:995:7:-;-1:-1:-1;;;;;745:21:7;;719:17;745:21;;;:13;:21;;;;;;739:28;;719:17;;745:21;739:28;;;;;;:::i;:::-;;;;;;;;;;;719:48;;778:32;813:46;843:6;813:16;:46::i;:::-;874:17;;;;778:81;;-1:-1:-1;;;;;;874:17:7;;;:38;870:411;;;983:17;;;:49;;1012:19;;983:17;;;:49;;1012:19;;-1:-1:-1;;;;;983:49:7;;:::i;:::-;;;-1:-1:-1;;;;;983:49:7;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1162:11:7;;1138:132;;-1:-1:-1;;;1138:132:7;;1209:10;1138:132;;;21120:51:26;21187:18;;;21180:34;;;-1:-1:-1;;;;;1162:11:7;;;;1138:53;;21093:18:26;;1138:132:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;870:411;1399:25;;1438:26;;;;1478:17;;;;1361:144;;-1:-1:-1;;;;;;;;;;;1361:144:7;;;1379:6;;1399:25;;1438:26;;-1:-1:-1;;;;;1478:17:7;;1361:144;:::i;:::-;;;;;;;;641:871;;517:995;;:::o;8709:511::-;-1:-1:-1;;;;;241:21:10;;9065:7:7;241:21:10;;;:13;:21;;;;;;8924:6:7;;241:26:10;;:51;;-1:-1:-1;281:11:10;;-1:-1:-1;;;;;271:21:10;;;281:11;;271:21;241:51;237:185;;;308:11;;-1:-1:-1;;;308:11:10;;;;;;;:::i;237:185::-;8964:16:7::1;713::10;695:15;:34;691:171;;;745:11;;-1:-1:-1::0;;;745:11:10::1;;;;;;;:::i;691:171::-;9095:118:7::2;9130:6;9150:28;9192:11;9095:21;:118::i;:::-;9088:125:::0;8709:511;-1:-1:-1;;;;;;;8709:511:7:o;1594:362::-;1790:159;1815:6;1835:15;1864:19;1897:1;1928:11;1790;:159::i;:::-;1594:362;;;;:::o;801:122:4:-;866:13;902:14;895:21;;;;;:::i;1602:285::-;900:37:0;972:54;249:1;972:21;:54::i;:::-;900:136;;1046:18;-1:-1:-1;;;;;1046:34:0;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:98:4::1;1814:10;1838:9;1861;1782:18;:98::i;197:5332:12:-:0;589:16;488;713::10;695:15;:34;691:171;;;745:11;;-1:-1:-1;;;745:11:10;;;;;;;:::i;691:171::-;695:9:12::1;-1:-1:-1::0;;;;;683:21:12::1;:8;-1:-1:-1::0;;;;;683:21:12::1;;679:173;;;720:11;::::0;-1:-1:-1;;;720:11:12;;22566:2:26;720:11:12::1;::::0;::::1;22548:21:26::0;22605:1;22585:18;;;22578:29;-1:-1:-1;;;22623:18:26;;;22616:31;22664:18;;720:11:12::1;22364:324:26::0;679:173:12::1;958:1;939:15;:20;935:170;;975:11;;-1:-1:-1::0;;;975:11:12::1;;;;;;;:::i;935:170::-;1115:22;1140:59;1181:8;1140:27;:59::i;:::-;1237:16;::::0;;1251:1:::1;1237:16:::0;;;;;::::1;::::0;;1115:84;;-1:-1:-1;1210:24:12::1;::::0;1237:16;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;1237:16:12::1;1210:43;;1276:15;1263:7;1271:1;1263:10;;;;;;;;:::i;:::-;;;;;;:28;;;::::0;::::1;1302:40;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;1302:40:12::1;1404:11;::::0;-1:-1:-1;;;;;1391:24:12;;::::1;1404:11:::0;::::1;1391:24;1387:1129;;;1507:56;1541:8;1507:16;:56::i;:::-;1484:79;;1630:141;1678:20;1716:8;1742:15;1630:30;:141::i;:::-;1617:7;1625:1;1617:10;;;;;;;;:::i;:::-;;;;;;:154;;;::::0;::::1;1836:19;1823:7;1831:1;1823:10;;;;;;;;:::i;:::-;;;;;;;:32;1819:206;;;1875:11;::::0;-1:-1:-1;;;1875:11:12;;22895:2:26;1875:11:12::1;::::0;::::1;22877:21:26::0;22934:1;22914:18;;;22907:29;-1:-1:-1;;;22952:18:26;;;22945:31;22993:18;;1875:11:12::1;22693:324:26::0;1819:206:12::1;2106:156;2147:8;2173:10;2201:14;2233:15;2106:23;:156::i;:::-;2317:159;2340:8;2366:20;2404:1;2423:7;2431:1;2423:10;;;;;;;;:::i;:::-;;;;;;;2451:11;2317:5;:159::i;:::-;-1:-1:-1::0;2498:7:12;-1:-1:-1;2491:14:12::1;::::0;-1:-1:-1;2491:14:12::1;1387:1129;2560:23;2586:60;2627:9;2586:27;:60::i;:::-;2560:86;;2657:41;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;2657:41:12::1;2725:11;::::0;-1:-1:-1;;;;;2713:23:12;;::::1;2725:11:::0;::::1;2713:23;2709:1135;;;2829:57;2863:9;2829:16;:57::i;:::-;2805:81;;2953:143;3001:21;3040:9;3067:15;2953:30;:143::i;:::-;2940:7;2948:1;2940:10;;;;;;;;:::i;:::-;;;;;;:156;;;::::0;::::1;3161:19;3148:7;3156:1;3148:10;;;;;;;;:::i;:::-;;;;;;;:32;3144:206;;;3200:11;::::0;-1:-1:-1;;;3200:11:12;;23224:2:26;3200:11:12::1;::::0;::::1;23206:21:26::0;23263:1;23243:18;;;23236:29;-1:-1:-1;;;23281:18:26;;;23274:31;23322:18;;3200:11:12::1;23022:324:26::0;3144:206:12::1;3431:157;3472:8;3498:10;3526:15;3559;3431:23;:157::i;:::-;3643:161;3666:9;3693:21;3732:7;3740:1;3732:10;;;;;;;;:::i;:::-;;;;;;;3760:1;3779:11;3643:5;:161::i;:::-;3826:7;3819:14;;;;;;;;;2709:1135;4079:48;4109:8;4079:16;:48::i;:::-;4056:71;;4174:23;4200:125;4244:20;4278:8;4300:15;4200:30;:125::i;:::-;4174:151;;4409:49;4439:9;4409:16;:49::i;:::-;4385:73;;4482:127;4526:21;4561:9;4584:15;4482:30;:127::i;:::-;4469:7;4477:1;4469:10;;;;;;;;:::i;:::-;;;;;;:140;;;::::0;::::1;4666:19;4653:7;4661:1;4653:10;;;;;;;;:::i;:::-;;;;;;;:32;4649:194;;;4701:11;::::0;-1:-1:-1;;;4701:11:12;;23224:2:26;4701:11:12::1;::::0;::::1;23206:21:26::0;23263:1;23243:18;;;23236:29;-1:-1:-1;;;23281:18:26;;;23274:31;23322:18;;4701:11:12::1;23022:324:26::0;4649:194:12::1;4916:136;4953:8;4975:10;4999:14;5027:15;4916:23;:136::i;:::-;5168:144;5187:8;5209:20;5243:1;5258:15;5287;5168:5;:144::i;:::-;5359:138;5378:9;5402:21;5437:7;5445:1;5437:10;;;;;;;;:::i;:::-;;;;;;;5461:1;5476:11;5359:5;:138::i;:::-;-1:-1:-1::0;5515:7:12;;-1:-1:-1;;;;;871:1:10::1;197:5332:12::0;;;;;;;;;:::o;1517:218:2:-;1290:10:19;1279:7;1136:13;;-1:-1:-1;;;;;1136:13:19;;1064:92;1279:7;-1:-1:-1;;;;;1279:21:19;;1275:85;;1323:26;;-1:-1:-1;;;1323:26:19;;;;;;;;;;;1275:85;1632:61:2::1;1664:13;;1647:44;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1632:7;:61::i;:::-;1703:25;:9;1715:13:::0;;1703:25:::1;:::i;724:436::-:0;824:14;;799:153;;-1:-1:-1;;;;;824:14:2;852:10;876;-1:-1:-1;;;;;932:10:2;799:11;:153::i;:::-;1026:13;;1001:152;;-1:-1:-1;;;;;1026:13:2;1053:10;;-1:-1:-1;;;;;1133:10:2;1001:11;:152::i;1200:311::-;1290:10:19;1279:7;1136:13;;-1:-1:-1;;;;;1136:13:19;;1064:92;1279:7;-1:-1:-1;;;;;1279:21:19;;1275:85;;1323:26;;-1:-1:-1;;;1323:26:19;;;;;;;;;;;1275:85;1385:11:2::1;::::0;1360:144:::1;::::0;-1:-1:-1;;;;;1385:11:2::1;1410:4;1428:10;-1:-1:-1::0;;;;;1484:10:2::1;1360:11;:144::i;2976:1512:6:-:0;3341:11;;3154:7;;;;-1:-1:-1;;;;;3328:24:6;;;3341:11;;3328:24;3324:294;;;3424:147;3471:26;3488:8;3471:16;:26::i;:::-;3515:8;3541:16;3424:29;:147::i;3324:294::-;3680:11;;-1:-1:-1;;;;;3668:23:6;;;3680:11;;3668:23;3664:295;;;3763:149;3810:27;3827:9;3810:16;:27::i;:::-;3855:9;3882:16;3763:29;:149::i;3664:295::-;4132:23;4158:132;4201:26;4218:8;4201:16;:26::i;:::-;4241:9;4264:16;4158:29;:132::i;:::-;4132:158;;4318:131;4361:27;4378:9;4361:16;:27::i;:::-;4402:8;4424:15;4318:29;:131::i;3586:764:2:-;1290:10:19;1279:7;1136:13;;-1:-1:-1;;;;;1136:13:19;;1064:92;1279:7;-1:-1:-1;;;;;1279:21:19;;1275:85;;1323:26;;-1:-1:-1;;;1323:26:19;;;;;;;;;;;1275:85;-1:-1:-1;;;;;241:21:10;::::1;;::::0;;;:13:::1;:21;::::0;;;;;3756:6:2;;241:26:10;;:51:::1;;-1:-1:-1::0;281:11:10::1;::::0;-1:-1:-1;;;;;271:21:10;;::::1;281:11:::0;::::1;271:21;241:51;237:185;;;308:11;;-1:-1:-1::0;;;308:11:10::1;;;;;;;:::i;237:185::-;3778:32:2::2;3813:46;3843:6;3813:16;:46::i;:::-;-1:-1:-1::0;;;;;3964:21:2;::::2;3938:17;3964:21:::0;;;:13:::2;:21;::::0;;;;;3958:28;;3778:81;;-1:-1:-1;3938:17:2;;;;3964:21;3958:28;::::2;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;;4046:17:::2;3958:28;::::0;;::::2;;4046:17:::0;;::::2;:70:::0;;-1:-1:-1;;;;;;4046:70:2::2;;::::0;::::2;;::::0;;4235:25;;4274:26;;::::2;::::0;4197:146:::2;::::0;3958:28;;-1:-1:-1;;;;;;;;;;;;4197:146:2;::::2;::::0;4215:6;;4274:26;4087:19;;4197:146:::2;:::i;:::-;;;;;;;;3768:582;;1369:1:19::1;3586:764:2::0;;:::o;2896:402::-;1290:10:19;1279:7;1136:13;;-1:-1:-1;;;;;1136:13:19;;1064:92;1279:7;-1:-1:-1;;;;;1279:21:19;;1275:85;;1323:26;;-1:-1:-1;;;1323:26:19;;;;;;;;;;;1275:85;3115:176:2::1;3140:6:::0;3160:15;3189:19;-1:-1:-1;;;;;3270:11:2;3115::::1;:176::i;282:402::-:0;548:14;:32;;-1:-1:-1;;;;;548:32:2;;;-1:-1:-1;;;;;;548:32:2;;;;;;;590:11;:26;;;;;;;;;;;626:13;:30;;;;;;;;;;;;;;;667:10;:8;:10::i;:::-;282:402;;;;;:::o;1894:408:4:-;2130:5;-1:-1:-1;;;;;1642:19:20;;1651:10;1642:19;:58;;;;-1:-1:-1;;;;;;4764:27:20;;4737:4;4764:27;;;:17;:27;;;;;;;;1689:10;4764:38;;;;;;;;;;1665:35;1638:133;;;1723:37;;-1:-1:-1;;;1723:37:20;;;;;;;;;;;1638:133;900:37:0::1;972:54;249:1;972:21;:54::i;:::-;900:136;;1046:18;-1:-1:-1::0;;;;;1046:34:0::1;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2175:120:4::2;2206:5;2225:3;2242;2259:7;2280:5;;2175:17;:120::i;:::-;890:210:0::1;1894:408:4::0;;;;;;;:::o;1969:224:19:-;1290:10;1279:7;1136:13;;-1:-1:-1;;;;;1136:13:19;;1064:92;1279:7;-1:-1:-1;;;;;1279:21:19;;1275:85;;1323:26;;-1:-1:-1;;;1323:26:19;;;;;;;;;;;1275:85;-1:-1:-1;;;;;2054:23:19;::::1;2050:98;;2100:37;;-1:-1:-1::0;;;2100:37:19::1;;;;;;;;;;;2050:98;2157:29;2176:9;2157:18;:29::i;:::-;1969:224:::0;:::o;5585:6025:12:-;6008:16;5907;713::10;695:15;:34;691:171;;;745:11;;-1:-1:-1;;;745:11:10;;;;;;;:::i;691:171::-;6056:9:12::1;-1:-1:-1::0;;;;;6044:21:12::1;:8;-1:-1:-1::0;;;;;6044:21:12::1;;6040:173;;;6081:11;::::0;-1:-1:-1;;;6081:11:12;;22566:2:26;6081:11:12::1;::::0;::::1;22548:21:26::0;22605:1;22585:18;;;22578:29;-1:-1:-1;;;22623:18:26;;;22616:31;22664:18;;6081:11:12::1;22364:324:26::0;6040:173:12::1;6223:22;6248:59;6289:8;6248:27;:59::i;:::-;6345:16;::::0;;6359:1:::1;6345:16:::0;;;;;::::1;::::0;;6223:84;;-1:-1:-1;6318:24:12::1;::::0;6345:16;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;6345:16:12::1;6318:43;;6384:16;6371:7;6379:1;6371:10;;;;;;;;:::i;:::-;;;;;;:29;;;::::0;::::1;6411:40;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;6411:40:12::1;6514:11;::::0;-1:-1:-1;;;;;6501:24:12;;::::1;6514:11:::0;::::1;6501:24;6497:1397;;;6617:56;6651:8;6617:16;:56::i;:::-;6594:79;;6740:141;6787:20;6825:8;6851:16;6740:29;:141::i;:::-;6727:7;6735:1;6727:10;;;;;;;;:::i;:::-;;;;;;:154;;;::::0;::::1;6946:18;6933:7;6941:1;6933:10;;;;;;;;:::i;:::-;;;;;;;:31;6929:205;;;6984:11;::::0;-1:-1:-1;;;6984:11:12;;23972:2:26;6984:11:12::1;::::0;::::1;23954:21:26::0;24011:1;23991:18;;;23984:29;-1:-1:-1;;;24029:18:26;;;24022:31;24070:18;;6984:11:12::1;23770:324:26::0;6929:205:12::1;7243:1;7229:7;7237:1;7229:10;;;;;;;;:::i;:::-;;;;;;;:15;7225:177;;7264:11;;-1:-1:-1::0;;;7264:11:12::1;;;;;;;:::i;7225:177::-;7483:151;7524:8;7550:10;7578:14;7610:7;7618:1;7610:10;;;;;;;;:::i;:::-;;;;;;;7483:23;:151::i;:::-;7689:165;7712:8;7738:20;7776:1;7795:16;7829:11;7689:5;:165::i;6497:1397::-;7939:23;7965:60;8006:9;7965:27;:60::i;:::-;7939:86;;8036:41;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;8036:41:12::1;8104:11;::::0;-1:-1:-1;;;;;8092:23:12;;::::1;8104:11:::0;::::1;8092:23;8088:1403;;;8208:57;8242:9;8208:16;:57::i;:::-;8184:81;;8332:143;8379:21;8418:9;8445:16;8332:29;:143::i;:::-;8319:7;8327:1;8319:10;;;;;;;;:::i;:::-;;;;;;:156;;;::::0;::::1;8540:18;8527:7;8535:1;8527:10;;;;;;;;:::i;:::-;;;;;;;:31;8523:205;;;8578:11;::::0;-1:-1:-1;;;8578:11:12;;24301:2:26;8578:11:12::1;::::0;::::1;24283:21:26::0;24340:1;24320:18;;;24313:29;-1:-1:-1;;;24358:18:26;;;24351:31;24399:18;;8578:11:12::1;24099:324:26::0;8523:205:12::1;8837:1;8823:7;8831:1;8823:10;;;;;;;;:::i;:::-;;;;;;;:15;8819:177;;8858:11;;-1:-1:-1::0;;;8858:11:12::1;;;;;;;:::i;8819:177::-;9077:152;9118:8;9144:10;9172:15;9205:7;9213:1;9205:10;;;;;;;;:::i;9077:152::-;9284:167;9307:9;9334:21;9373:16;9407:1;9426:11;9284:5;:167::i;8088:1403::-;9731:49;9761:9;9731:16;:49::i;:::-;9707:73;;9826:23;9852:127;9895:21;9930:9;9953:16;9852:29;:127::i;:::-;9826:153;;10087:1;10068:15;:20;10064:170;;10104:11;;-1:-1:-1::0;;;10104:11:12::1;;;;;;;:::i;10064:170::-;10316:48;10346:8;10316:16;:48::i;:::-;10293:71;;10388:124;10431:20;10465:8;10487:15;10388:29;:124::i;:::-;10375:7;10383:1;10375:10;;;;;;;;:::i;:::-;;;;;;:137;;;::::0;::::1;10614:1;10600:7;10608:1;10600:10;;;;;;;;:::i;:::-;;;;;;;:15;10596:165;;10631:11;;-1:-1:-1::0;;;10631:11:12::1;;;;;;;:::i;10596:165::-;10817:18;10804:7;10812:1;10804:10;;;;;;;;:::i;:::-;;;;;;;:31;10800:193;;;10851:11;::::0;-1:-1:-1;;;10851:11:12;;23972:2:26;10851:11:12::1;::::0;::::1;23954:21:26::0;24011:1;23991:18;;;23984:29;-1:-1:-1;;;24029:18:26;;;24022:31;24070:18;;10851:11:12::1;23770:324:26::0;10800:193:12::1;11066:131;11103:8;11125:10;11149:14;11177:7;11185:1;11177:10;;;;;;;;:::i;11066:131::-;11244:144;11263:8;11285:20;11319:1;11334:15;11363;11244:5;:144::i;:::-;11435:143;11454:9;11477:21;11512:16;11542:1;11557:11;11435:5;:143::i;359:353:11:-:0;-1:-1:-1;;;;;;;;;;;;;;;;;497:13:11;513:57;554:6;513:27;:57::i;:::-;497:73;;588:117;;;;;;;;614:31;631:6;639:5;614:16;:31::i;:::-;588:117;;676:11;;588:117;;;;;659:36;;-1:-1:-1;;;;;676:11:11;689:5;659:16;:36::i;:::-;588:117;;581:124;359:353;-1:-1:-1;;;359:353:11:o;274:1027:9:-;449:24;;-1:-1:-1;;;;;;24906:2:26;24902:15;;;24898:53;449:24:9;;;24886:66:26;388:7:9;;;;24968:12:26;;449:24:9;;;-1:-1:-1;;449:24:9;;;;;;;;;;426:57;;449:24;426:57;;;;567:19;;-1:-1:-1;;;690:125:9;;-1:-1:-1;;;;;;855:4:9;851:31;;;;844:4;835:14;;828:55;-1:-1:-1;;;929:4:9;920:14;;896:136;520:4;1068:18;;1061:4;1052:14;;1045:42;1116:4;1107:14;;1100:28;1179:4;1164:20;;;1157:4;1148:14;;1141:44;1245:4;1229:14;;1219:31;;274:1027;-1:-1:-1;;;274:1027:9:o;1085:1519:11:-;1275:1;1258:13;:18;;:34;;;;1289:3;-1:-1:-1;;;;;1280:12:11;:5;-1:-1:-1;;;;;1280:12:11;;1258:34;1254:71;;;1308:7;;1254:71;1349:11;;-1:-1:-1;;;;;1339:21:11;;;1349:11;;1339:21;1335:273;;1443:134;1482:6;1506:5;1529:3;1550:13;1443:21;:134::i;:::-;1591:7;;1335:273;-1:-1:-1;;;;;1664:19:11;;1673:10;1664:19;1660:766;;;1774:21;1814:29;;;1810:166;;;1863:13;;-1:-1:-1;;;1863:13:11;;25193:2:26;1863:13:11;;;25175:21:26;25232:1;25212:18;;;25205:29;-1:-1:-1;;;25250:18:26;;;25243:33;25293:18;;1863:13:11;24991:326:26;1810:166:11;2119:13;2103;:29;2099:192;;;2152:124;2197:10;2229:29;2245:13;2229;:29;:::i;:::-;2152:23;:124::i;:::-;2305:89;2346:3;2367:13;2305:23;:89::i;:::-;2409:7;;;1660:766;2475:105;;-1:-1:-1;;;2475:105:11;;-1:-1:-1;;;;;21138:32:26;;;2475:105:11;;;21120:51:26;21187:18;;;21180:34;;;2475:51:11;;;;;21093:18:26;;2475:105:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;106:349:8;193:9;227:1;222:2;:6;218:231;;;-1:-1:-1;248:2:8;264:9;276:6;281:1;248:2;276:6;:::i;:::-;:10;;285:1;276:10;:::i;:::-;264:22;;300:90;311:1;307;:5;300:90;;;336:1;-1:-1:-1;336:1:8;374;336;360:6;336:1;360:2;:6;:::i;:::-;:10;;;;:::i;:::-;359:16;;;;:::i;:::-;355:20;;300:90;;;230:170;106:349;;;:::o;218:231::-;410:7;;406:43;;-1:-1:-1;437:1:8;406:43;106:349;;;:::o;12124:795:7:-;12381:8;:26;12309:7;;-1:-1:-1;;;12381:26:7;;;;12445:32;;;:67;;;;;12511:1;12493:15;:19;12445:67;:104;;;;;12548:1;12528:17;:21;12445:104;12428:466;;;12827:55;12865:17;12827:15;:55;:::i;:::-;12768:35;12786:17;673:5:3;12768:35:7;:::i;:::-;12730:74;;:14;:74;:::i;:::-;:152;;;;:::i;:::-;12676:32;12693:15;12676:14;:32;:::i;:::-;12598:54;12635:17;12598:14;:54;:::i;:::-;:111;;;;:::i;:::-;12597:286;;;;:::i;:::-;12574:309;;;;;12428:466;-1:-1:-1;12911:1:7;;12124:795;-1:-1:-1;;;;12124:795:7:o;7359:633:20:-;7515:3;-1:-1:-1;;;;;1864:21:20;;1860:96;;1908:37;;-1:-1:-1;;;1908:37:20;;;;;;;;;;;1860:96;7538:12;7534:49:::1;;7566:7;;7534:49;7593:16;7633:24:::0;;;:19:::1;:24;::::0;;;;:35;;7612:10:::1;::::0;7661:7;;7633:24;:35:::1;::::0;7661:7;;7633:35:::1;:::i;:::-;::::0;;;-1:-1:-1;;7703:13:20::1;::::0;;;:8:::1;:13;::::0;;;;;;;-1:-1:-1;;;;;7703:18:20;;::::1;::::0;;;;;;;;;:29;;;::::1;::::0;;7758:57;;25496:25:26;;;25537:18;;;25530:34;;;7703:18:20;;:13;7758:57;;::::1;::::0;::::1;::::0;25469:18:26;7758:57:20::1;;;;;;;7826:159;7870:8;1069:1;7918:3;7935;7952:7;7826:159;;;;;;;;;;;::::0;:30:::1;:159::i;6547:617:6:-:0;-1:-1:-1;;;;;6856:21:6;;6739:7;6856:21;;;:13;:21;;;;;;6850:28;;6739:7;;;;6850:28;;;;;;:::i;:::-;;;;;;;;;;;6830:48;;6896:261;6920:15;6957:12;:25;;;7005:12;:26;;;7046:101;7099:4;7121:12;7046:35;:101::i;:::-;6896:10;:261::i;:::-;6889:268;6547:617;-1:-1:-1;;;;;6547:617:6:o;7170:466::-;7362:7;7392:237;7416:15;7453:12;:26;;;7502:12;:25;;;776:5:3;7392:10:6;:237::i;4702:1839::-;4871:7;4947:21;4971:19;:17;:19::i;:::-;4947:43;;5000:14;5030:9;5025:276;1055:1:3;5041::6;:27;5025:276;;;5206:13;5201:1;:18;5197:32;;;5221:8;;5197:32;5253:5;5288:1;5253:37;;;;;;;:::i;:::-;;;;;;;;;5243:47;;5253:37;;;;;;;;;;;;5243:47;;:::i;:::-;;;5025:276;5070:3;;;;:::i;:::-;;;;5025:276;;;-1:-1:-1;893:4:3;1115:27;1141:1;1055;1115:27;:::i;:::-;5486:42:6;;:6;:42;:::i;:::-;5485:66;;;;:::i;:::-;5851:29;;5801:27;;;;5476:75;;-1:-1:-1;5784:14:6;;945:4:3;;5801:80:6;;-1:-1:-1;;;;;5851:29:6;;;;5801:80;:::i;:::-;:116;;;;:::i;:::-;5995:29;;5945:27;;;;5784:133;;-1:-1:-1;5928:14:6;;945:4:3;;5945:80:6;;-1:-1:-1;;;5995:29:6;;;-1:-1:-1;;;;;5995:29:6;;5945:80;:::i;:::-;:116;;;;:::i;:::-;5928:133;;6086:6;6076;:16;6072:113;;6136:8;:19;6115:41;;-1:-1:-1;;;6136:19:6;;;;776:5:3;6115:41:6;:::i;:::-;6108:48;;;;;;;;6072:113;6209:6;6199;:16;6195:113;;6259:8;:19;6238:41;;-1:-1:-1;;;6259:19:6;;;;776:5:3;6238:41:6;:::i;6195:113::-;6480:15;6489:6;6480;:15;:::i;:::-;6442:8;:19;6403:59;;6442:19;-1:-1:-1;;;6442:19:6;;;;;-1:-1:-1;;;6411:19:6;;;6403:59;:::i;:::-;6383:15;6392:6;6383;:15;:::i;:::-;6382:81;;;;:::i;:::-;6381:115;;;;:::i;:::-;6346:8;:19;6325:41;;-1:-1:-1;;;6346:19:6;;;;776:5:3;6325:41:6;:::i;:::-;:171;;;;:::i;2347:204:19:-;2440:13;;;-1:-1:-1;;;;;2463:25:19;;;-1:-1:-1;;;;;;2463:25:19;;;;;;;2503:41;;2440:13;;;2463:25;2440:13;;2503:41;;2421:16;;2503:41;2411:140;2347:204;:::o;9226:2892:7:-;-1:-1:-1;;;;;9503:21:7;;9395:7;9503:21;;;:13;:21;;;;;;9554:13;;9395:7;;;;9503:21;;9554:13;;;;;;:::i;:::-;;;;;;;;;;;9534:33;;9578:38;9619:46;9649:6;9619:16;:46::i;:::-;9728:21;9752:27;;;:19;:27;;;;;;9816:31;;9578:87;;-1:-1:-1;9752:27:7;;;9816:74;;9862:28;;9816:74;:::i;:::-;:102;;;;:::i;:::-;9790:128;;9977:26;10096:13;10053:28;10006:18;:32;;;:75;;;;:::i;:::-;:103;;;;:::i;:::-;10226:19;;;;10360:32;;;;10326:31;;9977:132;;-1:-1:-1;10150:33:7;;10186:244;;10226:19;;;-1:-1:-1;;;;;10226:19:7;;10321:72;;10326:66;;10360:32;10326:66;:::i;10321:72::-;10407:13;10186:26;:244::i;:::-;10460:8;:27;10150:280;;-1:-1:-1;10441:115:7;;-1:-1:-1;;;;;10460:27:7;10501:6;10150:280;10441:5;:115::i;:::-;10602:37;10642:152;;;;;;;;10702:15;10668:18;:31;;;:49;;;;:::i;:::-;10642:152;;;;10766:18;10731;:32;;;:53;;;;:::i;:::-;10642:152;;10886:31;;;;10853:30;;10602:192;;-1:-1:-1;10848:70:7;;10853:64;;10886:31;10853:64;:::i;10848:70::-;10805:4;:19;;;:123;;;;;-1:-1:-1;;;;;10805:123:7;;;;;-1:-1:-1;;;;;10805:123:7;;;;;;10999:101;11018:10;11042:6;11062:28;10999:5;:101::i;:::-;11137:23;11163:57;11204:6;11163:27;:57::i;:::-;11255:11;;11231:124;;-1:-1:-1;;;11231:124:7;;-1:-1:-1;;;;;21138:32:26;;;11231:124:7;;;21120:51:26;21187:18;;;21180:34;;;11137:83:7;;-1:-1:-1;11255:11:7;;;11231:53;;21093:18:26;;11231:124:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11470:136;11507:6;11527:15;11556:11;11581:15;11470:23;:136::i;:::-;11694:149;11724:6;11744:15;11773:18;11805:28;11694:149;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;11942:6:7;11962:17;:30;;;12006:17;:31;;;12051:4;:17;;;;;;;;;;-1:-1:-1;;;;;12051:17:7;11924:154;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;12096:15:7;;9226:2892;-1:-1:-1;;;;;;;;;;;9226:2892:7:o;1962:3274::-;-1:-1:-1;;;;;508:21:10;;532:1;508:21;;;:13;:21;;;;;;2192:6:7;;508:25:10;504:95;;556:32;;-1:-1:-1;;;556:32:10;;;;;;;;;;;504:95;2272:20:7::1;2295:18;2306:6;2295:10;:18::i;:::-;2415:11;::::0;2508::::1;::::0;2324:205:::1;::::0;-1:-1:-1;;;2324:205:7;;-1:-1:-1;;;;;2498:21:7;;::::1;2324:205;::::0;::::1;25809:34:26::0;;;2415:11:7;;::::1;25859:18:26::0;;;25852:43;2508:11:7;;::::1;2498:21:::0;;::::1;25911:18:26::0;;;25904:50;2272:41:7;;-1:-1:-1;2324:57:7;;::::1;::::0;::::1;::::0;25744:18:26;;2324:205:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2603:132;2640:6;2660:10;2684:12;2710:15;2603:23;:132::i;:::-;2840:11;::::0;2816:122:::1;::::0;-1:-1:-1;;;2816:122:7;;-1:-1:-1;;;;;21138:32:26;;;2816:122:7::1;::::0;::::1;21120:51:26::0;21187:18;;;21180:34;;;2840:11:7;;::::1;::::0;2816:53:::1;::::0;21093:18:26;;2816:122:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3015:72;3045:6;3065:12;3015:16;:72::i;:::-;2997:90;;3121:1;3102:15;:20;3098:170;;3138:11;;-1:-1:-1::0;;;3138:11:7::1;;;;;;;:::i;3098:170::-;3396:67;;:::i;:::-;3477:9;3473:107;1055:1:3;3488::7;:25;3473:107;;;3568:1;3534:28;3563:1;3534:31;;;;;;;:::i;:::-;:35;::::0;;::::1;:31;::::0;;;::::1;;:35:::0;3515:3;::::1;::::0;::::1;:::i;:::-;;;;3473:107;;;-1:-1:-1::0;3590:21:7::1;3614:43;3619:37;3637:19:::0;3619:15;:37:::1;:::i;3614:43::-;3686:330;::::0;;::::1;::::0;::::1;::::0;;;;;;3820:8:::1;:19:::0;3590:67;;-1:-1:-1;;;3686:330:7::1;::::0;::::1;::::0;3807:32:::1;::::0;-1:-1:-1;;;3820:19:7;::::1;;;776:5:3;3807:32:7;:::i;:::-;3686:330;;;;;;3883:19;:17;:19::i;:::-;3686:330;;::::0;;-1:-1:-1;;;;;3686:330:7;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;;;-1:-1:-1;4113:12:7;;4135:16:::1;::::0;::::1;::::0;;;;;;;3667:349;;-1:-1:-1;4113:12:7;3667:349;;4135:16:::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;;:::i;:::-;-1:-1:-1::0;4135:16:7::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;-1:-1:-1::0;;4135:16:7;;;;;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;::::1;-1:-1:-1::0;;4135:16:7::1;::::0;-1:-1:-1;;;;;4135:16:7;;::::1;;;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;4135:16:7::1;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;4207:21:7;::::1;-1:-1:-1::0;4207:21:7;;;;;;;:30;;;4327:92:::1;1381:6:3;4207:30:7::0;1331:4:3::1;4327:5:7;:92::i;:::-;4467:16;4486:45;1331:4:3;4486:13:7::0;:45:::1;:::i;:::-;4467:64;;4542:82;4561:11;4586:6;4606:8;4542:5;:82::i;:::-;4724:87;::::0;;-1:-1:-1;;;;;26223:15:26;;;26205:34;;26275:15;;26270:2;26255:18;;26248:43;26307:18;;;26300:34;;;4724:87:7::1;::::0;26155:2:26;26140:18;4724:87:7::1;;;;;;;4897:128;4925:6;4945:15;4974:19;5007:8;4897:128;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;;;;;;;5124:6:7::1;5144:15;5173:19;5206:13;5106:123;;;;;;;;;:::i;:::-;;;;;;;;2204:3032;;;;;;1962:3274:::0;;;;;;:::o;8949:355:20:-;9099:9;-1:-1:-1;;;;;9089:19:20;:6;-1:-1:-1;;;;;9089:19:20;;9085:95;;;9131:38;;-1:-1:-1;;;9131:38:20;;;;;;;;;;;9085:95;-1:-1:-1;;;;;9190:25:20;;;;;;;:17;:25;;;;;;;;:36;;;;;;;;;;;;;:48;;-1:-1:-1;;9190:48:20;;;;;;;;;;9253:44;;1178:41:26;;;9253:44:20;;1151:18:26;9253:44:20;;;;;;;8949:355;;;:::o;11616:6022:12:-;-1:-1:-1;;;;;241:21:10;;;;;;:13;:21;;;;;;11852:6:12;;241:26:10;;:51;;-1:-1:-1;281:11:10;;-1:-1:-1;;;;;271:21:10;;;281:11;;271:21;241:51;237:185;;;308:11;;-1:-1:-1;;;308:11:10;;;;;;;:::i;237:185::-;11874:37:12::1;11914:46;11944:6;11914:16;:46::i;:::-;11874:86;;12030:22;12101:19;:33;;;12055:17;:31;;;:79;;;;:::i;:::-;12274:32:::0;;12229:30;;12030:104;;-1:-1:-1;12204:22:12::1;::::0;12229:77:::1;::::0;12274:32;12229:77:::1;:::i;:::-;12204:102:::0;-1:-1:-1;12356:1:12::1;12321:31;12338:14:::0;12204:102;12321:31:::1;:::i;:::-;:36;12317:156;;12373:11;::::0;-1:-1:-1;;;12373:11:12;;26547:2:26;12373:11:12::1;::::0;::::1;26529:21:26::0;26586:1;26566:18;;;26559:29;-1:-1:-1;;;26604:18:26;;;26597:31;26645:18;;12373:11:12::1;26345:324:26::0;12317:156:12::1;-1:-1:-1::0;;;;;12575:21:12;::::1;12549:17;12575:21:::0;;;:13:::1;:21;::::0;;;;;12569:28;;12549:17;;12575:21;12569:28;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;12624:17;::::0;::::1;::::0;12569:28;;-1:-1:-1;;;;;;12624:17:12;;::::1;:38;:107:::0;::::1;;;-1:-1:-1::0;12678:17:12::1;::::0;::::1;::::0;12715:16;;12678:34:::1;::::0;12698:14;;-1:-1:-1;;;;;12678:17:12::1;:34;:::i;:::-;:53;12624:107;12607:236;;;12756:11;::::0;-1:-1:-1;;;12756:11:12;;26876:2:26;12756:11:12::1;::::0;::::1;26858:21:26::0;26915:1;26895:18;;;26888:29;-1:-1:-1;;;26933:18:26;;;26926:31;26974:18;;12756:11:12::1;26674:324:26::0;12607:236:12::1;12853:21;12877:19;:17;:19::i;:::-;12853:43:::0;-1:-1:-1;776:5:3::1;13158:1:12;13141:18:::0;::::1;:41:::0;::::1;;;;13181:1;13163:14;:19;;13141:41;13137:1390;;;13406:26;::::0;::::1;::::0;;;::::1;;;13476:28:::0;;::::1;;::::0;:69:::1;;-1:-1:-1::0;13529:11:12::1;:16:::0;13476:69:::1;13451:1004;;;13737:17;13773:11;13757:13;:27;:133;;13877:13;13757:133;;;13811:39;1055:1:3;13811:13:12::0;:39:::1;:::i;:::-;13737:153;;13912:160;13935:9:::0;13918:13:::1;::::0;::::1;:::i;:::-;;;;:26;13912:160;;14047:1;13972:4:::0;14006:37:::1;1055:1:3;14006:11:12::0;:37:::1;:::i;:::-;13972:72;;;;;;;:::i;:::-;;;;;;;;;;;;:76;;;;;;;;;;;;;;;;;;13912:160;;;14198:144;14263:4;14297:19;14198:35;:144::i;:::-;14137:26;::::0;::::1;:227:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;14387:49:12;;;;;;;;::::1;::::0;::::1;;;::::0;;-1:-1:-1;13451:1004:12::1;-1:-1:-1::0;;14486:26:12::1;::::0;::::1;::::0;::::1;;13137:1390;14630:28;825:23:3;776:5;::::0;825:23:::1;:::i;:::-;14712:33:12;::::0;::::1;::::0;14661:32;;:84:::1;::::0;14712:33;14661:84:::1;:::i;:::-;:121;;;;:::i;:::-;14630:152:::0;-1:-1:-1;14857:27:12::1;15171:24;15184:11:::0;776:5:3::1;15171:24:12;:::i;:::-;15133:63;::::0;:14;:63:::1;:::i;:::-;15047:30:::0;;:63:::1;::::0;776:5:3::1;::::0;15047:63:12::1;:::i;:::-;:149;;;;:::i;:::-;15001:24;15014:11:::0;776:5:3::1;15001:24:12;:::i;:::-;14967:59;::::0;:14;:59:::1;:::i;:::-;776:5:3;14888:17:12;:31;;;:60;;;;:::i;:::-;:138;;;;:::i;:::-;14887:310;;;;:::i;:::-;14857:340;;15238:20;15216:19;:42;15212:177;;;15278:11;::::0;-1:-1:-1;;;15278:11:12;;27322:2:26;15278:11:12::1;::::0;::::1;27304:21:26::0;27361:1;27341:18;;;27334:29;-1:-1:-1;;;27379:18:26;;;27372:31;27420:18;;15278:11:12::1;27120:324:26::0;15212:177:12::1;15473:17;::::0;::::1;::::0;-1:-1:-1;;;;;15473:17:12;;::::1;:38;15469:254;;;15588:17;::::0;::::1;::::0;15674:16;;15580:67:::1;::::0;15633:14;;-1:-1:-1;;;;;15588:17:12::1;15580:67;:::i;:::-;:110;;;;:::i;:::-;15531:17;::::0;::::1;:177:::0;;-1:-1:-1;;;;;;15531:177:12::1;-1:-1:-1::0;;;;;15531:177:12;;;::::1;::::0;;;::::1;::::0;;15469:254:::1;893:4:3;15839:16:12;:38;15835:735;;;16067:26;16223:38;893:4:3;16223:16:12::0;:38:::1;:::i;:::-;16154:4:::0;16188:13;16154:48:::1;::::0;::::1;;;;;:::i;:::-;;::::0;;::::1;::::0;;::::1;::::0;16096:165:::1;::::0;;16154:48:::1;;::::0;;;::::1;;;;::::0;::::1;;16096:165;:::i;:::-;16067:194:::0;-1:-1:-1;16451:16:12::1;16430:37:::0;::::1;:125;;16539:16;16430:125;;;16497:18;16430:125;16379:176;;:4:::0;16413:13;16379:48:::1;::::0;::::1;;;;;:::i;:::-;;;;;;;;;;;;:176;;;;;;;;;;;;;;;;;;15879:691;15835:735;-1:-1:-1::0;;16664:11:12::1;::::0;16627:162:::1;::::0;-1:-1:-1;;;;;16664:11:12::1;16689:35;16717:6:::0;16689:27:::1;:35::i;:::-;16738:11;16763:16;16627:23;:162::i;:::-;16904:157;16941:6;16961:35;16989:6;16961:27;:35::i;:::-;17010:11;17035:16;16904:23;:157::i;:::-;17137:259;17155:6:::0;17175:10:::1;17199:14:::0;17227;17255:16;17285;17315:24:::1;17328:11:::0;776:5:3::1;17315:24:12;:::i;:::-;17137:259;::::0;;-1:-1:-1;;;;;27848:15:26;;;27830:34;;27900:15;;;27895:2;27880:18;;27873:43;27932:18;;27925:34;;;;27990:2;27975:18;;27968:34;;;;28033:3;28018:19;;28011:35;27810:3;28062:19;;28055:35;28121:3;28106:19;;28099:35;28171:15;;;28165:3;28150:19;;28143:44;27779:3;27764:19;17137:259:12::1;;;;;;;-1:-1:-1::0;;;;;;;;;;;17495:6:12::1;17515:17;:30;;;17559:17;:31;;;17604:4;:17;;;;;;;;;;-1:-1:-1::0;;;;;17604:17:12::1;17477:154;;;;;;;;;:::i;6875:111:20:-:0;6950:29;;;;:11;;:29;;;;;:::i;:::-;;6875:111;:::o;8201:617:6:-;-1:-1:-1;;;;;8510:21:6;;8393:7;8510:21;;;:13;:21;;;;;;8504:28;;8393:7;;;;8504:28;;;;;;:::i;:::-;;;;;;;;;;;8484:48;;8550:261;8573:16;8611:12;:25;;;8659:12;:26;;;8700:101;8753:4;8775:12;8700:35;:101::i;:::-;8550:9;:261::i;8824:466::-;9016:7;9046:237;9069:16;9107:12;:26;;;9156:12;:25;;;776:5:3;9046:9:6;:237::i;5259:793:20:-;5479:3;-1:-1:-1;;;;;1864:21:20;;1860:96;;1908:37;;-1:-1:-1;;;1908:37:20;;;;;;;;;;;1860:96;5498:16:::1;5560:13:::0;;;:8:::1;:13;::::0;;;;;;;-1:-1:-1;;;;;5560:20:20;::::1;::::0;;;;;;;;5517:10:::1;::::0;5594:21;;::::1;5590:99;;;5638:40;;-1:-1:-1::0;;;5638:40:20::1;;;;;;;;;;;5590:99;5723:13;::::0;;;:8:::1;:13;::::0;;;;;;;-1:-1:-1;;;;;5723:20:20;;::::1;::::0;;;;;;;5746:21;;::::1;5723:44:::0;;5787:18;;::::1;::::0;;;;:29;;5746:21;;5723:13;5787:29:::1;::::0;5746:21;;5787:29:::1;:::i;:::-;::::0;;;-1:-1:-1;;5850:24:20::1;::::0;;;:19:::1;:24;::::0;;;;;;;;:35;;;::::1;::::0;;5911:50;;25496:25:26;;;25537:18;;;25530:34;;;-1:-1:-1;;;;;5911:50:20;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;::::1;::::0;25469:18:26;5911:50:20::1;;;;;;;5972:73;6003:8;6013:5;6020:3;6025;6030:7;6039:5;;5972:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;5972:30:20::1;::::0;-1:-1:-1;;;5972:73:20:i:1;:::-;5488:564;;5259:793:::0;;;;;;;:::o;747:261:11:-;914:11;;874:7;;-1:-1:-1;;;;;904:21:11;;;914:11;;904:21;:97;;969:32;;-1:-1:-1;;;969:32:11;;-1:-1:-1;;;;;1579:32:26;;;969::11;;;1561:51:26;969:24:11;;;;;1534:18:26;;969:32:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;904:97;;;-1:-1:-1;;;;;;940:14:11;;;897:104;-1:-1:-1;747:261:11:o;2610:702::-;2942:132;;;-1:-1:-1;;;;;26223:15:26;;;2942:132:11;;;26205:34:26;26275:15;;;26255:18;;;26248:43;26307:18;;;;26300:34;;;2942:132:11;;;;;;;;;;26140:18:26;;;;2942:132:11;;;;;;;-1:-1:-1;;;;;2942:132:11;-1:-1:-1;;;2942:132:11;;;2917:167;;-1:-1:-1;;;;2917:11:11;;;;:167;;2942:132;2917:167;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2881:203;;;;3178:7;:57;;;;-1:-1:-1;3190:11:11;;:16;;:44;;;3221:4;3210:24;;;;;;;;;;;;:::i;:::-;3172:134;;3259:36;;-1:-1:-1;;;3259:36:11;;;;;;;;;;;3172:134;2760:552;;2610:702;;;;:::o;3318:426::-;3587:12;;;3545;3587;;;;;;;;;-1:-1:-1;;;;;3563:8:11;;;3579:6;;3563:37;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3544:56;;;3659:7;3654:84;;3689:38;;-1:-1:-1;;;3689:38:11;;;;;;;;;;;9310:790:20;2905:21;;2952:8;9519:575;;9574:196;;-1:-1:-1;;;9574:196:20;;-1:-1:-1;;;;;9574:39:20;;;;;:196;;9635:9;;9666:5;;9693:3;;9718:7;;9747:5;;9574:196;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9574:196:20;;;;;;;;-1:-1:-1;;9574:196:20;;;;;;;;;;;;:::i;:::-;;;9554:530;;10020:49;;-1:-1:-1;;;10020:49:20;;;;;;;;;;;9554:530;-1:-1:-1;;;;;;9831:55:20;;-1:-1:-1;;;9831:55:20;9827:147;;9917:38;;-1:-1:-1;;;9917:38:20;;;;;;;;;;;9827:147;9783:205;9310:790;;;;;;:::o;7642:553:6:-;7831:7;;7993:36;8017:12;7993:9;:36;:::i;:::-;7967:62;-1:-1:-1;8040:17:6;7967:62;8118:24;776:5:3;8118:11:6;:24;:::i;:::-;:42;;;;:::i;:::-;8060;8087:15;8060:12;:42;:::i;:::-;:101;;;;:::i;4494:202::-;4570:7;1055:1:3;4600:51:6;1263:11:3;4600:15:6;:51;:::i;:::-;:89;;;;:::i;:::-;4593:96;;4494:202;:::o;8232:582:20:-;8390:5;-1:-1:-1;;;;;1864:21:20;;1860:96;;1908:37;;-1:-1:-1;;;1908:37:20;;;;;;;;;;;1860:96;8411:16:::1;8473:13:::0;;;:8:::1;:13;::::0;;;;;;;-1:-1:-1;;;;;8473:20:20;::::1;::::0;;;;;;;;8430:10:::1;::::0;8507:21;;::::1;8503:93;;;8551:34;;-1:-1:-1::0;;;8551:34:20::1;;;;;;;;;;;8503:93;8629:13;::::0;;;:8:::1;:13;::::0;;;;;;;-1:-1:-1;;;;;8629:20:20;;::::1;::::0;;;;;;;;;8652:21;;::::1;8629:44:::0;;8687:24;;;:19:::1;:24:::0;;;;;:35;;;;::::1;::::0;;8748:59;;25496:25:26;;;25537:18;;;25530:34;;;8629:20:20;;8748:59;;::::1;::::0;::::1;::::0;25469:18:26;8748:59:20::1;;;;;;;8401:413;;8232:582:::0;;;;:::o;1307:947:9:-;1452:54;;-1:-1:-1;;;;;;24906:2:26;24902:15;;;24898:53;1452:54:9;;;24886:66:26;1391:7:9;;;;24968:12:26;;1452:54:9;;;;;;-1:-1:-1;;1452:54:9;;;;;;;1429:87;;1452:54;1429:87;;;;1583:19;;-1:-1:-1;;;1719:127:9;;1562:50;;-1:-1:-1;;;;;;1562:50:9;1877:4;1866:16;;1859:50;;;-1:-1:-1;;;1957:4:9;1946:16;;1922:138;1429:87;;-1:-1:-1;1562:50:9;-1:-1:-1;;1429:87:9;2162:4;1452:54;-1:-1:-1;2095:107:9;2073:129;1307:947;-1:-1:-1;;;;;;1307:947:9:o;9296:605:6:-;9485:7;;9744:25;9759:10;9744:12;:25;:::i;:::-;9716:12;776:5:3;9640:36:6;9666:10;9640:11;:36;:::i;:::-;:61;;;;:::i;:::-;:88;;;;:::i;:::-;:130;;;;:::i;:::-;:193;;9832:1;9640:193;:::i;:::-;9621:212;9296:605;-1:-1:-1;;;;;;9296:605:6:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:131:26;-1:-1:-1;;;;;89:31:26;;79:42;;69:70;;135:1;132;125:12;150:315;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;455:2;440:18;;;;427:32;;-1:-1:-1;;;150:315:26:o;652:131::-;-1:-1:-1;;;;;;726:32:26;;716:43;;706:71;;773:1;770;763:12;788:245;846:6;899:2;887:9;878:7;874:23;870:32;867:52;;;915:1;912;905:12;867:52;954:9;941:23;973:30;997:5;973:30;:::i;1230:180::-;1289:6;1342:2;1330:9;1321:7;1317:23;1313:32;1310:52;;;1358:1;1355;1348:12;1310:52;-1:-1:-1;1381:23:26;;1230:180;-1:-1:-1;1230:180:26:o;1623:258::-;1695:1;1705:113;1719:6;1716:1;1713:13;1705:113;;;1795:11;;;1789:18;1776:11;;;1769:39;1741:2;1734:10;1705:113;;;1836:6;1833:1;1830:13;1827:48;;;-1:-1:-1;;1871:1:26;1853:16;;1846:27;1623:258::o;1886:::-;1928:3;1966:5;1960:12;1993:6;1988:3;1981:19;2009:63;2065:6;2058:4;2053:3;2049:14;2042:4;2035:5;2031:16;2009:63;:::i;:::-;2126:2;2105:15;-1:-1:-1;;2101:29:26;2092:39;;;;2133:4;2088:50;;1886:258;-1:-1:-1;;1886:258:26:o;2149:220::-;2298:2;2287:9;2280:21;2261:4;2318:45;2359:2;2348:9;2344:18;2336:6;2318:45;:::i;2374:367::-;2437:8;2447:6;2501:3;2494:4;2486:6;2482:17;2478:27;2468:55;;2519:1;2516;2509:12;2468:55;-1:-1:-1;2542:20:26;;-1:-1:-1;;;;;2574:30:26;;2571:50;;;2617:1;2614;2607:12;2571:50;2654:4;2646:6;2642:17;2630:29;;2714:3;2707:4;2697:6;2694:1;2690:14;2682:6;2678:27;2674:38;2671:47;2668:67;;;2731:1;2728;2721:12;2668:67;2374:367;;;;;:::o;2746:437::-;2832:6;2840;2893:2;2881:9;2872:7;2868:23;2864:32;2861:52;;;2909:1;2906;2899:12;2861:52;2949:9;2936:23;-1:-1:-1;;;;;2974:6:26;2971:30;2968:50;;;3014:1;3011;3004:12;2968:50;3053:70;3115:7;3106:6;3095:9;3091:22;3053:70;:::i;:::-;3142:8;;3027:96;;-1:-1:-1;2746:437:26;-1:-1:-1;;;;2746:437:26:o;3188:796::-;3417:2;3469:21;;;3539:13;;3442:18;;;3561:22;;;3388:4;;3417:2;3602;;3620:18;;;;3661:15;;;3388:4;3704:254;3718:6;3715:1;3712:13;3704:254;;;3777:13;;3815:9;;3803:22;;3865:11;;3859:18;3845:12;;;3838:40;3898:12;;;;3933:15;;;;3740:1;3733:9;3704:254;;;-1:-1:-1;3975:3:26;;3188:796;-1:-1:-1;;;;;;;3188:796:26:o;3989:127::-;4050:10;4045:3;4041:20;4038:1;4031:31;4081:4;4078:1;4071:15;4105:4;4102:1;4095:15;4121:719;4164:5;4217:3;4210:4;4202:6;4198:17;4194:27;4184:55;;4235:1;4232;4225:12;4184:55;4271:6;4258:20;-1:-1:-1;;;;;4334:2:26;4330;4327:10;4324:36;;;4340:18;;:::i;:::-;4415:2;4409:9;4383:2;4469:13;;-1:-1:-1;;4465:22:26;;;4489:2;4461:31;4457:40;4445:53;;;4513:18;;;4533:22;;;4510:46;4507:72;;;4559:18;;:::i;:::-;4599:10;4595:2;4588:22;4634:2;4626:6;4619:18;4680:3;4673:4;4668:2;4660:6;4656:15;4652:26;4649:35;4646:55;;;4697:1;4694;4687:12;4646:55;4761:2;4754:4;4746:6;4742:17;4735:4;4727:6;4723:17;4710:54;4808:1;4801:4;4796:2;4788:6;4784:15;4780:26;4773:37;4828:6;4819:15;;;;;;4121:719;;;;:::o;4845:543::-;4933:6;4941;4994:2;4982:9;4973:7;4969:23;4965:32;4962:52;;;5010:1;5007;5000:12;4962:52;5050:9;5037:23;-1:-1:-1;;;;;5120:2:26;5112:6;5109:14;5106:34;;;5136:1;5133;5126:12;5106:34;5159:50;5201:7;5192:6;5181:9;5177:22;5159:50;:::i;:::-;5149:60;;5262:2;5251:9;5247:18;5234:32;5218:48;;5291:2;5281:8;5278:16;5275:36;;;5307:1;5304;5297:12;5275:36;;5330:52;5374:7;5363:8;5352:9;5348:24;5330:52;:::i;:::-;5320:62;;;4845:543;;;;;:::o;5393:194::-;5479:6;5532:3;5520:9;5511:7;5507:23;5503:33;5500:53;;;5549:1;5546;5539:12;5592:525;5678:6;5686;5694;5702;5755:3;5743:9;5734:7;5730:23;5726:33;5723:53;;;5772:1;5769;5762:12;5723:53;5811:9;5798:23;5830:31;5855:5;5830:31;:::i;:::-;5880:5;-1:-1:-1;5932:2:26;5917:18;;5904:32;;-1:-1:-1;5983:2:26;5968:18;;5955:32;;-1:-1:-1;6039:2:26;6024:18;;6011:32;6052:33;6011:32;6052:33;:::i;:::-;5592:525;;;;-1:-1:-1;5592:525:26;;-1:-1:-1;;5592:525:26:o;6122:456::-;6199:6;6207;6215;6268:2;6256:9;6247:7;6243:23;6239:32;6236:52;;;6284:1;6281;6274:12;6236:52;6323:9;6310:23;6342:31;6367:5;6342:31;:::i;:::-;6392:5;-1:-1:-1;6449:2:26;6434:18;;6421:32;6462:33;6421:32;6462:33;:::i;:::-;6122:456;;6514:7;;-1:-1:-1;;;6568:2:26;6553:18;;;;6540:32;;6122:456::o;6583:247::-;6642:6;6695:2;6683:9;6674:7;6670:23;6666:32;6663:52;;;6711:1;6708;6701:12;6663:52;6750:9;6737:23;6769:31;6794:5;6769:31;:::i;6835:773::-;6957:6;6965;6973;6981;7034:2;7022:9;7013:7;7009:23;7005:32;7002:52;;;7050:1;7047;7040:12;7002:52;7090:9;7077:23;-1:-1:-1;;;;;7160:2:26;7152:6;7149:14;7146:34;;;7176:1;7173;7166:12;7146:34;7215:70;7277:7;7268:6;7257:9;7253:22;7215:70;:::i;:::-;7304:8;;-1:-1:-1;7189:96:26;-1:-1:-1;7392:2:26;7377:18;;7364:32;;-1:-1:-1;7408:16:26;;;7405:36;;;7437:1;7434;7427:12;7405:36;;7476:72;7540:7;7529:8;7518:9;7514:24;7476:72;:::i;:::-;6835:773;;;;-1:-1:-1;7567:8:26;-1:-1:-1;;;;6835:773:26:o;7613:632::-;7784:2;7836:21;;;7906:13;;7809:18;;;7928:22;;;7755:4;;7784:2;8007:15;;;;7981:2;7966:18;;;7755:4;8050:169;8064:6;8061:1;8058:13;8050:169;;;8125:13;;8113:26;;8194:15;;;;8159:12;;;;8086:1;8079:9;8050:169;;;-1:-1:-1;8236:3:26;;7613:632;-1:-1:-1;;;;;;7613:632:26:o;9032:118::-;9118:5;9111:13;9104:21;9097:5;9094:32;9084:60;;9140:1;9137;9130:12;9155:382;9220:6;9228;9281:2;9269:9;9260:7;9256:23;9252:32;9249:52;;;9297:1;9294;9287:12;9249:52;9336:9;9323:23;9355:31;9380:5;9355:31;:::i;:::-;9405:5;-1:-1:-1;9462:2:26;9447:18;;9434:32;9475:30;9434:32;9475:30;:::i;:::-;9524:7;9514:17;;;9155:382;;;;;:::o;9542:736::-;9646:6;9654;9662;9670;9678;9686;9739:3;9727:9;9718:7;9714:23;9710:33;9707:53;;;9756:1;9753;9746:12;9707:53;9795:9;9782:23;9814:31;9839:5;9814:31;:::i;:::-;9864:5;-1:-1:-1;9921:2:26;9906:18;;9893:32;9934:33;9893:32;9934:33;:::i;:::-;9986:7;-1:-1:-1;10040:2:26;10025:18;;10012:32;;-1:-1:-1;10091:2:26;10076:18;;10063:32;;-1:-1:-1;10142:3:26;10127:19;;10114:33;;-1:-1:-1;10199:3:26;10184:19;;10171:33;10213;10171;10213;:::i;:::-;10265:7;10255:17;;;9542:736;;;;;;;;:::o;10283:348::-;10335:8;10345:6;10399:3;10392:4;10384:6;10380:17;10376:27;10366:55;;10417:1;10414;10407:12;10366:55;-1:-1:-1;10440:20:26;;-1:-1:-1;;;;;10472:30:26;;10469:50;;;10515:1;10512;10505:12;10469:50;10552:4;10544:6;10540:17;10528:29;;10604:3;10597:4;10588:6;10580;10576:19;10572:30;10569:39;10566:59;;;10621:1;10618;10611:12;10636:411;10707:6;10715;10768:2;10756:9;10747:7;10743:23;10739:32;10736:52;;;10784:1;10781;10774:12;10736:52;10824:9;10811:23;-1:-1:-1;;;;;10849:6:26;10846:30;10843:50;;;10889:1;10886;10879:12;10843:50;10928:59;10979:7;10970:6;10959:9;10955:22;10928:59;:::i;11052:388::-;11120:6;11128;11181:2;11169:9;11160:7;11156:23;11152:32;11149:52;;;11197:1;11194;11187:12;11149:52;11236:9;11223:23;11255:31;11280:5;11255:31;:::i;:::-;11305:5;-1:-1:-1;11362:2:26;11347:18;;11334:32;11375:33;11334:32;11375:33;:::i;11445:813::-;11540:6;11548;11556;11564;11572;11625:3;11613:9;11604:7;11600:23;11596:33;11593:53;;;11642:1;11639;11632:12;11593:53;11681:9;11668:23;11700:31;11725:5;11700:31;:::i;:::-;11750:5;-1:-1:-1;11807:2:26;11792:18;;11779:32;11820:33;11779:32;11820:33;:::i;:::-;11872:7;-1:-1:-1;11931:2:26;11916:18;;11903:32;11944:33;11903:32;11944:33;:::i;:::-;11996:7;-1:-1:-1;12055:2:26;12040:18;;12027:32;12068:33;12027:32;12068:33;:::i;:::-;12120:7;-1:-1:-1;12179:3:26;12164:19;;12151:33;12193;12151;12193;:::i;:::-;12245:7;12235:17;;;11445:813;;;;;;;;:::o;12263:824::-;12369:6;12377;12385;12393;12401;12409;12462:3;12450:9;12441:7;12437:23;12433:33;12430:53;;;12479:1;12476;12469:12;12430:53;12518:9;12505:23;12537:31;12562:5;12537:31;:::i;:::-;12587:5;-1:-1:-1;12644:2:26;12629:18;;12616:32;12657:33;12616:32;12657:33;:::i;:::-;12709:7;-1:-1:-1;12763:2:26;12748:18;;12735:32;;-1:-1:-1;12814:2:26;12799:18;;12786:32;;-1:-1:-1;12869:3:26;12854:19;;12841:33;-1:-1:-1;;;;;12886:30:26;;12883:50;;;12929:1;12926;12919:12;12883:50;12968:59;13019:7;13010:6;12999:9;12995:22;12968:59;:::i;:::-;12263:824;;;;-1:-1:-1;12263:824:26;;-1:-1:-1;12263:824:26;;13046:8;;12263:824;-1:-1:-1;;;12263:824:26:o;13092:251::-;13162:6;13215:2;13203:9;13194:7;13190:23;13186:32;13183:52;;;13231:1;13228;13221:12;13183:52;13263:9;13257:16;13282:31;13307:5;13282:31;:::i;13348:380::-;13427:1;13423:12;;;;13470;;;13491:61;;13545:4;13537:6;13533:17;13523:27;;13491:61;13598:2;13590:6;13587:14;13567:18;13564:38;13561:161;;;13644:10;13639:3;13635:20;13632:1;13625:31;13679:4;13676:1;13669:15;13707:4;13704:1;13697:15;13977:1291;14234:3;14263:1;14296:6;14290:13;14326:3;14348:1;14376:9;14372:2;14368:18;14358:28;;14436:2;14425:9;14421:18;14458;14448:61;;14502:4;14494:6;14490:17;14480:27;;14448:61;14528:2;14576;14568:6;14565:14;14545:18;14542:38;14539:165;;;-1:-1:-1;;;14603:33:26;;14659:4;14656:1;14649:15;14689:4;14610:3;14677:17;14539:165;14720:18;14747:104;;;;14865:1;14860:320;;;;14713:467;;14747:104;-1:-1:-1;;14780:24:26;;14768:37;;14825:16;;;;-1:-1:-1;14747:104:26;;14860:320;13806:1;13799:14;;;13843:4;13830:18;;14955:1;14969:165;14983:6;14980:1;14977:13;14969:165;;;15061:14;;15048:11;;;15041:35;15104:16;;;;14998:10;;14969:165;;;14973:3;;15163:6;15158:3;15154:16;15147:23;;14713:467;;15201:6;15196:3;15189:19;15224:38;15258:2;15253:3;15249:12;-1:-1:-1;;;13919:20:26;;13964:1;13955:11;;13859:113;15224:38;15217:45;13977:1291;-1:-1:-1;;;;;;;;;;13977:1291:26:o;15273:127::-;15334:10;15329:3;15325:20;15322:1;15315:31;15365:4;15362:1;15355:15;15389:4;15386:1;15379:15;15405:135;15444:3;-1:-1:-1;;15465:17:26;;15462:43;;;15485:18;;:::i;:::-;-1:-1:-1;15532:1:26;15521:13;;15405:135::o;15545:128::-;15585:3;15616:1;15612:6;15609:1;15606:13;15603:39;;;15622:18;;:::i;:::-;-1:-1:-1;15658:9:26;;15545:128::o;15678:127::-;15739:10;15734:3;15730:20;15727:1;15720:31;15770:4;15767:1;15760:15;15794:4;15791:1;15784:15;15810:117;15895:6;15888:5;15884:18;15877:5;15874:29;15864:57;;15917:1;15914;15907:12;15932:245;15990:6;16043:2;16031:9;16022:7;16018:23;16014:32;16011:52;;;16059:1;16056;16049:12;16011:52;16098:9;16085:23;16117:30;16141:5;16117:30;:::i;16182:129::-;-1:-1:-1;;;;;16260:5:26;16256:30;16249:5;16246:41;16236:69;;16301:1;16298;16291:12;16316:245;16374:6;16427:2;16415:9;16406:7;16402:23;16398:32;16395:52;;;16443:1;16440;16433:12;16395:52;16482:9;16469:23;16501:30;16525:5;16501:30;:::i;16566:121::-;16651:10;16644:5;16640:22;16633:5;16630:33;16620:61;;16677:1;16674;16667:12;16692:245;16750:6;16803:2;16791:9;16782:7;16778:23;16774:32;16771:52;;;16819:1;16816;16809:12;16771:52;16858:9;16845:23;16877:30;16901:5;16877:30;:::i;16942:262::-;16981:7;17013:10;17050:2;17047:1;17043:10;17080:2;17077:1;17073:10;17136:3;17132:2;17128:12;17123:3;17120:21;17113:3;17106:11;17099:19;17095:47;17092:73;;;17145:18;;:::i;:::-;17185:13;;16942:262;-1:-1:-1;;;;16942:262:26:o;17209:174::-;17253:11;17305:3;17292:17;17318:30;17342:5;17318:30;:::i;17597:174::-;17641:11;17693:3;17680:17;17706:30;17730:5;17706:30;:::i;18208:1186::-;18373:5;18360:19;18388:33;18413:7;18388:33;:::i;:::-;18492:11;;-1:-1:-1;;;;;;18528:45:26;;-1:-1:-1;;;;;18440:33:26;;;;18525:53;;;18512:67;;18627:2;18616:14;;18603:28;18640:32;18603:28;18640:32;:::i;:::-;-1:-1:-1;;;18718:3:26;18695:17;;;;18691:44;-1:-1:-1;;;;;;18763:37:26;;18760:45;;18757:53;;18744:67;;18859:2;18848:14;;18835:28;18872:32;18835:28;18872:32;:::i;:::-;-1:-1:-1;;;;;;18939:33:26;;;;18936:41;;;18929:49;;;;19007:3;18984:17;;;;-1:-1:-1;;;18980:39:26;18926:94;18913:108;;19030:95;19082:42;19120:2;19109:14;;19082:42;:::i;:::-;19076:4;17480:11;;-1:-1:-1;;;;17516:29:26;17572:3;17551:15;;;;-1:-1:-1;;;17547:37:26;17513:72;;;;17500:86;;17388:204;19030:95;19162:1;19156:4;19152:12;19173:104;19233:43;19271:3;19264:5;19260:15;19233:43;:::i;:::-;17880:11;;-1:-1:-1;;17876:41:26;-1:-1:-1;;;;;17919:30:26;;;;17873:77;17860:91;;17776:181;19173:104;19286:102;19344:43;19382:3;19375:5;19371:15;19344:43;:::i;:::-;18054:11;;-1:-1:-1;;18090:48:26;18148:2;18144:14;;;;18160:34;18140:55;18087:109;18074:123;;17962:241;19399:324;19601:2;19583:21;;;19640:1;19620:18;;;19613:29;-1:-1:-1;;;19673:2:26;19658:18;;19651:31;19714:2;19699:18;;19399:324::o;19728:::-;19930:2;19912:21;;;19969:1;19949:18;;;19942:29;-1:-1:-1;;;20002:2:26;19987:18;;19980:31;20043:2;20028:18;;19728:324::o;20057:125::-;20097:4;20125:1;20122;20119:8;20116:34;;;20130:18;;:::i;:::-;-1:-1:-1;20167:9:26;;20057:125::o;20187:324::-;20389:2;20371:21;;;20428:1;20408:18;;;20401:29;-1:-1:-1;;;20461:2:26;20446:18;;20439:31;20502:2;20487:18;;20187:324::o;20516:168::-;20556:7;20622:1;20618;20614:6;20610:14;20607:1;20604:21;20599:1;20592:9;20585:17;20581:45;20578:71;;;20629:18;;:::i;:::-;-1:-1:-1;20669:9:26;;20516:168::o;20689:127::-;20750:10;20745:3;20741:20;20738:1;20731:31;20781:4;20778:1;20771:15;20805:4;20802:1;20795:15;20821:120;20861:1;20887;20877:35;;20892:18;;:::i;:::-;-1:-1:-1;20926:9:26;;20821:120::o;21225:417::-;-1:-1:-1;;;;;21474:32:26;;;;21456:51;;21538:2;21523:18;;21516:34;;;;21581:2;21566:18;;21559:34;21624:2;21609:18;;21602:34;21443:3;21428:19;;21225:417::o;21647:456::-;-1:-1:-1;;;;;21896:32:26;;;;21878:51;;21960:2;21945:18;;21938:34;;;;22003:2;21988:18;;21981:34;-1:-1:-1;;;;;22051:45:26;22046:2;22031:18;;22024:73;21865:3;21850:19;;21647:456::o;22108:251::-;22148:3;-1:-1:-1;;;;;22235:2:26;22232:1;22228:10;22265:2;22262:1;22258:10;22296:3;22292:2;22288:12;22283:3;22280:21;22277:47;;;22304:18;;:::i;:::-;22340:13;;22108:251;-1:-1:-1;;;;22108:251:26:o;23351:414::-;23637:6;23629;23624:3;23611:33;-1:-1:-1;;;23663:16:26;;23710:23;;;23757:1;23749:10;;23351:414;-1:-1:-1;23351:414:26:o;24428:324::-;24630:2;24612:21;;;24669:1;24649:18;;;24642:29;-1:-1:-1;;;24702:2:26;24687:18;;24680:31;24743:2;24728:18;;24428:324::o;27003:112::-;27035:1;27061;27051:35;;27066:18;;:::i;:::-;-1:-1:-1;27100:9:26;;27003:112::o;28198:184::-;28268:6;28321:2;28309:9;28300:7;28296:23;28292:32;28289:52;;;28337:1;28334;28327:12;28289:52;-1:-1:-1;28360:16:26;;28198:184;-1:-1:-1;28198:184:26:o;28387:274::-;28516:3;28554:6;28548:13;28570:53;28616:6;28611:3;28604:4;28596:6;28592:17;28570:53;:::i;:::-;28639:16;;;;;28387:274;-1:-1:-1;;28387:274:26:o;28666:245::-;28733:6;28786:2;28774:9;28765:7;28761:23;28757:32;28754:52;;;28802:1;28799;28792:12;28754:52;28834:9;28828:16;28853:28;28875:5;28853:28;:::i;28916:561::-;-1:-1:-1;;;;;29213:15:26;;;29195:34;;29265:15;;29260:2;29245:18;;29238:43;29312:2;29297:18;;29290:34;;;29355:2;29340:18;;29333:34;;;29175:3;29398;29383:19;;29376:32;;;29138:4;;29425:46;;29451:19;;29443:6;29425:46;:::i;29482:249::-;29551:6;29604:2;29592:9;29583:7;29579:23;29575:32;29572:52;;;29620:1;29617;29610:12;29572:52;29652:9;29646:16;29671:30;29695:5;29671:30;:::i",
    "sourcePath": "/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/CerbySwapV1.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.11+commit.d7f03943"
    },
    "ast": {
        "absolutePath": "/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/CerbySwapV1.sol",
        "exportedSymbols": {
            "AccessSettings": [
                3823
            ],
            "CerbyCronJobsExecution": [
                178
            ],
            "CerbySwapV1": [
                344
            ],
            "CerbySwapV1_AdminFunctions": [
                593
            ],
            "CerbySwapV1_Declarations": [
                699
            ],
            "CerbySwapV1_ERC1155": [
                852
            ],
            "CerbySwapV1_EventsAndErrors": [
                957
            ],
            "CerbySwapV1_GetFunctions": [
                1563
            ],
            "CerbySwapV1_LiquidityFunctions": [
                2260
            ],
            "CerbySwapV1_Math": [
                2317
            ],
            "CerbySwapV1_MinimalProxy": [
                2387
            ],
            "CerbySwapV1_Modifiers": [
                2452
            ],
            "CerbySwapV1_SafeFunctions": [
                2677
            ],
            "CerbySwapV1_SwapFunctions": [
                3587
            ],
            "CerbySwapV1_VaultImplementation": [
                3723
            ],
            "ERC1155": [
                4659
            ],
            "ERC165": [
                4845
            ],
            "ICerbyBotDetection": [
                3773
            ],
            "ICerbySwapV1_VaultImplementation": [
                3808
            ],
            "ICerbyToken": [
                3925
            ],
            "ICerbyTokenMinterBurner": [
                3970
            ],
            "IERC1155": [
                4765
            ],
            "IERC1155MetadataURI": [
                4821
            ],
            "IERC1155Receiver": [
                4806
            ],
            "IERC165": [
                4857
            ],
            "IERC20": [
                3989
            ],
            "Ownable": [
                4092
            ],
            "TransactionInfo": [
                3730
            ]
        },
        "id": 345,
        "license": "BUSL-1.1",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 180,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".11"
                ],
                "nodeType": "PragmaDirective",
                "src": "38:24:1"
            },
            {
                "absolutePath": "/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/CerbySwapV1_AdminFunctions.sol",
                "file": "./CerbySwapV1_AdminFunctions.sol",
                "id": 181,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 345,
                "sourceUnit": 594,
                "src": "64:42:1",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/CerbySwapV1_SwapFunctions.sol",
                "file": "./CerbySwapV1_SwapFunctions.sol",
                "id": 182,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 345,
                "sourceUnit": 3588,
                "src": "107:41:1",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/CerbySwapV1_Tests/contracts/CerbySwapV1_VaultImplementation.sol",
                "file": "./CerbySwapV1_VaultImplementation.sol",
                "id": 183,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 345,
                "sourceUnit": 3724,
                "src": "149:47:1",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 184,
                            "name": "CerbySwapV1_AdminFunctions",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 593,
                            "src": "222:26:1"
                        },
                        "id": 185,
                        "nodeType": "InheritanceSpecifier",
                        "src": "222:26:1"
                    }
                ],
                "canonicalName": "CerbySwapV1",
                "contractDependencies": [
                    3723
                ],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 344,
                "linearizedBaseContracts": [
                    344,
                    593,
                    4092,
                    3587,
                    2260,
                    1563,
                    2677,
                    2387,
                    852,
                    178,
                    4659,
                    4821,
                    4765,
                    4845,
                    4857,
                    2317,
                    2452,
                    699,
                    957
                ],
                "name": "CerbySwapV1",
                "nameLocation": "207:11:1",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 338,
                            "nodeType": "Block",
                            "src": "270:2317:1",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 189,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "313:3:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 190,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "313:10:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 188,
                                            "name": "_transferOwnership",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4091,
                                            "src": "281:18:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                                "typeString": "function (address)"
                                            }
                                        },
                                        "id": 191,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "281:52:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 192,
                                    "nodeType": "ExpressionStatement",
                                    "src": "281:52:1"
                                },
                                {
                                    "assignments": [
                                        194
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 194,
                                            "mutability": "mutable",
                                            "name": "mintFeeBeneficiary",
                                            "nameLocation": "352:18:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 338,
                                            "src": "344:26:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 193,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "344:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 196,
                                    "initialValue": {
                                        "hexValue": "307864454637386132386337384134363135393864393438626330633638396365383866383132414438",
                                        "id": 195,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "373:42:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "value": "0xdEF78a28c78A461598d948bc0c689ce88f812AD8"
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "344:71:1"
                                },
                                {
                                    "assignments": [
                                        198
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 198,
                                            "mutability": "mutable",
                                            "name": "mintFeeMultiplier",
                                            "nameLocation": "460:17:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 338,
                                            "src": "452:25:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 197,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "452:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 204,
                                    "initialValue": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 203,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "id": 201,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 199,
                                                "name": "MINT_FEE_DENORM",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 623,
                                                "src": "480:15:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                                "hexValue": "3230",
                                                "id": 200,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "498:2:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_20_by_1",
                                                    "typeString": "int_const 20"
                                                },
                                                "value": "20"
                                            },
                                            "src": "480:20:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                            "hexValue": "313030",
                                            "id": 202,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "503:3:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_100_by_1",
                                                "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                        },
                                        "src": "480:26:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "452:54:1"
                                },
                                {
                                    "assignments": [
                                        206
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 206,
                                            "mutability": "mutable",
                                            "name": "tvlMultiplier",
                                            "nameLocation": "574:13:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 338,
                                            "src": "566:21:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 205,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "566:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 208,
                                    "initialValue": {
                                        "hexValue": "31333639383633303134",
                                        "id": 207,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "590:10:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1369863014_by_1",
                                            "typeString": "int_const 1369863014"
                                        },
                                        "value": "1369863014"
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "566:34:1"
                                },
                                {
                                    "assignments": [
                                        210
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 210,
                                            "mutability": "mutable",
                                            "name": "feeMinimum",
                                            "nameLocation": "635:10:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 338,
                                            "src": "627:18:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 209,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "627:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 212,
                                    "initialValue": {
                                        "hexValue": "31",
                                        "id": 211,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "648:1:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "627:22:1"
                                },
                                {
                                    "assignments": [
                                        214
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 214,
                                            "mutability": "mutable",
                                            "name": "feeMaximum",
                                            "nameLocation": "676:10:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 338,
                                            "src": "668:18:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 213,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "668:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 216,
                                    "initialValue": {
                                        "hexValue": "323030",
                                        "id": 215,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "689:3:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_200_by_1",
                                            "typeString": "int_const 200"
                                        },
                                        "value": "200"
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "668:24:1"
                                },
                                {
                                    "assignments": [
                                        218
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 218,
                                            "mutability": "mutable",
                                            "name": "tvlMultiplierMinimum",
                                            "nameLocation": "720:20:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 338,
                                            "src": "712:28:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 217,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "712:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 220,
                                    "initialValue": {
                                        "id": 219,
                                        "name": "tvlMultiplier",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 206,
                                        "src": "743:13:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "712:44:1"
                                },
                                {
                                    "assignments": [
                                        222
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 222,
                                            "mutability": "mutable",
                                            "name": "tvlMultiplierMaximum",
                                            "nameLocation": "796:20:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 338,
                                            "src": "788:28:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 221,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "788:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 228,
                                    "initialValue": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 227,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "id": 225,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 223,
                                                "name": "tvlMultiplier",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 206,
                                                "src": "819:13:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                                "id": 224,
                                                "name": "feeMaximum",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 214,
                                                "src": "847:10:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "src": "819:38:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                            "id": 226,
                                            "name": "feeMinimum",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 210,
                                            "src": "872:10:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "819:63:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "788:94:1"
                                },
                                {
                                    "expression": {
                                        "id": 253,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 229,
                                            "name": "settings",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 667,
                                            "src": "915:8:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Settings_$680_storage",
                                                "typeString": "struct CerbySwapV1_Declarations.Settings storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "id": 231,
                                                    "name": "mintFeeBeneficiary",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 194,
                                                    "src": "969:18:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "id": 234,
                                                            "name": "mintFeeMultiplier",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 198,
                                                            "src": "1027:17:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "id": 233,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "1020:6:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_uint32_$",
                                                            "typeString": "type(uint32)"
                                                        },
                                                        "typeName": {
                                                            "id": 232,
                                                            "name": "uint32",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1020:6:1",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 235,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1020:25:1",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint32",
                                                        "typeString": "uint32"
                                                    }
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "id": 238,
                                                            "name": "feeMinimum",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 210,
                                                            "src": "1078:10:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "id": 237,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "1071:6:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_uint16_$",
                                                            "typeString": "type(uint16)"
                                                        },
                                                        "typeName": {
                                                            "id": 236,
                                                            "name": "uint16",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1071:6:1",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 239,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1071:18:1",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint16",
                                                        "typeString": "uint16"
                                                    }
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "id": 242,
                                                            "name": "feeMaximum",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 214,
                                                            "src": "1122:10:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "id": 241,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "1115:6:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_uint16_$",
                                                            "typeString": "type(uint16)"
                                                        },
                                                        "typeName": {
                                                            "id": 240,
                                                            "name": "uint16",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1115:6:1",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 243,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1115:18:1",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint16",
                                                        "typeString": "uint16"
                                                    }
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "id": 246,
                                                            "name": "tvlMultiplierMinimum",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 218,
                                                            "src": "1176:20:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "id": 245,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "1169:6:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_uint64_$",
                                                            "typeString": "type(uint64)"
                                                        },
                                                        "typeName": {
                                                            "id": 244,
                                                            "name": "uint64",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1169:6:1",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 247,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1169:28:1",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint64",
                                                        "typeString": "uint64"
                                                    }
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "id": 250,
                                                            "name": "tvlMultiplierMaximum",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 222,
                                                            "src": "1240:20:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "id": 249,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "1233:6:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_uint64_$",
                                                            "typeString": "type(uint64)"
                                                        },
                                                        "typeName": {
                                                            "id": 248,
                                                            "name": "uint64",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1233:6:1",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 251,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1233:28:1",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint64",
                                                        "typeString": "uint64"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_uint32",
                                                        "typeString": "uint32"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_uint16",
                                                        "typeString": "uint16"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_uint16",
                                                        "typeString": "uint16"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_uint64",
                                                        "typeString": "uint64"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_uint64",
                                                        "typeString": "uint64"
                                                    }
                                                ],
                                                "id": 230,
                                                "name": "Settings",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 680,
                                                "src": "926:8:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_struct$_Settings_$680_storage_ptr_$",
                                                    "typeString": "type(struct CerbySwapV1_Declarations.Settings storage pointer)"
                                                }
                                            },
                                            "id": 252,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "structConstructorCall",
                                            "lValueRequested": false,
                                            "names": [
                                                "mintFeeBeneficiary",
                                                "mintFeeMultiplier",
                                                "feeMinimum",
                                                "feeMaximum",
                                                "tvlMultiplierMinimum",
                                                "tvlMultiplierMaximum"
                                            ],
                                            "nodeType": "FunctionCall",
                                            "src": "926:346:1",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Settings_$680_memory_ptr",
                                                "typeString": "struct CerbySwapV1_Declarations.Settings memory"
                                            }
                                        },
                                        "src": "915:357:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Settings_$680_storage",
                                            "typeString": "struct CerbySwapV1_Declarations.Settings storage ref"
                                        }
                                    },
                                    "id": 254,
                                    "nodeType": "ExpressionStatement",
                                    "src": "915:357:1"
                                },
                                {
                                    "assignments": [
                                        260
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 260,
                                            "mutability": "mutable",
                                            "name": "tradeVolumePerPeriodInCerUsd",
                                            "nameLocation": "1364:28:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 338,
                                            "src": "1325:67:1",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint40_$6_memory_ptr",
                                                "typeString": "uint40[6]"
                                            },
                                            "typeName": {
                                                "baseType": {
                                                    "id": 258,
                                                    "name": "uint40",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "1325:6:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint40",
                                                        "typeString": "uint40"
                                                    }
                                                },
                                                "id": 259,
                                                "length": {
                                                    "id": 257,
                                                    "name": "NUMBER_OF_TRADE_PERIODS",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 647,
                                                    "src": "1332:23:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "ArrayTypeName",
                                                "src": "1325:31:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint40_$6_storage_ptr",
                                                    "typeString": "uint40[6]"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 261,
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1325:67:1"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 266,
                                                        "name": "tradeVolumePerPeriodInCerUsd",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 260,
                                                        "src": "1479:28:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_uint40_$6_memory_ptr",
                                                            "typeString": "uint40[6] memory"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "30",
                                                        "id": 267,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1548:1:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        },
                                                        "value": "0"
                                                    },
                                                    {
                                                        "hexValue": "30",
                                                        "id": 268,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1590:1:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        },
                                                        "value": "0"
                                                    },
                                                    {
                                                        "hexValue": "30",
                                                        "id": 269,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1625:1:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        },
                                                        "value": "0"
                                                    },
                                                    {
                                                        "hexValue": "30",
                                                        "id": 270,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1658:1:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        },
                                                        "value": "0"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_array$_t_uint40_$6_memory_ptr",
                                                            "typeString": "uint40[6] memory"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        }
                                                    ],
                                                    "id": 265,
                                                    "name": "Pool",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 693,
                                                    "src": "1426:4:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_struct$_Pool_$693_storage_ptr_$",
                                                        "typeString": "type(struct CerbySwapV1_Declarations.Pool storage pointer)"
                                                    }
                                                },
                                                "id": 271,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "structConstructorCall",
                                                "lValueRequested": false,
                                                "names": [
                                                    "tradeVolumePerPeriodInCerUsd",
                                                    "lastCachedTradePeriod",
                                                    "lastCachedOneMinusFee",
                                                    "lastSqrtKValue",
                                                    "creditCerUsd"
                                                ],
                                                "nodeType": "FunctionCall",
                                                "src": "1426:248:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Pool_$693_memory_ptr",
                                                    "typeString": "struct CerbySwapV1_Declarations.Pool memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_struct$_Pool_$693_memory_ptr",
                                                    "typeString": "struct CerbySwapV1_Declarations.Pool memory"
                                                }
                                            ],
                                            "expression": {
                                                "id": 262,
                                                "name": "pools",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 602,
                                                "src": "1402:5:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_Pool_$693_storage_$dyn_storage",
                                                    "typeString": "struct CerbySwapV1_Declarations.Pool storage ref[] storage ref"
                                                }
                                            },
                                            "id": 264,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "push",
                                            "nodeType": "MemberAccess",
                                            "src": "1402:10:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Pool_$693_storage_$dyn_storage_ptr_$_t_struct$_Pool_$693_storage_$returns$__$bound_to$_t_array$_t_struct$_Pool_$693_storage_$dyn_storage_ptr_$",
                                                "typeString": "function (struct CerbySwapV1_Declarations.Pool storage ref[] storage pointer,struct CerbySwapV1_Declarations.Pool storage ref)"
                                            }
                                        },
                                        "id": 272,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1402:282:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 273,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1402:282:1"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 277,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "expression": {
                                                "id": 274,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967292,
                                                "src": "1699:5:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                }
                                            },
                                            "id": 275,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "chainid",
                                            "nodeType": "MemberAccess",
                                            "src": "1699:13:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                            "hexValue": "31",
                                            "id": 276,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1716:1:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "1699:18:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": {
                                        "condition": {
                                            "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "id": 286,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "expression": {
                                                    "id": 283,
                                                    "name": "block",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967292,
                                                    "src": "1834:5:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_block",
                                                        "typeString": "block"
                                                    }
                                                },
                                                "id": 284,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "chainid",
                                                "nodeType": "MemberAccess",
                                                "src": "1834:13:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                                "hexValue": "3536",
                                                "id": 285,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1851:2:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_56_by_1",
                                                    "typeString": "int_const 56"
                                                },
                                                "value": "56"
                                            },
                                            "src": "1834:19:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "falseBody": {
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 295,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 292,
                                                        "name": "block",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967292,
                                                        "src": "1965:5:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_block",
                                                            "typeString": "block"
                                                        }
                                                    },
                                                    "id": 293,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "chainid",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1965:13:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "hexValue": "313337",
                                                    "id": 294,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1982:3:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_137_by_1",
                                                        "typeString": "int_const 137"
                                                    },
                                                    "value": "137"
                                                },
                                                "src": "1965:20:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "falseBody": {
                                                "condition": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 304,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "expression": {
                                                            "id": 301,
                                                            "name": "block",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967292,
                                                            "src": "2101:5:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_block",
                                                                "typeString": "block"
                                                            }
                                                        },
                                                        "id": 302,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "chainid",
                                                        "nodeType": "MemberAccess",
                                                        "src": "2101:13:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                        "hexValue": "3433313134",
                                                        "id": 303,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "2118:5:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_43114_by_1",
                                                            "typeString": "int_const 43114"
                                                        },
                                                        "value": "43114"
                                                    },
                                                    "src": "2101:22:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "falseBody": {
                                                    "condition": {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 313,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "id": 310,
                                                                "name": "block",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967292,
                                                                "src": "2241:5:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_block",
                                                                    "typeString": "block"
                                                                }
                                                            },
                                                            "id": 311,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "chainid",
                                                            "nodeType": "MemberAccess",
                                                            "src": "2241:13:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "hexValue": "323530",
                                                            "id": 312,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "2258:3:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_250_by_1",
                                                                "typeString": "int_const 250"
                                                            },
                                                            "value": "250"
                                                        },
                                                        "src": "2241:20:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    "id": 319,
                                                    "nodeType": "IfStatement",
                                                    "src": "2237:129:1",
                                                    "trueBody": {
                                                        "id": 318,
                                                        "nodeType": "Block",
                                                        "src": "2263:103:1",
                                                        "statements": [
                                                            {
                                                                "expression": {
                                                                    "id": 316,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftHandSide": {
                                                                        "id": 314,
                                                                        "name": "nativeToken",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 620,
                                                                        "src": "2299:11:1",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    "nodeType": "Assignment",
                                                                    "operator": "=",
                                                                    "rightHandSide": {
                                                                        "hexValue": "307832316265333730443533313266343463423432636533373742433962386130634546314134433833",
                                                                        "id": 315,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "number",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "2313:42:1",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        },
                                                                        "value": "0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83"
                                                                    },
                                                                    "src": "2299:56:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "id": 317,
                                                                "nodeType": "ExpressionStatement",
                                                                "src": "2299:56:1"
                                                            }
                                                        ]
                                                    }
                                                },
                                                "id": 320,
                                                "nodeType": "IfStatement",
                                                "src": "2097:269:1",
                                                "trueBody": {
                                                    "id": 309,
                                                    "nodeType": "Block",
                                                    "src": "2125:106:1",
                                                    "statements": [
                                                        {
                                                            "expression": {
                                                                "id": 307,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftHandSide": {
                                                                    "id": 305,
                                                                    "name": "nativeToken",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 620,
                                                                    "src": "2164:11:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "nodeType": "Assignment",
                                                                "operator": "=",
                                                                "rightHandSide": {
                                                                    "hexValue": "307842333166363641413343316537383533363346303837354131423734453237623835464436366337",
                                                                    "id": 306,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "2178:42:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    },
                                                                    "value": "0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7"
                                                                },
                                                                "src": "2164:56:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "id": 308,
                                                            "nodeType": "ExpressionStatement",
                                                            "src": "2164:56:1"
                                                        }
                                                    ]
                                                }
                                            },
                                            "id": 321,
                                            "nodeType": "IfStatement",
                                            "src": "1961:405:1",
                                            "trueBody": {
                                                "id": 300,
                                                "nodeType": "Block",
                                                "src": "1987:104:1",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "id": 298,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "id": 296,
                                                                "name": "nativeToken",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 620,
                                                                "src": "2024:11:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "hexValue": "307830643530304231643845386546333145323143393964314462394136343434643341446631323730",
                                                                "id": 297,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "2038:42:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                },
                                                                "value": "0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270"
                                                            },
                                                            "src": "2024:56:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "id": 299,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "2024:56:1"
                                                    }
                                                ]
                                            }
                                        },
                                        "id": 322,
                                        "nodeType": "IfStatement",
                                        "src": "1830:536:1",
                                        "trueBody": {
                                            "id": 291,
                                            "nodeType": "Block",
                                            "src": "1855:100:1",
                                            "statements": [
                                                {
                                                    "expression": {
                                                        "id": 289,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftHandSide": {
                                                            "id": 287,
                                                            "name": "nativeToken",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 620,
                                                            "src": "1888:11:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "Assignment",
                                                        "operator": "=",
                                                        "rightHandSide": {
                                                            "hexValue": "307862623443644239434264333642303162443163426145424632446530386439313733626330393563",
                                                            "id": 288,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1902:42:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            },
                                                            "value": "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"
                                                        },
                                                        "src": "1888:56:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "id": 290,
                                                    "nodeType": "ExpressionStatement",
                                                    "src": "1888:56:1"
                                                }
                                            ]
                                        }
                                    },
                                    "id": 323,
                                    "nodeType": "IfStatement",
                                    "src": "1695:671:1",
                                    "trueBody": {
                                        "id": 282,
                                        "nodeType": "Block",
                                        "src": "1719:105:1",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 280,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 278,
                                                        "name": "nativeToken",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 620,
                                                        "src": "1757:11:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
                                                        "id": 279,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1771:42:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
                                                    },
                                                    "src": "1757:56:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "id": 281,
                                                "nodeType": "ExpressionStatement",
                                                "src": "1757:56:1"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "expression": {
                                        "id": 326,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 324,
                                            "name": "nativeToken",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 620,
                                            "src": "2408:11:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "307831343736394639366535374238306336363833373730314445304234333638364662343633324465",
                                            "id": 325,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2422:42:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "value": "0x14769F96e57B80c66837701DE0B43686Fb4632De"
                                        },
                                        "src": "2408:56:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 327,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2408:56:1"
                                },
                                {
                                    "expression": {
                                        "id": 336,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 328,
                                            "name": "vaultImplementation",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 608,
                                            "src": "2490:19:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "id": 333,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "NewExpression",
                                                        "src": "2533:35:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_CerbySwapV1_VaultImplementation_$3723_$",
                                                            "typeString": "function () returns (contract CerbySwapV1_VaultImplementation)"
                                                        },
                                                        "typeName": {
                                                            "id": 332,
                                                            "nodeType": "UserDefinedTypeName",
                                                            "pathNode": {
                                                                "id": 331,
                                                                "name": "CerbySwapV1_VaultImplementation",
                                                                "nodeType": "IdentifierPath",
                                                                "referencedDeclaration": 3723,
                                                                "src": "2537:31:1"
                                                            },
                                                            "referencedDeclaration": 3723,
                                                            "src": "2537:31:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_CerbySwapV1_VaultImplementation_$3723",
                                                                "typeString": "contract CerbySwapV1_VaultImplementation"
                                                            }
                                                        }
                                                    },
                                                    "id": 334,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "2533:37:1",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_CerbySwapV1_VaultImplementation_$3723",
                                                        "typeString": "contract CerbySwapV1_VaultImplementation"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_contract$_CerbySwapV1_VaultImplementation_$3723",
                                                        "typeString": "contract CerbySwapV1_VaultImplementation"
                                                    }
                                                ],
                                                "id": 330,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "2512:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                    "id": 329,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "2512:7:1",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 335,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2512:68:1",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "2490:90:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 337,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2490:90:1"
                                }
                            ]
                        },
                        "id": 339,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 186,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "267:2:1"
                        },
                        "returnParameters": {
                            "id": 187,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "270:0:1"
                        },
                        "scope": 344,
                        "src": "256:2331:1",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 342,
                            "nodeType": "Block",
                            "src": "2620:2:1",
                            "statements": []
                        },
                        "id": 343,
                        "implemented": true,
                        "kind": "receive",
                        "modifiers": [],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 340,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2600:2:1"
                        },
                        "returnParameters": {
                            "id": 341,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2620:0:1"
                        },
                        "scope": 344,
                        "src": "2593:29:1",
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 345,
                "src": "198:2426:1",
                "usedErrors": [
                    14,
                    718,
                    720,
                    912,
                    914,
                    916,
                    918,
                    920,
                    922,
                    924,
                    926,
                    928,
                    930,
                    932,
                    934,
                    936,
                    938,
                    940,
                    942,
                    944,
                    946,
                    948,
                    950,
                    952,
                    954,
                    956,
                    4002,
                    4004,
                    4131,
                    4133,
                    4135,
                    4137,
                    4139,
                    4141,
                    4143,
                    4145
                ]
            }
        ],
        "src": "38:2587:1"
    },
    "functionHashes": {
        "addTokenLiquidity(address,uint256,uint256,address)": "43fefad4",
        "adminChangeCerUsdCreditInPool(address,uint256)": "cab4ba82",
        "adminCreatePool(address,uint256,uint256,address)": "d5d60737",
        "adminInitialize()": "c09c923b",
        "adminSetURI(string)": "a7fd40bf",
        "adminUpdateFeesAndTvlMultipliers((address,uint32,uint16,uint16,uint64,uint64))": "4301bae1",
        "adminUpdateNameAndSymbol(string,string)": "3935ac11",
        "balanceOf(address,uint256)": "00fdd58e",
        "balanceOfBatch(address[],uint256[])": "4e1273f4",
        "createPool(address,uint256,uint256,address)": "842980f4",
        "decimals()": "313ce567",
        "exists(uint256)": "4f558e79",
        "getCurrentOneMinusFeeBasedOnTrades(address)": "4c3c0eb2",
        "getInputTokensForExactTokens(address,address,uint256)": "c790985a",
        "getOutputExactTokensForTokens(address,address,uint256)": "48b08d62",
        "getPoolsByTokens(address[])": "34e150ab",
        "getSettings()": "85b4bb53",
        "getTokenToPoolId(address)": "61417516",
        "getUtilsContractAtPos(uint256)": "06fb1a07",
        "increaseCerUsdCreditInPool(address,uint256)": "71858049",
        "isApprovedForAll(address,address)": "e985e9c5",
        "name()": "06fdde03",
        "owner()": "8da5cb5b",
        "removeTokenLiquidity(address,uint256,uint256,address)": "74fcf071",
        "renounceOwnership()": "715018a6",
        "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
        "setApprovalForAll(address,bool)": "a22cb465",
        "supportsInterface(bytes4)": "01ffc9a7",
        "swapExactTokensForTokens(address,address,uint256,uint256,uint256,address)": "a60c6e55",
        "swapTokensForExactTokens(address,address,uint256,uint256,uint256,address)": "f6524724",
        "symbol()": "95d89b41",
        "testInit()": "b5d11e99",
        "testSetupTokens(address,address,address,address,address)": "eca01093",
        "totalSupply()": "18160ddd",
        "totalSupply(uint256)": "bd85b039",
        "transferOwnership(address)": "f2fde38b",
        "uri(uint256)": "0e89341c"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "3741000",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "addTokenLiquidity(address,uint256,uint256,address)": "infinite",
            "adminChangeCerUsdCreditInPool(address,uint256)": "infinite",
            "adminCreatePool(address,uint256,uint256,address)": "infinite",
            "adminInitialize()": "infinite",
            "adminSetURI(string)": "infinite",
            "adminUpdateFeesAndTvlMultipliers((address,uint32,uint16,uint16,uint64,uint64))": "infinite",
            "adminUpdateNameAndSymbol(string,string)": "infinite",
            "balanceOf(address,uint256)": "2720",
            "balanceOfBatch(address[],uint256[])": "infinite",
            "createPool(address,uint256,uint256,address)": "infinite",
            "decimals()": "271",
            "exists(uint256)": "2517",
            "getCurrentOneMinusFeeBasedOnTrades(address)": "infinite",
            "getInputTokensForExactTokens(address,address,uint256)": "infinite",
            "getOutputExactTokensForTokens(address,address,uint256)": "infinite",
            "getPoolsByTokens(address[])": "infinite",
            "getSettings()": "5158",
            "getTokenToPoolId(address)": "2609",
            "getUtilsContractAtPos(uint256)": "infinite",
            "increaseCerUsdCreditInPool(address,uint256)": "infinite",
            "isApprovedForAll(address,address)": "infinite",
            "name()": "infinite",
            "owner()": "2443",
            "removeTokenLiquidity(address,uint256,uint256,address)": "infinite",
            "renounceOwnership()": "28261",
            "safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
            "setApprovalForAll(address,bool)": "infinite",
            "supportsInterface(bytes4)": "455",
            "swapExactTokensForTokens(address,address,uint256,uint256,uint256,address)": "infinite",
            "swapTokensForExactTokens(address,address,uint256,uint256,uint256,address)": "infinite",
            "symbol()": "infinite",
            "testInit()": "infinite",
            "testSetupTokens(address,address,address,address,address)": "infinite",
            "totalSupply()": "infinite",
            "totalSupply(uint256)": "2472",
            "transferOwnership(address)": "infinite",
            "uri(uint256)": "infinite"
        }
    }
}