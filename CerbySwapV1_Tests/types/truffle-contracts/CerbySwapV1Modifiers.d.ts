/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface CerbySwapV1ModifiersContract
  extends Truffle.Contract<CerbySwapV1ModifiersInstance> {
  "new"(
    meta?: Truffle.TransactionDetails
  ): Promise<CerbySwapV1ModifiersInstance>;
}

export interface LiquidityAdded {
  name: "LiquidityAdded";
  args: {
    token: string;
    amountTokensIn: BN;
    amountCerUsdToMint: BN;
    lpAmount: BN;
    0: string;
    1: BN;
    2: BN;
    3: BN;
  };
}

export interface LiquidityRemoved {
  name: "LiquidityRemoved";
  args: {
    token: string;
    amountTokensOut: BN;
    amountCerUsdToBurn: BN;
    amountLpTokensBalanceToBurn: BN;
    0: string;
    1: BN;
    2: BN;
    3: BN;
  };
}

export interface PairCreated {
  name: "PairCreated";
  args: {
    token: string;
    poolId: BN;
    0: string;
    1: BN;
  };
}

export interface Swap {
  name: "Swap";
  args: {
    token: string;
    sender: string;
    amountTokensIn: BN;
    amountCerUsdIn: BN;
    amountTokensOut: BN;
    amountCerUsdOut: BN;
    currentFee: BN;
    transferTo: string;
    0: string;
    1: string;
    2: BN;
    3: BN;
    4: BN;
    5: BN;
    6: BN;
    7: string;
  };
}

export interface Sync {
  name: "Sync";
  args: {
    token: string;
    newBalanceToken: BN;
    newBalanceCerUsd: BN;
    newCreditCerUsd: BN;
    0: string;
    1: BN;
    2: BN;
    3: BN;
  };
}

type AllEvents = LiquidityAdded | LiquidityRemoved | PairCreated | Swap | Sync;

export interface CerbySwapV1ModifiersInstance extends Truffle.ContractInstance {
  methods: {};

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
