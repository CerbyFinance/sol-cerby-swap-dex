{
	"compiler": {
		"version": "0.8.11+commit.d7f03943"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "CerbyCronJobsExecution_TransactionsAreTemporarilyDisabled",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapLP1155V1_CallerIsNotOwnerNorApproved",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapLP1155V1_TransactionsAreTemporarilyDisabled",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_AmountOfCerUsdMustBeLargerThanOne",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_AmountOfCerUsdOrTokensInMustBeLargerThanOne",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_AmountOfTokensMustBeLargerThanOne",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_CreditCerUsdIsOverflown",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_CreditCerUsdMustNotBeBelowZero",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_FeeIsWrong",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_FeeOnTransferTokensArentSupported",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_InputCerUsdAmountIsLargerThanMaximumSpecified",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_InputTokensAmountIsLargerThanMaximumSpecified",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_InvariantKValueMustBeSameOrIncreasedOnAnySwaps",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_MintFeeMultiplierMustNotBeLargerThan50Percent",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_MsgValueProvidedMustBeLargerThanAmountTokensIn",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_MsgValueProvidedMustBeZero",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_OutputCerUsdAmountIsLowerThanMinimumSpecified",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_OutputTokensAmountIsLowerThanMinimumSpecified",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_SafeTransferFromFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_SafeTransferNativeFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_SafeTransferTokensFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_SwappingTokenToSameTokenIsForbidden",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_TokenAlreadyExists",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_TokenDoesNotExist",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_TransactionIsExpired",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_TvlMultiplierIsWrong",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_AccountsAndIdsLengthMismatch",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_BalanceQueryForTheZeroAddress",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_BurnAmountExceedsBalance",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_BurnFromZeroAddress",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_ERC1155ReceiverRejectsTokens",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_IdsAndAmountsLengthMismatch",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_InsufficientBalanceForTransfer",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_MintToZeroAddress",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_SettingApprovalStatusForSelf",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_TransferToNonERC1155ReceiverImplementer",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_TransferToZeroAddress",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "Ownable_CallerIsNotOwner",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "Ownable_NewOwnerIsNotTheZeroAddress",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "ApprovalForAll",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountTokensIn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountCerUsdToMint",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lpAmount",
						"type": "uint256"
					}
				],
				"name": "LiquidityAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountTokensOut",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountCerUsdToBurn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountLpTokensBalanceToBurn",
						"type": "uint256"
					}
				],
				"name": "LiquidityRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "poolId",
						"type": "uint256"
					}
				],
				"name": "PairCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountTokensIn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountCerUsdIn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountTokensOut",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountCerUsdOut",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "currentFee",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "transferTo",
						"type": "address"
					}
				],
				"name": "Swap",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newBalanceToken",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newBalanceCerUsd",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newCreditCerUsd",
						"type": "uint256"
					}
				],
				"name": "Sync",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "values",
						"type": "uint256[]"
					}
				],
				"name": "TransferBatch",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "TransferSingle",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "value",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "URI",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountTokensIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "expireTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "transferTo",
						"type": "address"
					}
				],
				"name": "addTokenLiquidity",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountCerUsdCredit",
						"type": "uint256"
					}
				],
				"name": "adminChangeCerUsdCreditInPool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountTokensIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountCerUsdToMint",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "transferTo",
						"type": "address"
					}
				],
				"name": "adminCreatePool",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "adminInitialize",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "newUrlPrefix",
						"type": "string"
					}
				],
				"name": "adminSetURI",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "mintFeeBeneficiary",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "mintFeeMultiplier",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "feeMinimum",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "feeMaximum",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tvlMultiplierMinimum",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tvlMultiplierMaximum",
								"type": "uint256"
							}
						],
						"internalType": "struct CerbySwapV1_Declarations.Settings",
						"name": "_settings",
						"type": "tuple"
					}
				],
				"name": "adminUpdateFeesAndTvlMultipliers",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "newName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "newSymbol",
						"type": "string"
					}
				],
				"name": "adminUpdateNameAndSymbol",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "accounts",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					}
				],
				"name": "balanceOfBatch",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountTokensIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountCerUsdToMint",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "transferTo",
						"type": "address"
					}
				],
				"name": "createPool",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "exists",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "getCurrentOneMinusFeeBasedOnTrades",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "fee",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenIn",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenOut",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountTokensOut",
						"type": "uint256"
					}
				],
				"name": "getInputTokensForExactTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountTokensIn",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenIn",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenOut",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountTokensIn",
						"type": "uint256"
					}
				],
				"name": "getOutputExactTokensForTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountTokensOut",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					}
				],
				"name": "getPoolsByIds",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint32[8]",
								"name": "tradeVolumePerPeriodInCerUsd",
								"type": "uint32[8]"
							},
							{
								"internalType": "uint128",
								"name": "balanceToken",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "balanceCerUsd",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "lastSqrtKValue",
								"type": "uint128"
							},
							{
								"internalType": "uint256",
								"name": "creditCerUsd",
								"type": "uint256"
							}
						],
						"internalType": "struct CerbySwapV1_Declarations.Pool[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "tokens",
						"type": "address[]"
					}
				],
				"name": "getPoolsByTokens",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint32[8]",
								"name": "tradeVolumePerPeriodInCerUsd",
								"type": "uint32[8]"
							},
							{
								"internalType": "uint128",
								"name": "balanceToken",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "balanceCerUsd",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "lastSqrtKValue",
								"type": "uint128"
							},
							{
								"internalType": "uint256",
								"name": "creditCerUsd",
								"type": "uint256"
							}
						],
						"internalType": "struct CerbySwapV1_Declarations.Pool[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getSettings",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "mintFeeBeneficiary",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "mintFeeMultiplier",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "feeMinimum",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "feeMaximum",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tvlMultiplierMinimum",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tvlMultiplierMaximum",
								"type": "uint256"
							}
						],
						"internalType": "struct CerbySwapV1_Declarations.Settings",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "getTokenToPoolId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "pos",
						"type": "uint256"
					}
				],
				"name": "getUtilsContractAtPos",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountCerUsdCredit",
						"type": "uint256"
					}
				],
				"name": "increaseCerUsdCreditInPool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					}
				],
				"name": "isApprovedForAll",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountTokensOut",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountCerUsdOut",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "transferTo",
						"type": "address"
					}
				],
				"name": "lowLevelSwap",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountLpTokensBalanceToBurn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "expireTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "transferTo",
						"type": "address"
					}
				],
				"name": "removeTokenLiquidity",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "amounts",
						"type": "uint256[]"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "safeBatchTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "setApprovalForAll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenIn",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenOut",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountTokensIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "minAmountTokensOut",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "expireTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "transferTo",
						"type": "address"
					}
				],
				"name": "swapExactTokensForTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenIn",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenOut",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountTokensOut",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maxAmountTokensIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "expireTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "transferTo",
						"type": "address"
					}
				],
				"name": "swapTokensForExactTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "syncPool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "testInit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_testCerbyToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_cerUsdToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_testUsdcToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "testSetupTokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "uri",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"balanceOf(address,uint256)": {
					"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
				},
				"balanceOfBatch(address[],uint256[])": {
					"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
				},
				"exists(uint256)": {
					"details": "Indicates whether any token exist with a given id, or not."
				},
				"isApprovedForAll(address,address)": {
					"details": "See {IERC1155-isApprovedForAll}."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
					"details": "See {IERC1155-safeBatchTransferFrom}."
				},
				"safeTransferFrom(address,address,uint256,uint256,bytes)": {
					"details": "See {IERC1155-safeTransferFrom}."
				},
				"setApprovalForAll(address,bool)": {
					"details": "See {IERC1155-setApprovalForAll}."
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}."
				},
				"totalSupply(uint256)": {
					"details": "Total amount of tokens in with a given id."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"sol-cerby-swap-v1/CerbySwapV1.sol": "CerbySwapV1"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"sol-cerby-swap-v1/CerbyCronJobsExecution.sol": {
			"keccak256": "0xefa5b53f0157193788ee0ec5312bf567afc908263755e5ad917dd0738717cb12",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://715127ba21afb540fe48c5e983db28d2ce29c67f03ce7a0ab876465336b9f36f",
				"dweb:/ipfs/QmNceFtzHMgVrS4m1bNtjdBUZ2hs6v4KzDbTCeDxN9UpHw"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1.sol": {
			"keccak256": "0x84810a1d95d4c3979e06b34ae5768b709272b7260ce0ebf3930b99b2ed8e5f1b",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://50b5f1b794d4eac7b36a02c641db88e5bee273589f6d0ffc0e64988cc274e644",
				"dweb:/ipfs/QmTRYthW9d8B9ZGtpUhPxQJcsjQcNxTDLFH36FhuLFL7Et"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_AdminFunctions.sol": {
			"keccak256": "0xb2adf8b2f9357a3142828210f415c776cacc1aaa6e334798260bfa9329735a47",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://4c20d6b89412605817527f8c59f6b3ef9c592a125be98074f8f90bd3242cc48c",
				"dweb:/ipfs/QmayfazA9fG11zouD4GSzw2GNGhyT4neJh1XK118kJXPQ6"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_Declarations.sol": {
			"keccak256": "0xb20640c7221aa7220bc5f2f0bb2b05682a60ddf39d6afcf33644245897518fba",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://e0998e32a0cf4dfebe9faca4bd7bf8bb3e6186c0d620817c7a37d843a1534139",
				"dweb:/ipfs/QmeNZWB4crTVFuBkmXwX5b4QiLbndXdBwsSkwzT3J13o5X"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_ERC1155.sol": {
			"keccak256": "0x6d3a83fce71198a2e4c69bd788f245d8152e4a7ec40857f1848b1dd6419ecb41",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://a79c0ce209e8049d367a80ec2a6f4d0a8fe7a77298c0c3d463e5fce07da0ade5",
				"dweb:/ipfs/QmUXiFhH9HYMzhkA8TdMQHE14uNbBBTTPcqF1KgvZJ6rZD"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_EventsAndErrors.sol": {
			"keccak256": "0xeeb22fff8b3e3a76bef61887b3ad3b075fa5738ce4670b316b2229355dcab55d",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://dca4b38c814f4de14cee83f4cbde200f21c42b268a636d6ce34d39ecd1077af0",
				"dweb:/ipfs/Qma7jFHUkQcW3qSz9nojFQhMehFwTpGhA1pkXELD24zqcr"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_GetFunctions.sol": {
			"keccak256": "0x6eccdf2c988c5fcc9a318911e41ce22c86ec19b073ab71da39eeaa03b2482fdd",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://f9b9e0569280d6447f9f6c8f6677986a78151c00945b79edee0277a61e7c7700",
				"dweb:/ipfs/QmbP7XrJnE7nzDNti9pizXnWwxt9RAk5XfWYwmVcWR4N6r"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_LiquidityFunctions.sol": {
			"keccak256": "0x3d9d91d0c899b5b6bb07b24cf8dab1d324b364bb23a2792080b66f8455bd827a",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://f21e6c207dc1c2d1bfb7b448d06ce03f30c7659857c6696d004e64a41d36b034",
				"dweb:/ipfs/QmWGjEJ2KZo2jjhxTxPu2DiU9KLNN1REbFoNbBDRARnQ6z"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_Math.sol": {
			"keccak256": "0xd981444a687ccc1ea6971b0236a6295342802bc104f2f06e642c2cdd726a2adc",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://1d87a0f3ef64ca95344dce06c6600b496d3caac221feadd92788218e4bcb985f",
				"dweb:/ipfs/QmRm1vNvHp4QVY983iDP8MPuAFqzseMxBuRKqVpgQjSazT"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_Modifiers.sol": {
			"keccak256": "0x05c0863b600cf0de6556c3f44ab14862e1a5e02091f1be88e8b60d07a987f5a1",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://506eb7185a73998390f72673167eb5977721f3a986dd9039092ffb9a39c0a4c8",
				"dweb:/ipfs/QmNQPYTSZx6bV86APYM57enc35FTrNTKGPGzdF3jheQRyC"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_SafeFunctions.sol": {
			"keccak256": "0xa260a9070b77d2d9b453c93721e88de470cfe1ea646cc4eb8801d504b026ecf4",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://4cf233261eaa44f0ea0b4202c9a94914a334926ab20944d17bd319aa84238edc",
				"dweb:/ipfs/QmWMbQ3T1L8y6CriXKA7w1f1Q8govtbgLmMfWcN28wi7L9"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_SwapFunctions.sol": {
			"keccak256": "0x59e7e195e7b22ed1a1e6c3b1dbe638e2ce42c4840ca5528a42e7150a5ada125b",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://cc92374f956aad568aac1fb5c53484736b8fe7bf50b1369ff79f55887376af1d",
				"dweb:/ipfs/QmXmRErnPMXCcxzMV7TnDytzFb4mpcKsmQ5MX8Nargdhjf"
			]
		},
		"sol-cerby-swap-v1/interfaces/ICerbyBotDetection.sol": {
			"keccak256": "0x88ae2b0a36185fd4906dbc9e7bd41a682d05edf05478c27ca5ce9ff0bc5cdef2",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://9e13b92a1ddbd96344b9035c2bf91ada49bfad04ee4181929c36791ba224cbe9",
				"dweb:/ipfs/QmaVVRj9B3F32WpVuYzH6BZZE5751BrAcjWn81rVciAoRa"
			]
		},
		"sol-cerby-swap-v1/interfaces/ICerbyToken.sol": {
			"keccak256": "0x1cf233391c970f48f8e1a2db9a3e81c4ebb8c2ff423c6d1c553df632f04abf2d",
			"license": "MIT",
			"urls": [
				"bzz-raw://845a3faee636b03fa2b2e09a4d43df33ce2f1ac5f031c9f4d9f7a5f2a1d5ee7e",
				"dweb:/ipfs/QmV6PFf9HzucpBj4y6zvW7BbuMRGhQAEa7MRWKCCREgB7V"
			]
		},
		"sol-cerby-swap-v1/interfaces/ICerbyTokenMinterBurner.sol": {
			"keccak256": "0xe9662b09cb4a69c4bcd634ae71ca5e60f630b89e2ef8f818ccf12ceb47707013",
			"license": "BSD-2-Clause",
			"urls": [
				"bzz-raw://38d67dec9f8deaeb4adc5e58d8f483beef22cab8dbc191bc3247e3fc48e434eb",
				"dweb:/ipfs/QmR1f6cNhWzmDt5qJ9gjuFJL21FwmnNnBhH3beJ2JbPqnz"
			]
		},
		"sol-cerby-swap-v1/interfaces/IERC20.sol": {
			"keccak256": "0xa019774b5fa41b9bb839ad7bc75bd3ded2ae58bce9f2d83e7dd307fa943e5bab",
			"license": "MIT",
			"urls": [
				"bzz-raw://37b1999e95af73767b49405c9c669b97f952c227197dfd17836326f11654c66d",
				"dweb:/ipfs/QmaHk8vnZY9ZaWAVWCufr8UN4Fw1Kr2MX44czPyxCGFPWh"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/access/Ownable.sol": {
			"keccak256": "0x4028d9bdb76167ce5e16eba4da1b2b242b1fc44a2864edd41414507f44a896a4",
			"license": "MIT",
			"urls": [
				"bzz-raw://5ad472a548d6c85ed344d7c9607ca3186d0b82ff4983252a56f97d9dd83df4c0",
				"dweb:/ipfs/QmUmoiaoGDDASS6v6kp95sWZoUEweAYaXNSDr5K5DzqDpc"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/token/ERC1155/ERC1155.sol": {
			"keccak256": "0xef43a311c72201e893577cae6f1a8ecf9fd825cac3c20162d821d02488b56c6e",
			"license": "MIT",
			"urls": [
				"bzz-raw://0a37d25d99ca787546bafb80e34176c81547f2f352d2a5a49ee566205ee52f3d",
				"dweb:/ipfs/QmSGnZjvCbE8ARLWFK6z8R9vw1ExNaBfXxGWMEJPvPwKGB"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/token/ERC1155/IERC1155.sol": {
			"keccak256": "0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9",
			"license": "MIT",
			"urls": [
				"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5",
				"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/token/ERC1155/IERC1155Receiver.sol": {
			"keccak256": "0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566",
			"license": "MIT",
			"urls": [
				"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e",
				"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/token/ERC1155/extensions/ERC1155Supply.sol": {
			"keccak256": "0x2108b09ce3511b6e71ae743d85a4b18b21b54eeb1ff6df04f525daec279f410e",
			"license": "MIT",
			"urls": [
				"bzz-raw://925664ad2ae77f86e0ca588381352f3ac81f266e3fd7f20fbfa6feaec045a9fb",
				"dweb:/ipfs/QmfVGKaxxXWKfL3RKtu3GzdYzWdtivYJUMm1XzFhf3TZDp"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
			"keccak256": "0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574",
			"license": "MIT",
			"urls": [
				"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797",
				"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/utils/introspection/ERC165.sol": {
			"keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
			"license": "MIT",
			"urls": [
				"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
				"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		}
	},
	"version": 1
}