{
	"compiler": {
		"version": "0.8.11+commit.d7f03943"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "CerbyCronJobsExecution_TransactionsAreTemporarilyDisabled",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapLP1155V1_CallerIsNotOwnerNorApproved",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapLP1155V1_TransactionsAreTemporarilyDisabled",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_AmountOfCerUsdMustBeLargerThanOne",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_AmountOfCerUsdOrTokensInMustBeLargerThanOne",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_AmountOfTokensMustBeLargerThanOne",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_CreditCerUsdIsOverflown",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_CreditCerUsdMustNotBeBelowZero",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_FeeIsWrong",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_FeeOnTransferTokensArentSupported",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_InputCerUsdAmountIsLargerThanMaximumSpecified",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_InputTokensAmountIsLargerThanMaximumSpecified",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_InvariantKValueMustBeSameOrIncreasedOnAnySwaps",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_MintFeeMultiplierMustNotBeLargerThan50Percent",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_MsgValueProvidedMustBeLargerThanAmountTokensIn",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_MsgValueProvidedMustBeZero",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_OutputCerUsdAmountIsLowerThanMinimumSpecified",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_OutputTokensAmountIsLowerThanMinimumSpecified",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_SafeTransferFromFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_SafeTransferNativeFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_SafeTransferTokensFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_SwappingTokenToSameTokenIsForbidden",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_TokenAlreadyExists",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_TokenDoesNotExist",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_TransactionIsExpired",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_TvlMultiplierIsWrong",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_AccountsAndIdsLengthMismatch",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_BalanceQueryForTheZeroAddress",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_BurnAmountExceedsBalance",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_BurnFromZeroAddress",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_ERC1155ReceiverRejectsTokens",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_IdsAndAmountsLengthMismatch",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_InsufficientBalanceForTransfer",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_MintToZeroAddress",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_SettingApprovalStatusForSelf",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_TransferToNonERC1155ReceiverImplementer",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_TransferToZeroAddress",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "Ownable_CallerIsNotOwner",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "Ownable_NewOwnerIsNotTheZeroAddress",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "ApprovalForAll",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_amountTokensIn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_amountCerUsdToMint",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_lpAmount",
						"type": "uint256"
					}
				],
				"name": "LiquidityAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_amountTokensOut",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_amountCerUsdToBurn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_amountLpTokensBalanceToBurn",
						"type": "uint256"
					}
				],
				"name": "LiquidityRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_poolId",
						"type": "uint256"
					}
				],
				"name": "PoolCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_sender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_amountTokensIn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_amountCerUsdIn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "__amountTokensOut",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountCerUsdOut",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_currentFee",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_transferTo",
						"type": "address"
					}
				],
				"name": "Swap",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_newBalanceToken",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_newBalanceCerUsd",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_newCreditCerUsd",
						"type": "uint256"
					}
				],
				"name": "Sync",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "values",
						"type": "uint256[]"
					}
				],
				"name": "TransferBatch",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "TransferSingle",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "value",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "URI",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amountTokensIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_expireTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_transferTo",
						"type": "address"
					}
				],
				"name": "addTokenLiquidity",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amountCerUsdCredit",
						"type": "uint256"
					}
				],
				"name": "adminChangeCerUsdCreditInPool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amountTokensIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amountCerUsdToMint",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_transferTo",
						"type": "address"
					}
				],
				"name": "adminCreatePool",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "adminInitialize",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_newUrlPrefix",
						"type": "string"
					}
				],
				"name": "adminSetURI",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "mintFeeBeneficiary",
								"type": "address"
							},
							{
								"internalType": "uint32",
								"name": "mintFeeMultiplier",
								"type": "uint32"
							},
							{
								"internalType": "uint16",
								"name": "feeMinimum",
								"type": "uint16"
							},
							{
								"internalType": "uint16",
								"name": "feeMaximum",
								"type": "uint16"
							},
							{
								"internalType": "uint64",
								"name": "tvlMultiplierMinimum",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "tvlMultiplierMaximum",
								"type": "uint64"
							}
						],
						"internalType": "struct CerbySwapV1_Declarations.Settings",
						"name": "_settings",
						"type": "tuple"
					}
				],
				"name": "adminUpdateFeesAndTvlMultipliers",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_newContractName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_newContractSymbol",
						"type": "string"
					}
				],
				"name": "adminUpdateNameAndSymbol",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_account",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_accounts",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "_ids",
						"type": "uint256[]"
					}
				],
				"name": "balanceOfBatch",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amountTokensIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amountCerUsdToMint",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_transferTo",
						"type": "address"
					}
				],
				"name": "createPool",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "exists",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					}
				],
				"name": "getCurrentOneMinusFeeBasedOnTrades",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "fee",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_tokenIn",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_tokenOut",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amountTokensOut",
						"type": "uint256"
					}
				],
				"name": "getInputTokensForExactTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_tokenIn",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_tokenOut",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amountTokensIn",
						"type": "uint256"
					}
				],
				"name": "getOutputExactTokensForTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_tokens",
						"type": "address[]"
					}
				],
				"name": "getPoolsByTokens",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "balanceToken",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "balanceCerUsd",
								"type": "uint256"
							}
						],
						"internalType": "struct CerbySwapV1_Declarations.PoolBalances[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getSettings",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "mintFeeBeneficiary",
								"type": "address"
							},
							{
								"internalType": "uint32",
								"name": "mintFeeMultiplier",
								"type": "uint32"
							},
							{
								"internalType": "uint16",
								"name": "feeMinimum",
								"type": "uint16"
							},
							{
								"internalType": "uint16",
								"name": "feeMaximum",
								"type": "uint16"
							},
							{
								"internalType": "uint64",
								"name": "tvlMultiplierMinimum",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "tvlMultiplierMaximum",
								"type": "uint64"
							}
						],
						"internalType": "struct CerbySwapV1_Declarations.Settings",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					}
				],
				"name": "getTokenToPoolId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pos",
						"type": "uint256"
					}
				],
				"name": "getUtilsContractAtPos",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amountCerUsdCredit",
						"type": "uint256"
					}
				],
				"name": "increaseCerUsdCreditInPool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_account",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_operator",
						"type": "address"
					}
				],
				"name": "isApprovedForAll",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amountLpTokensBalanceToBurn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_expireTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_transferTo",
						"type": "address"
					}
				],
				"name": "removeTokenLiquidity",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "_ids",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "_amounts",
						"type": "uint256[]"
					},
					{
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "safeBatchTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_operator",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_approved",
						"type": "bool"
					}
				],
				"name": "setApprovalForAll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_tokenIn",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_tokenOut",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amountTokensIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_minAmountTokensOut",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_expireTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_transferTo",
						"type": "address"
					}
				],
				"name": "swapExactTokensForTokens",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_tokenIn",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_tokenOut",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amountTokensOut",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_maxAmountTokensIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_expireTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_transferTo",
						"type": "address"
					}
				],
				"name": "swapTokensForExactTokens",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "testInit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_testCerbyToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_cerUsdToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_testUsdcToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "testSetupTokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "uri",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"balanceOf(address,uint256)": {
					"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
				},
				"balanceOfBatch(address[],uint256[])": {
					"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
				},
				"exists(uint256)": {
					"details": "Indicates whether any token exist with a given id, or not."
				},
				"isApprovedForAll(address,address)": {
					"details": "See {IERC1155-isApprovedForAll}."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}."
				},
				"totalSupply(uint256)": {
					"details": "Total amount of tokens in with a given id."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"sol-cerby-swap-v1/CerbySwapV1.sol": "CerbySwapV1"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"sol-cerby-swap-v1/CerbyCronJobsExecution.sol": {
			"keccak256": "0x9aab3889f6249416cdcc3a6a450b1819f137b6f533dfa476b8c840c35dea24d4",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://db297ff02e46abcbadc9fd74e373a7ceed8c2a51b15faf9d649215cf06880c5d",
				"dweb:/ipfs/QmPsqKmmH3RNN4UbaH92nTS3iSFd1ZwAxb9FmSZohsybHf"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1.sol": {
			"keccak256": "0xee07c0113e7bb5f75cdd9ec24b060dbfd8f8e9fcf58d7aa48811035986911df7",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://1ae21665e60df2b7adb2409c08e90f7bd50cefb21bb72ef6e09d474190d9f116",
				"dweb:/ipfs/QmZy98FqvRamxmkyLxnWz7tkiKBGq1CT6k4BRbFNEMjYKR"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_AdminFunctions.sol": {
			"keccak256": "0x2541a418ef8711d3a3a90a090c1178b735d117045d9d78db72b7249fdd0eda57",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://97968e3f17c2d7d4042035d5742608bb8da5174a617bbfde7ea034b0bc063f55",
				"dweb:/ipfs/QmSnHFwzrfbhRMwHWeBQ6i5Mu1ZisLWmmE4NdEDLvVjt7f"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_Declarations.sol": {
			"keccak256": "0xed06fb0b583a4d88ac24b0813ef382d7ae3968d657612e8a17b24bb08ce25585",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://c6460400cfb7343e7955b5ce9ee7749fc699892d75e3ed5814c6188e782d5780",
				"dweb:/ipfs/QmUmfHt2eAtu1cAGeFmBH1pKCFBRbkXKds8GdMrGNfaqZD"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_ERC1155.sol": {
			"keccak256": "0xd806eea6b90afbc21c5423f8c6860ad6b0682f7f789d88651169c94af8bbed40",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://377a54996c232a3129c0daebc58b7061bb248b2ba69696b47c55da7e394f6f77",
				"dweb:/ipfs/QmXV25gktJfA1jKAhAKHWeAtUnnzpKFJ7BRALDnXqCXQSK"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_EventsAndErrors.sol": {
			"keccak256": "0xb193758350ceb49d9635098fbad88d6087721be23aa9de2fed784030151057a0",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://00db86aa4c434a457f576bcbd23abe9e6b293b747e66a435992f1f24e94ee926",
				"dweb:/ipfs/QmRDQ3MQij7SeVTfXxqBmGHXxFt5hABKBF9MenbenwzTQt"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_GetFunctions.sol": {
			"keccak256": "0x90976a5acef768afba938b31813f0bb7cd8f052c4762ccf7eb88eed903569bb2",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://0fcd5585772439463ea5e10c15d4527ca75f86fb4fbb8bb8abeaf5aa1f3f6a7b",
				"dweb:/ipfs/QmZpToUi8V5UckqYBZ85vqYbF9y46YwEWumnTz3nCm9k2W"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_LiquidityFunctions.sol": {
			"keccak256": "0x4a7727f88ab54c1ded6bf2a24399aa8865a8458198cf84fed53ea94c3154e3d4",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://3a6ae41128bb23cfecf04bb0cfb7bb10cdc735fe0fba1638101dfba4f44414de",
				"dweb:/ipfs/QmY2MaG6hAYMAiTCEEiQEqnPjzd1wMTGAEZAiorHtRDses"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_Math.sol": {
			"keccak256": "0x6c3f82bf5bacb59435d669c9a23ea78d54073debad4b7861fdbd459287c6da19",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://658ea6a66ba412dd3bf8cd101ead2fe5f3792f879f46188664d29c2ab91a224e",
				"dweb:/ipfs/QmXLyrcxxcTaRTWhEPQPGSN2K56AuH5XmP3Sc3BrLWk13y"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_MinimalProxy.sol": {
			"keccak256": "0xf42f91953273e6916c138ee0d8d6a89480f3c7344e4850f8fc976c94f845e022",
			"license": "MIT",
			"urls": [
				"bzz-raw://6f0ab993ea90c412e5dda88c9a5b6787c5895ffab97bc0bbb8b14e5fcc0330ca",
				"dweb:/ipfs/QmaJx998C8Au2DKmdg32p5rm33hLyjsdkzWC7zKHcgEDMC"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_Modifiers.sol": {
			"keccak256": "0x68dbdf860b64aa4f51495c7fffacacbf6be527ae4b7708e8e6509a8021124e97",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://d89a7015292b24ff2ee98b89fa7915833f06e363211c065d89c4c02d9c2717ac",
				"dweb:/ipfs/QmYzoSzpM7K2KeCDQRmUgYP599QoovnqXeYurjuWmQaLcp"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_SafeFunctions.sol": {
			"keccak256": "0xe5b900b070977d325ef9a32794c179ed74b1eacf2c2f315b3f28944f2b553cea",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://ee77ea7ca45355caec03eddafe8557ffd92ae7a3d818e1bfceade0314d0c7158",
				"dweb:/ipfs/QmP5Za5WoedMym2xfXN45EAmqvajo7jaHToJQY22892ppm"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_SwapFunctions.sol": {
			"keccak256": "0x64c5be6b0b09bee29f136f2f020fd44028de3e9a9b42fe2d4fc231c3a8fe86f0",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://a72a5237cbc766f824c4a656c7330d61eefffe4847c1a25c9e17e597addfa093",
				"dweb:/ipfs/QmZudDd9phV6Svc7tcGQWFAyS5V9jfhHCGJ3iQK12ku7Xn"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_VaultImplementation.sol": {
			"keccak256": "0x9ecb95a47d8f7fe9e346101b7e5c4bbc029198f7b29008533442e9c6f952bad8",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://c249926e8d51fb0efd92f015fddb7e80d2dd3e058d4e7eac5dc81ef5416fb9d4",
				"dweb:/ipfs/QmVJYc6EAgwMXjRyMKwhoomEHjGwXZHWGwL6DeiEd2rEWD"
			]
		},
		"sol-cerby-swap-v1/interfaces/ICerbyBotDetection.sol": {
			"keccak256": "0x1edc9775a343929a6722a1f8cde8b41d15959e58439ed6a606b1ecf6c1920bb7",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://917931f683191dfc3d381fd70cde802fbd967fc691e727445bc2a33ec87e9fa8",
				"dweb:/ipfs/QmZY9619gqezspATPKNGhFBgAcZA7dBmF4JADjf1xysEZs"
			]
		},
		"sol-cerby-swap-v1/interfaces/ICerbySwapV1_VaultImplementation.sol": {
			"keccak256": "0x8afc1b8301e0aabf6bb203b28fa89b0c5ac177bde0c48ebbec2074302d41655b",
			"license": "MIT",
			"urls": [
				"bzz-raw://de3dab93cd7b6554eb5fc0a77d6ffa754582d45dcdd497e1ac465c21012a784e",
				"dweb:/ipfs/QmaTxEecHmvWzqZ99Wo8GzcBzcq4zxtc9PkHxyDZnBLpH9"
			]
		},
		"sol-cerby-swap-v1/interfaces/ICerbyToken.sol": {
			"keccak256": "0x4e54c2b2e26a8614ad9d19d94b0cf97c134f6b6f333557dd41d5d0981465f92f",
			"license": "MIT",
			"urls": [
				"bzz-raw://b0fa49f30eed7d09333d1e4463f16bb0a253ddf4a85fd04bac7f0d2064472e6a",
				"dweb:/ipfs/Qmas97Mp7VUZkU6vb15Ed9WV63kcER9SRdt76m7DDtic5u"
			]
		},
		"sol-cerby-swap-v1/interfaces/ICerbyTokenMinterBurner.sol": {
			"keccak256": "0x2e737a3ef8e66c4f88d1da86b213994f322ff36fdc623b2dcc514b73a93e5631",
			"license": "BSD-2-Clause",
			"urls": [
				"bzz-raw://caf7e0e9e86d083eb669adf07269c3191a9eec50e39409189e0a3e2780fcd780",
				"dweb:/ipfs/QmdzdSZS4KvuxEgmqoaRQ5TSqMnxiyLzcbC39cfm3XxCtw"
			]
		},
		"sol-cerby-swap-v1/interfaces/IERC20.sol": {
			"keccak256": "0xda13353498704ae49fbaa3e5cb67d98732b74f2a074fcf671571ba6731b93bed",
			"license": "MIT",
			"urls": [
				"bzz-raw://b5ec772418221396e82f38662096867b27d51703038611c8597328d66ee9a6fa",
				"dweb:/ipfs/QmWgGVka1ihRDtXraQ1C6M5FgmheeES3RnEp4LeCPSdRE5"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/access/Ownable.sol": {
			"keccak256": "0xad82ebf927970e319c1bdb67d37c521732c550b87d9aff07a26cb8c8cd6e6819",
			"license": "MIT",
			"urls": [
				"bzz-raw://8f3fadaee719e438607454e6f4983e9ca6db40a10154d47980899580ad2cb6b9",
				"dweb:/ipfs/QmbEKGDEMZQ7rafp2xgBPiqJXppNtWNJAJMoZ6CdZGBvEo"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/token/ERC1155/ERC1155.sol": {
			"keccak256": "0x089af9789dce489692f4ddaaaf281af55ad5506bbc895f325454a43d2603e6a6",
			"license": "MIT",
			"urls": [
				"bzz-raw://aa02dcf2b319b2ac41b0880fdce9633bab2e8823a47882505fd684dfea948bfb",
				"dweb:/ipfs/QmbjZW6aJ7e8bhVwkRTzswazuSHZCsEc7AsVKggPScHGz5"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/token/ERC1155/IERC1155.sol": {
			"keccak256": "0x1bbdcc6f4bb2a949e0972a56922aacbb0dfb96b758b1af485783fd46622f7d2d",
			"license": "MIT",
			"urls": [
				"bzz-raw://888e83f7844b76f02c05c22f7f35a56c63a9e4aac3bc3d6b2cec7ad5f01a5898",
				"dweb:/ipfs/QmPAizEA5aw5hEeu8ch5THThW57H2tBSCAZqhZGgLs3pxT"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/token/ERC1155/IERC1155Receiver.sol": {
			"keccak256": "0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566",
			"license": "MIT",
			"urls": [
				"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e",
				"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
			"keccak256": "0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574",
			"license": "MIT",
			"urls": [
				"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797",
				"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/utils/introspection/ERC165.sol": {
			"keccak256": "0x80cff4f25810ab85caa3f5839b7cb5b7683a9540da82268e2b9f422e0d4d58e6",
			"license": "MIT",
			"urls": [
				"bzz-raw://1858a5438e273c2f48db04bfa9e49e5a5bbf5ccb36b1c666756647aacfca2a04",
				"dweb:/ipfs/QmR1bYQhYWtRLLXMyRJYtZRaEmXkbFGWHcd6a59VKrFgMR"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		}
	},
	"version": 1
}