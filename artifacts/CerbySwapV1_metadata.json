{
	"compiler": {
		"version": "0.8.11+commit.d7f03943"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "CerbyCronJobsExecution_TransactionsAreTemporarilyDisabled",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapLP1155V1_CallerIsNotOwnerNorApproved",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapLP1155V1_TransactionsAreTemporarilyDisabled",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_AmountOfCerUsdMustBeLargerThanOne",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_AmountOfCerUsdOrTokensInMustBeLargerThanOne",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_AmountOfTokensMustBeLargerThanOne",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_CreditCerUsdIsOverflown",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_CreditCerUsdMustNotBeBelowZero",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_FeeIsWrong",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_FeeOnTransferTokensArentSupported",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_InputCerUsdAmountIsLargerThanMaximumSpecified",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_InputTokensAmountIsLargerThanMaximumSpecified",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_InvariantKValueMustBeSameOrIncreasedOnAnySwaps",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_MintFeeMultiplierMustNotBeLargerThan50Percent",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_MsgValueProvidedMustBeLargerThanAmountIn",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_MsgValueProvidedMustBeZero",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_OutputCerUsdAmountIsLowerThanMinimumSpecified",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_OutputTokensAmountIsLowerThanMinimumSpecified",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_SafeTransferFromFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_SafeTransferNativeFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_SafeTransferTokensFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_SwappingTokenToSameTokenIsForbidden",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_TokenAlreadyExists",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_TokenDoesNotExist",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_TransactionIsExpired",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbySwapV1_TvlMultiplierIsWrong",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_AccountsAndIdsLengthMismatch",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_BalanceQueryForTheZeroAddress",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_BurnAmountExceedsBalance",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_BurnFromZeroAddress",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_ERC1155ReceiverRejectsTokens",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_IdsAndAmountsLengthMismatch",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_InsufficientBalanceForTransfer",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_MintToZeroAddress",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_SettingApprovalStatusForSelf",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_TransferToNonERC1155ReceiverImplementer",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1155_TransferToZeroAddress",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "Ownable_CallerIsNotOwner",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "Ownable_NewOwnerIsNotTheZeroAddress",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "ApprovalForAll",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountTokensIn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountCerUsdToMint",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lpAmount",
						"type": "uint256"
					}
				],
				"name": "LiquidityAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountTokensOut",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountCerUsdToBurn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountLpTokensBalanceToBurn",
						"type": "uint256"
					}
				],
				"name": "LiquidityRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "poolId",
						"type": "uint256"
					}
				],
				"name": "PairCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountTokensIn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountCerUsdIn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountTokensOut",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountCerUsdOut",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "currentFee",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "transferTo",
						"type": "address"
					}
				],
				"name": "Swap",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newBalanceToken",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newBalanceCerUsd",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newCreditCerUsd",
						"type": "uint256"
					}
				],
				"name": "Sync",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "values",
						"type": "uint256[]"
					}
				],
				"name": "TransferBatch",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "TransferSingle",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "value",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "URI",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountTokensIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "expireTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "transferTo",
						"type": "address"
					}
				],
				"name": "addTokenLiquidity",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountCerUsdCredit",
						"type": "uint256"
					}
				],
				"name": "adminChangeCerUsdCreditInPool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountTokensIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountCerUsdToMint",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "transferTo",
						"type": "address"
					}
				],
				"name": "adminCreatePool",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "adminInitialize",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "newUrlPrefix",
						"type": "string"
					}
				],
				"name": "adminSetURI",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "mintFeeBeneficiary",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "mintFeeMultiplier",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "feeMinimum",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "feeMaximum",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tvlMultiplierMinimum",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tvlMultiplierMaximum",
								"type": "uint256"
							}
						],
						"internalType": "struct CerbySwapV1_Declarations.Settings",
						"name": "_settings",
						"type": "tuple"
					}
				],
				"name": "adminUpdateFeesAndTvlMultipliers",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "newName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "newSymbol",
						"type": "string"
					}
				],
				"name": "adminUpdateNameAndSymbol",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "accounts",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					}
				],
				"name": "balanceOfBatch",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "burn",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountTokensIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountCerUsdToMint",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "transferTo",
						"type": "address"
					}
				],
				"name": "createPool",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "exists",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "getCurrentOneMinusFeeBasedOnTrades",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "fee",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenIn",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenOut",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountTokensOut",
						"type": "uint256"
					}
				],
				"name": "getInputTokensForExactTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountTokensIn",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenIn",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenOut",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountTokensIn",
						"type": "uint256"
					}
				],
				"name": "getOutputExactTokensForTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountTokensOut",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					}
				],
				"name": "getPoolsByIds",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint32[8]",
								"name": "tradeVolumePerPeriodInCerUsd",
								"type": "uint32[8]"
							},
							{
								"internalType": "uint128",
								"name": "balanceToken",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "balanceCerUsd",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "lastSqrtKValue",
								"type": "uint128"
							},
							{
								"internalType": "uint256",
								"name": "creditCerUsd",
								"type": "uint256"
							}
						],
						"internalType": "struct CerbySwapV1_Declarations.Pool[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "tokens",
						"type": "address[]"
					}
				],
				"name": "getPoolsByTokens",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint32[8]",
								"name": "tradeVolumePerPeriodInCerUsd",
								"type": "uint32[8]"
							},
							{
								"internalType": "uint128",
								"name": "balanceToken",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "balanceCerUsd",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "lastSqrtKValue",
								"type": "uint128"
							},
							{
								"internalType": "uint256",
								"name": "creditCerUsd",
								"type": "uint256"
							}
						],
						"internalType": "struct CerbySwapV1_Declarations.Pool[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getSettings",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "mintFeeBeneficiary",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "mintFeeMultiplier",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "feeMinimum",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "feeMaximum",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tvlMultiplierMinimum",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tvlMultiplierMaximum",
								"type": "uint256"
							}
						],
						"internalType": "struct CerbySwapV1_Declarations.Settings",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "getTokenToPoolId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "pos",
						"type": "uint256"
					}
				],
				"name": "getUtilsContractAtPos",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountCerUsdCredit",
						"type": "uint256"
					}
				],
				"name": "increaseCerUsdCreditInPool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					}
				],
				"name": "isApprovedForAll",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountTokensOut",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountCerUsdOut",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "transferTo",
						"type": "address"
					}
				],
				"name": "lowLevelSwap",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountLpTokensBalanceToBurn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "expireTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "transferTo",
						"type": "address"
					}
				],
				"name": "removeTokenLiquidity",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "amounts",
						"type": "uint256[]"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "safeBatchTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "setApprovalForAll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "skimPool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenIn",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenOut",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountTokensIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "minAmountTokensOut",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "expireTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "transferTo",
						"type": "address"
					}
				],
				"name": "swapExactTokensForTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenIn",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenOut",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountTokensOut",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maxAmountTokensIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "expireTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "transferTo",
						"type": "address"
					}
				],
				"name": "swapTokensForExactTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "syncTokenBalanceInPool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "testInit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_testCerbyToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_cerUsdToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_testUsdcToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "testSetupTokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "uri",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"balanceOf(address,uint256)": {
					"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
				},
				"balanceOfBatch(address[],uint256[])": {
					"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
				},
				"exists(uint256)": {
					"details": "Indicates whether any token exist with a given id, or not."
				},
				"isApprovedForAll(address,address)": {
					"details": "See {IERC1155-isApprovedForAll}."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
					"details": "See {IERC1155-safeBatchTransferFrom}."
				},
				"safeTransferFrom(address,address,uint256,uint256,bytes)": {
					"details": "See {IERC1155-safeTransferFrom}."
				},
				"setApprovalForAll(address,bool)": {
					"details": "See {IERC1155-setApprovalForAll}."
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}."
				},
				"totalSupply(uint256)": {
					"details": "Total amount of tokens in with a given id."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"sol-cerby-swap-v1/CerbySwapV1.sol": "CerbySwapV1"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"sol-cerby-swap-v1/CerbyCronJobsExecution.sol": {
			"keccak256": "0x0c16f44372f531fc8aca7e8334e6e32d2b642d3a6108855aa1cd6bb514031f07",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://1dd2d13f1abcee6f8a21ac39ca03a56aca89e7ac781afb8322a37687e703a4da",
				"dweb:/ipfs/QmQt2nTREmJ7xn9ur68VTYysfmKcUfaFRp367nYqm99g7H"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1.sol": {
			"keccak256": "0x7a6110cba4e03e4e746291e388c2be29cf50714b055ad461f36760ad82b837f7",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://85e161fcffe8e482a6129c035c2b9d0f539eae267c967698fa9eabce08d452d0",
				"dweb:/ipfs/QmPozL69J8obFNCmWaPsDnprVsVErAGztK3oBHsniFrrhW"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_AdminFunctions.sol": {
			"keccak256": "0xb2adf8b2f9357a3142828210f415c776cacc1aaa6e334798260bfa9329735a47",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://4c20d6b89412605817527f8c59f6b3ef9c592a125be98074f8f90bd3242cc48c",
				"dweb:/ipfs/QmayfazA9fG11zouD4GSzw2GNGhyT4neJh1XK118kJXPQ6"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_Declarations.sol": {
			"keccak256": "0x1b63e0882f6eef65e9261f4c6930a735b66cac789fe8563f8b9f8653bb61d990",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://6fdff88e52ae5fe41d44359e850ccdae76da8e864aee03b572ddd38a6d74917e",
				"dweb:/ipfs/QmRPw9yYsdHF6XQTkfL6uLKj4G1Yx7mg3hQUZjXjXHqf71"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_ERC1155.sol": {
			"keccak256": "0x68d148e4e789bba5ee11ab3147004e1fffea96737bc2d931b093a881bb1c788a",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://db9f8047f34e3b7de248d85241095a5b7e14f9359933380f5aeb31211f08bc3d",
				"dweb:/ipfs/QmPef2Q2sqK6vg6fo73kQzZ5aboydjiDw8z16o8FCbL86m"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_EventsAndErrors.sol": {
			"keccak256": "0x8d3c20adcb77f2179f7de2c977bec0ae9b2ff96273edb68133311f1ed959a849",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://08e1d7f7ba76d87ce86438158f1c19dbc3ec014f3e4732e77782b89ad8301870",
				"dweb:/ipfs/QmbyFyszuJ8E95LJDDjd8zXvvczW7sihwNu2Kbytxp6YsG"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_GetFunctions.sol": {
			"keccak256": "0x4904d0963cfaae290733fb6e39c39ce084a558307f671481b286bce6e93a6b2b",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://b592d79c3b8d906634061bfa2442fd952b8018e6e72b02c43149c310ca8ea004",
				"dweb:/ipfs/QmasHtgNqcVoAbhPsW5eqmi2ZCfuJDhBv9Z1T4DEa7MdF7"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_LiquidityFunctions.sol": {
			"keccak256": "0xb79995bc627127d7722a83e44d22f4076a4b6bd2020b9ccf5132ffa23ede331b",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://12b5d2969f91eb429f96b746588de3ad257069ebf413f77a5a1a6e0fbd82f6a8",
				"dweb:/ipfs/QmaBQmUyuWia2zV86RN8XaE9uetLkfqLKqp54w2L8a5sh1"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_Math.sol": {
			"keccak256": "0xd981444a687ccc1ea6971b0236a6295342802bc104f2f06e642c2cdd726a2adc",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://1d87a0f3ef64ca95344dce06c6600b496d3caac221feadd92788218e4bcb985f",
				"dweb:/ipfs/QmRm1vNvHp4QVY983iDP8MPuAFqzseMxBuRKqVpgQjSazT"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_Modifiers.sol": {
			"keccak256": "0x05c0863b600cf0de6556c3f44ab14862e1a5e02091f1be88e8b60d07a987f5a1",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://506eb7185a73998390f72673167eb5977721f3a986dd9039092ffb9a39c0a4c8",
				"dweb:/ipfs/QmNQPYTSZx6bV86APYM57enc35FTrNTKGPGzdF3jheQRyC"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_SafeFunctions.sol": {
			"keccak256": "0xe82c437a58e5e5271c238eda5c2f6c14d6025f59217aefde0a5c55274e197a8e",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://384160b8ce3dd0a07eeed36213486796f4c226b63cc30bc61b021fd11a177bc7",
				"dweb:/ipfs/QmZS5ZjExPF9X1rQQXrYTeXJ3yhkJY2x9UXhPrBu4p1Xgc"
			]
		},
		"sol-cerby-swap-v1/CerbySwapV1_SwapFunctions.sol": {
			"keccak256": "0x6d541f3238ec6fd2db24664a34702ac28c6df2bf1fc3247319e771ac8b283537",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://d7bfc20d1cb52f7e0b5904339886d2932e029b1ccaca0e5db37af74d581b6327",
				"dweb:/ipfs/QmeiwMSd8jZ2gT6941oyTZ8Dopvm9FJNr878CngxHomF56"
			]
		},
		"sol-cerby-swap-v1/interfaces/ICerbyBotDetection.sol": {
			"keccak256": "0x88ae2b0a36185fd4906dbc9e7bd41a682d05edf05478c27ca5ce9ff0bc5cdef2",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://9e13b92a1ddbd96344b9035c2bf91ada49bfad04ee4181929c36791ba224cbe9",
				"dweb:/ipfs/QmaVVRj9B3F32WpVuYzH6BZZE5751BrAcjWn81rVciAoRa"
			]
		},
		"sol-cerby-swap-v1/interfaces/ICerbyToken.sol": {
			"keccak256": "0x1cf233391c970f48f8e1a2db9a3e81c4ebb8c2ff423c6d1c553df632f04abf2d",
			"license": "MIT",
			"urls": [
				"bzz-raw://845a3faee636b03fa2b2e09a4d43df33ce2f1ac5f031c9f4d9f7a5f2a1d5ee7e",
				"dweb:/ipfs/QmV6PFf9HzucpBj4y6zvW7BbuMRGhQAEa7MRWKCCREgB7V"
			]
		},
		"sol-cerby-swap-v1/interfaces/ICerbyTokenMinterBurner.sol": {
			"keccak256": "0xe9662b09cb4a69c4bcd634ae71ca5e60f630b89e2ef8f818ccf12ceb47707013",
			"license": "BSD-2-Clause",
			"urls": [
				"bzz-raw://38d67dec9f8deaeb4adc5e58d8f483beef22cab8dbc191bc3247e3fc48e434eb",
				"dweb:/ipfs/QmR1f6cNhWzmDt5qJ9gjuFJL21FwmnNnBhH3beJ2JbPqnz"
			]
		},
		"sol-cerby-swap-v1/interfaces/IERC20.sol": {
			"keccak256": "0xa019774b5fa41b9bb839ad7bc75bd3ded2ae58bce9f2d83e7dd307fa943e5bab",
			"license": "MIT",
			"urls": [
				"bzz-raw://37b1999e95af73767b49405c9c669b97f952c227197dfd17836326f11654c66d",
				"dweb:/ipfs/QmaHk8vnZY9ZaWAVWCufr8UN4Fw1Kr2MX44czPyxCGFPWh"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/access/Ownable.sol": {
			"keccak256": "0x4028d9bdb76167ce5e16eba4da1b2b242b1fc44a2864edd41414507f44a896a4",
			"license": "MIT",
			"urls": [
				"bzz-raw://5ad472a548d6c85ed344d7c9607ca3186d0b82ff4983252a56f97d9dd83df4c0",
				"dweb:/ipfs/QmUmoiaoGDDASS6v6kp95sWZoUEweAYaXNSDr5K5DzqDpc"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/token/ERC1155/ERC1155.sol": {
			"keccak256": "0xef43a311c72201e893577cae6f1a8ecf9fd825cac3c20162d821d02488b56c6e",
			"license": "MIT",
			"urls": [
				"bzz-raw://0a37d25d99ca787546bafb80e34176c81547f2f352d2a5a49ee566205ee52f3d",
				"dweb:/ipfs/QmSGnZjvCbE8ARLWFK6z8R9vw1ExNaBfXxGWMEJPvPwKGB"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/token/ERC1155/IERC1155.sol": {
			"keccak256": "0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9",
			"license": "MIT",
			"urls": [
				"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5",
				"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/token/ERC1155/IERC1155Receiver.sol": {
			"keccak256": "0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566",
			"license": "MIT",
			"urls": [
				"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e",
				"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/token/ERC1155/extensions/ERC1155Supply.sol": {
			"keccak256": "0x2108b09ce3511b6e71ae743d85a4b18b21b54eeb1ff6df04f525daec279f410e",
			"license": "MIT",
			"urls": [
				"bzz-raw://925664ad2ae77f86e0ca588381352f3ac81f266e3fd7f20fbfa6feaec045a9fb",
				"dweb:/ipfs/QmfVGKaxxXWKfL3RKtu3GzdYzWdtivYJUMm1XzFhf3TZDp"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
			"keccak256": "0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574",
			"license": "MIT",
			"urls": [
				"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797",
				"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/utils/introspection/ERC165.sol": {
			"keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
			"license": "MIT",
			"urls": [
				"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
				"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		}
	},
	"version": 1
}