{
  "contractName": "CerbySwapV1_AdminFunctions",
  "abi": [
    {
      "inputs": [],
      "name": "CerbyCronJobsExecution_TransactionsAreTemporarilyDisabled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_AmountOfCerbyMustBeLargerThanOne",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_AmountOfCerbyOrTokensInMustBeLargerThanOne",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_AmountOfTokensMustBeLargerThanOne",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_CreditCerbyIsAlreadyMaximum",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_CreditCerbyMustNotBeBelowZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_FeeIsWrong",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_FeeOnTransferTokensAreForbidden",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_InputCerbyAmountIsLargerThanMaximumSpecified",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_InputTokensAmountIsLargerThanMaximumSpecified",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_InvariantKValueMustBeSameOrIncreasedOnAnySwaps",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_MintFeeMultiplierMustNotBeLargerThan50Percent",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_OutputCerbyAmountIsLowerThanMinimumSpecified",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_OutputTokensAmountIsLowerThanMinimumSpecified",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_SafeTransferFromFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_SafeTransferNativeFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_SwappingTokenToSameTokenIsForbidden",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_TokenAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_TokenDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_TransactionIsExpired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_TvlMultiplierIsWrong",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC1155_BurnAmountExceedsBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC1155_CallerIsNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC1155_ERC1155ReceiverRejectsTokens",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC1155_IdsLengthMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC1155_InsufficientBalanceForTransfer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC1155_TransferToNonERC1155ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable_CallerIsNotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable_NewOwnerIsNotTheZeroAddress",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ICerbyERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountTokensIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountCerbyToMint",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_lpAmount",
          "type": "uint256"
        }
      ],
      "name": "LiquidityAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ICerbyERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountTokensOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountCerbyToBurn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountLpTokensBalanceToBurn",
          "type": "uint256"
        }
      ],
      "name": "LiquidityRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ICerbyERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract ICerbySwapV1_Vault",
          "name": "_vaultAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        }
      ],
      "name": "PoolCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ICerbyERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountTokensIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountCerbyIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountTokensOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountCerbyOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_currentFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_transferTo",
          "type": "address"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ICerbyERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newBalanceToken",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newBalanceCerby",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newCreditCerby",
          "type": "uint256"
        }
      ],
      "name": "Sync",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICerbyERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountTokensIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_expireTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_transferTo",
          "type": "address"
        }
      ],
      "name": "addTokenLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICerbyERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountTokensIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amountCerbyToMint",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_transferTo",
          "type": "address"
        }
      ],
      "name": "createPool",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICerbyERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getCurrentFeeBasedOnTrades",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICerbyERC20",
          "name": "_tokenIn",
          "type": "address"
        },
        {
          "internalType": "contract ICerbyERC20",
          "name": "_tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountTokensOut",
          "type": "uint256"
        }
      ],
      "name": "getInputTokensForExactTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICerbyERC20",
          "name": "_tokenIn",
          "type": "address"
        },
        {
          "internalType": "contract ICerbyERC20",
          "name": "_tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountTokensIn",
          "type": "uint256"
        }
      ],
      "name": "getOutputExactTokensForTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICerbyERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getPoolBalancesByToken",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "balanceToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balanceCerby",
              "type": "uint256"
            }
          ],
          "internalType": "struct CerbySwapV1_Declarations.PoolBalances",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICerbyERC20[]",
          "name": "_tokens",
          "type": "address[]"
        }
      ],
      "name": "getPoolsBalancesByTokens",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "balanceToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balanceCerby",
              "type": "uint256"
            }
          ],
          "internalType": "struct CerbySwapV1_Declarations.PoolBalances[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICerbyERC20[]",
          "name": "_tokens",
          "type": "address[]"
        }
      ],
      "name": "getPoolsByTokens",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint216",
              "name": "sellVolumeThisPeriodInCerby",
              "type": "uint216"
            },
            {
              "internalType": "uint8",
              "name": "lastCachedFee",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "nextUpdateWillBeAt",
              "type": "uint32"
            },
            {
              "internalType": "uint128",
              "name": "lastSqrtKValue",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "creditCerby",
              "type": "uint128"
            }
          ],
          "internalType": "struct CerbySwapV1_Declarations.Pool[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSettings",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "onePeriodInSeconds",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "mintFeeBeneficiary",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "mintFeeMultiplier",
              "type": "uint32"
            },
            {
              "internalType": "uint8",
              "name": "feeMinimum",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "feeMaximum",
              "type": "uint8"
            },
            {
              "internalType": "uint64",
              "name": "tvlMultiplierMinimum",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "tvlMultiplierMaximum",
              "type": "uint64"
            }
          ],
          "internalType": "struct CerbySwapV1_Declarations.Settings",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICerbyERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getTokenToPoolId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pos",
          "type": "uint256"
        }
      ],
      "name": "getUtilsContractAtPos",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICerbyERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountCerbyCredit",
          "type": "uint256"
        }
      ],
      "name": "increaseCerbyCreditInPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICerbyERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountLpTokensBalanceToBurn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_expireTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_transferTo",
          "type": "address"
        }
      ],
      "name": "removeTokenLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICerbyERC20",
          "name": "_tokenIn",
          "type": "address"
        },
        {
          "internalType": "contract ICerbyERC20",
          "name": "_tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountTokensIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minAmountTokensOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_expireTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_transferTo",
          "type": "address"
        }
      ],
      "name": "swapExactTokensForTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICerbyERC20",
          "name": "_tokenIn",
          "type": "address"
        },
        {
          "internalType": "contract ICerbyERC20",
          "name": "_tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountTokensOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxAmountTokensIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_expireTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_transferTo",
          "type": "address"
        }
      ],
      "name": "swapTokensForExactTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newUrlPrefix",
          "type": "string"
        }
      ],
      "name": "adminSetUrlPrefix",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newContractName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_newContractSymbol",
          "type": "string"
        }
      ],
      "name": "adminUpdateNameAndSymbol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "onePeriodInSeconds",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "mintFeeBeneficiary",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "mintFeeMultiplier",
              "type": "uint32"
            },
            {
              "internalType": "uint8",
              "name": "feeMinimum",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "feeMaximum",
              "type": "uint8"
            },
            {
              "internalType": "uint64",
              "name": "tvlMultiplierMinimum",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "tvlMultiplierMaximum",
              "type": "uint64"
            }
          ],
          "internalType": "struct CerbySwapV1_Declarations.Settings",
          "name": "_settings",
          "type": "tuple"
        }
      ],
      "name": "adminUpdateSettings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICerbyERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountTokensIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amountCerbyToMint",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_transferTo",
          "type": "address"
        }
      ],
      "name": "adminCreatePool",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICerbyERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountCerbyCredit",
          "type": "uint256"
        }
      ],
      "name": "adminChangeCerbyCreditInPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CerbyCronJobsExecution_TransactionsAreTemporarilyDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_AmountOfCerbyMustBeLargerThanOne\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_AmountOfCerbyOrTokensInMustBeLargerThanOne\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_AmountOfTokensMustBeLargerThanOne\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_CreditCerbyIsAlreadyMaximum\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_CreditCerbyMustNotBeBelowZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_FeeIsWrong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_FeeOnTransferTokensAreForbidden\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_InputCerbyAmountIsLargerThanMaximumSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_InputTokensAmountIsLargerThanMaximumSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_InvariantKValueMustBeSameOrIncreasedOnAnySwaps\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_MintFeeMultiplierMustNotBeLargerThan50Percent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_OutputCerbyAmountIsLowerThanMinimumSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_OutputTokensAmountIsLowerThanMinimumSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_SafeTransferFromFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_SafeTransferNativeFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_SwappingTokenToSameTokenIsForbidden\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_TokenDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_TransactionIsExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_TvlMultiplierIsWrong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1155_BurnAmountExceedsBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1155_CallerIsNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1155_ERC1155ReceiverRejectsTokens\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1155_IdsLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1155_InsufficientBalanceForTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1155_TransferToNonERC1155ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable_CallerIsNotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable_NewOwnerIsNotTheZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ICerbyERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountTokensIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountCerbyToMint\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lpAmount\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ICerbyERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountTokensOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountCerbyToBurn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountLpTokensBalanceToBurn\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ICerbyERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ICerbySwapV1_Vault\",\"name\":\"_vaultAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ICerbyERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountTokensIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountCerbyIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountTokensOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountCerbyOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_currentFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_transferTo\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ICerbyERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newBalanceToken\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newBalanceCerby\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newCreditCerby\",\"type\":\"uint256\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract ICerbyERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountTokensIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expireTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_transferTo\",\"type\":\"address\"}],\"name\":\"addTokenLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICerbyERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountCerbyCredit\",\"type\":\"uint256\"}],\"name\":\"adminChangeCerbyCreditInPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICerbyERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountTokensIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountCerbyToMint\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_transferTo\",\"type\":\"address\"}],\"name\":\"adminCreatePool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newUrlPrefix\",\"type\":\"string\"}],\"name\":\"adminSetUrlPrefix\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newContractName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_newContractSymbol\",\"type\":\"string\"}],\"name\":\"adminUpdateNameAndSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"onePeriodInSeconds\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"mintFeeBeneficiary\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"mintFeeMultiplier\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"feeMinimum\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeMaximum\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"tvlMultiplierMinimum\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tvlMultiplierMaximum\",\"type\":\"uint64\"}],\"internalType\":\"struct CerbySwapV1_Declarations.Settings\",\"name\":\"_settings\",\"type\":\"tuple\"}],\"name\":\"adminUpdateSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICerbyERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountTokensIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountCerbyToMint\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_transferTo\",\"type\":\"address\"}],\"name\":\"createPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICerbyERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getCurrentFeeBasedOnTrades\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICerbyERC20\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract ICerbyERC20\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountTokensOut\",\"type\":\"uint256\"}],\"name\":\"getInputTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICerbyERC20\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract ICerbyERC20\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountTokensIn\",\"type\":\"uint256\"}],\"name\":\"getOutputExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICerbyERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getPoolBalancesByToken\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"balanceToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceCerby\",\"type\":\"uint256\"}],\"internalType\":\"struct CerbySwapV1_Declarations.PoolBalances\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICerbyERC20[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"getPoolsBalancesByTokens\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"balanceToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceCerby\",\"type\":\"uint256\"}],\"internalType\":\"struct CerbySwapV1_Declarations.PoolBalances[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICerbyERC20[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"getPoolsByTokens\",\"outputs\":[{\"components\":[{\"internalType\":\"uint216\",\"name\":\"sellVolumeThisPeriodInCerby\",\"type\":\"uint216\"},{\"internalType\":\"uint8\",\"name\":\"lastCachedFee\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateWillBeAt\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"lastSqrtKValue\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"creditCerby\",\"type\":\"uint128\"}],\"internalType\":\"struct CerbySwapV1_Declarations.Pool[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSettings\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"onePeriodInSeconds\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"mintFeeBeneficiary\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"mintFeeMultiplier\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"feeMinimum\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeMaximum\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"tvlMultiplierMinimum\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tvlMultiplierMaximum\",\"type\":\"uint64\"}],\"internalType\":\"struct CerbySwapV1_Declarations.Settings\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICerbyERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTokenToPoolId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pos\",\"type\":\"uint256\"}],\"name\":\"getUtilsContractAtPos\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICerbyERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountCerbyCredit\",\"type\":\"uint256\"}],\"name\":\"increaseCerbyCreditInPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICerbyERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountLpTokensBalanceToBurn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expireTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_transferTo\",\"type\":\"address\"}],\"name\":\"removeTokenLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICerbyERC20\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract ICerbyERC20\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountTokensIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minAmountTokensOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expireTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_transferTo\",\"type\":\"address\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICerbyERC20\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract ICerbyERC20\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountTokensOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxAmountTokensIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expireTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_transferTo\",\"type\":\"address\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CerbySwapV1_AdminFunctions.sol\":\"CerbySwapV1_AdminFunctions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/CerbyCronJobsExecution.sol\":{\"keccak256\":\"0x0dac1e84ed786177610eb984221d0093b254c241f7152f4dabbed2beaaca478e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://372c22ed76035146b352fcade1aea82cd551a6e2a1a4c8bc7377046cc6b307d8\",\"dweb:/ipfs/Qmdv7PSiUeeWsmqXYSmzn3yrgVPTpG2Bqegr3ec4o7ykUq\"]},\"project:/contracts/CerbySwapV1_AdminFunctions.sol\":{\"keccak256\":\"0x58e7f80d51220f48f87cf794f0b76617493bd4ec4f293e5288cac9089ee06b22\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7eedbf059bbb8aebfa5f21e5bea23515465b1f123238231e959a6e124e77b1c8\",\"dweb:/ipfs/QmVcGZjdoUcD31R7N86eDa6pV6DdvTJmekuMzncmgtqgcB\"]},\"project:/contracts/CerbySwapV1_Declarations.sol\":{\"keccak256\":\"0x4dc37292510859c5985c3a39bd4aca2a0671dad84f8bd2a01f02fba27fe2e6b0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2b6facccc94d73f97d5f23e1b35c648c5cec0442c767f3ba94bd1d0222fda9ba\",\"dweb:/ipfs/QmNPNbppsWMbdWKSG2XK18a6RBpBtopSvV59t225vEyAyo\"]},\"project:/contracts/CerbySwapV1_ERC1155.sol\":{\"keccak256\":\"0x37404c67b1837ad10f83cacd6c413dc592876f407e2e8232ac5ed2aa69807f66\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5eea20b86d542e5220b8ade813ae42c3753571bf6df26c01cb0de2d6a98d16a8\",\"dweb:/ipfs/QmVnZ8DWETtxsnsX95agdXmTFcqUm2PYfuw5ddxA8k8EXa\"]},\"project:/contracts/CerbySwapV1_GetFunctions.sol\":{\"keccak256\":\"0xa22485c39f09e5d442d67efa59ca4c3c8de4a57b4a49d68403fb0cf25e83748d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://aec45b0964a5438a29cb11489dd89ca89c859f78e6584c01c9a0407ca9e43413\",\"dweb:/ipfs/QmarYrsrJwXi5ARbQX9aCbsncXM19DEMLcT2tMWD3Er81q\"]},\"project:/contracts/CerbySwapV1_LiquidityFunctions.sol\":{\"keccak256\":\"0xe1cf8b194eb1b1e4dbe028730c3c4b134b12d2b0a5aceff9a5f496916e8b61b0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://264163a81ffcb2854eb222d3b3618e6c6582cc8c5a4942b45fff3447597103dc\",\"dweb:/ipfs/QmVsBYXA764YrsA4bmGjTPtwuE9g4a4vYzWSdZy3eMVRyh\"]},\"project:/contracts/CerbySwapV1_Math.sol\":{\"keccak256\":\"0x2021d05009ccad7b3a1d784dd71d0734f6b66d51cd85038dc15ab445c0857e2d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2ffe2b80845f71541f41d5c1c2b270aed8b44b3a131ff6838a6ceee9d6827f0a\",\"dweb:/ipfs/QmbhJ5ZPTSMCc1WkUoqGuP2KiZsd2j43pA2A5cFVESkxvX\"]},\"project:/contracts/CerbySwapV1_MinimalProxy.sol\":{\"keccak256\":\"0x9e2c690856fa40ff654bb5eda6e8d9df1a1097861253fbdc3318e867952f890d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e18b712aee9f8652a6413c16faefbdf1a3a15d875fd4e295f96f9c279bfa3531\",\"dweb:/ipfs/QmVWq61BRtN9mp6DZDCPXWNijLULGE4iNaxtdBC5r6Byde\"]},\"project:/contracts/CerbySwapV1_Modifiers.sol\":{\"keccak256\":\"0x412a3db874928d0026c81586df3ca9d2348ffdcdab6c97ff011f4f7569b111ec\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3bde858efd0f6b87d171d17c74fec99caa6e139bb45ece403d3ec971e5b7e527\",\"dweb:/ipfs/QmVBFtQjaQsP5H479TXFHRuGWJ2SuFSr6uf1o1xugnJJq2\"]},\"project:/contracts/CerbySwapV1_SafeFunctions.sol\":{\"keccak256\":\"0xbb5b438f8d35b91b7570c9f13bec9bbe668efa9007ceab4d3cf450044126c578\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9f58429d09415c0963ba2dbf52a9232b8cc701bf8452b9e02f5fa01c231bf941\",\"dweb:/ipfs/QmTDb6JtkfBGcNSXUTxV8Ud29dzL9r8evDv5GwxhyTgmsk\"]},\"project:/contracts/CerbySwapV1_SwapFunctions.sol\":{\"keccak256\":\"0x373091c1d17b34133561490a589a2c98ea6f3269be2fe57c8a90d8efedc3d67b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d6dca00a8b0b9f066e3e570d4036ac636b119a57cce8da89d8560a41e31189f8\",\"dweb:/ipfs/QmSK8ZeFY1kCmuu3teP31WWjP78jBU4gvS1BT2ZLUuQ6xt\"]},\"project:/contracts/interfaces/ICerbyBotDetection.sol\":{\"keccak256\":\"0xbc95b2664c6eba1c562504b57a6a8c384104b29d516d7a50adc88bc7690f7838\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5766813310ea6a93f250416a9047fbfbfaff52e2fcd136c9b8ad74c3b195553b\",\"dweb:/ipfs/QmSEutKMBmwTsmJjTa3M6MrtXhi4VbLTzizrRmPuuvcx4e\"]},\"project:/contracts/interfaces/ICerbyERC20.sol\":{\"keccak256\":\"0xf1ff4af9d58f7ad71784eab554ce3840ce0b4580e8d2d4070f363a173c50edcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2fcf00345ab051feea91a4f704dc0b1d71ef5bdc4fa97282db4645a351a37b1\",\"dweb:/ipfs/Qmd3s8iLKv2tq6S9GGs2AoDNmyXHznDQSn6fXWGkHDB4EC\"]},\"project:/contracts/interfaces/ICerbySwapV1_Vault.sol\":{\"keccak256\":\"0x3347c0b2c866c6dee870af5a6842cb213f7da4f8dfd4dcbf769f7688de2e5109\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb27afe1579aeb1c12a4d8052eed87962fbf6f5bcb150680dcb67170b2a08d36\",\"dweb:/ipfs/QmUmoE623AsFJ6Tb9mJ28JLVwtjP2c8EHuGUPD53Q2zp55\"]},\"project:/contracts/interfaces/ICerbyToken.sol\":{\"keccak256\":\"0xd773b000eb1082d4a19994a9de798f5e45f56b3e07360a1d35734e75b92f1b5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9dc20c13496ab3fecdcc17eeef774fb5fe818a65f15ef96affc310278b8a5445\",\"dweb:/ipfs/QmbZqGDLrknz2ZYNLjGvVztYMGpAhspiPawhqve6A1D4yy\"]},\"project:/openzeppelin/access/Ownable.sol\":{\"keccak256\":\"0xf6f4afb81b3a062d6e9d4001253728e31180516d408b27292c4d9d1ad0144e77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93db195d9585b08ed780bdebe1a4fb615073aa967f11b045ec7ead16ea092e9c\",\"dweb:/ipfs/QmRA83a7o4YXe9DbFxGDYWWExrFarqrBbmm4MG4ecqe6FQ\"]},\"project:/openzeppelin/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xe4763b5f9fcd8c5062dfd99b1e2a68c1f2a37052cef771191a094225441c7358\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58cf148eacf80ffc949e841febb13c40565712eda758c95a48707d55dd8c16ce\",\"dweb:/ipfs/QmVJnkafkRoKtoQSNYVK3gpSNowXF6gtuZUnCNz6YQYiuf\"]},\"project:/openzeppelin/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x102b2e29498dbb90640947f667262f95982ef0944b9f32778824c9cea1a5aa3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e84e5bd755e98662776b48b885ce170a11b45f3ca6c254f439cd46c568c9f90\",\"dweb:/ipfs/QmPnKhy7YTcJypK9EyNbEvD3GinhAaHdvaseyB1ZnwvxSv\"]},\"project:/openzeppelin/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"project:/openzeppelin/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x80cff4f25810ab85caa3f5839b7cb5b7683a9540da82268e2b9f422e0d4d58e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1858a5438e273c2f48db04bfa9e49e5a5bbf5ccb36b1c666756647aacfca2a04\",\"dweb:/ipfs/QmR1bYQhYWtRLLXMyRJYtZRaEmXkbFGWHcd6a59VKrFgMR\"]},\"project:/openzeppelin/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity ^0.8.14;\n\nimport \"../openzeppelin/access/Ownable.sol\";\nimport \"./CerbySwapV1_SwapFunctions.sol\";\n\nabstract contract CerbySwapV1_AdminFunctions is\n    CerbySwapV1_SwapFunctions,\n    Ownable\n{\n    function adminSetUrlPrefix(\n        string calldata _newUrlPrefix\n    )\n        external\n        onlyOwner\n    {\n        urlPrefix = _newUrlPrefix;\n    }\n\n    function adminUpdateNameAndSymbol(\n        string calldata _newContractName,\n        string calldata _newContractSymbol\n    )\n        external\n        onlyOwner\n    {\n        contractName = _newContractName;\n        contractSymbol = _newContractSymbol;\n    }\n\n    function adminUpdateSettings(\n        Settings calldata _settings\n    )\n        external\n        onlyOwner\n    {\n        if (\n            _settings.feeMinimum == 0 ||\n            _settings.feeMinimum > _settings.feeMaximum // 2.56% is hard limit on updating fee            \n        ) {\n            revert (\"a1\");\n            revert CerbySwapV1_FeeIsWrong();\n        }\n\n        if (_settings.tvlMultiplierMinimum > _settings.tvlMultiplierMaximum) {\n            revert (\"a2\");\n            revert CerbySwapV1_TvlMultiplierIsWrong();\n        }\n\n        if (_settings.mintFeeMultiplier >= MINT_FEE_DENORM / 2) {\n            revert (\"a3\");\n            revert CerbySwapV1_MintFeeMultiplierMustNotBeLargerThan50Percent();\n        }\n\n        settings = _settings;\n    }\n\n    // only admins are allowed to create new pools with creditCerby = unlimitted\n    // this is only for trusted tokens such as ETH, BNB, UNI, etc\n    function adminCreatePool(\n        ICerbyERC20 _token,\n        uint256 _amountTokensIn,\n        uint256 _amountCerbyToMint,\n        address _transferTo\n    )\n        external\n        payable\n        onlyOwner\n    {\n        _createPool(\n            _token,\n            _amountTokensIn,\n            _amountCerbyToMint,\n            MAX_CERBY_CREDIT, // creditCerby\n            _transferTo\n        );\n    }\n\n    // admin can change CERBY credit in the pool\n    // just in case user adds a token with too high price\n    // admins will be able to fix it by increasing credit\n    // and swapping extra tokens + adding back to liquidity\n    // using external contract assigned with admin role\n    function adminChangeCerbyCreditInPool(\n        ICerbyERC20 _token,\n        uint256 _amountCerbyCredit\n    )\n        external\n        onlyOwner\n        tokenMustExistInPool(_token)\n    {\n        PoolBalances memory poolBalances = _getPoolBalances(\n            _token\n        );\n\n        // getting pool storage link (saves gas compared to memory)\n        Pool storage pool = pools[cachedTokenValues[_token].poolId];\n\n        // changing credit for user-created pool\n        pool.creditCerby = uint128(\n            _amountCerbyCredit\n        );\n\n        // Sync event to update pool variables in the graph node\n        emit Sync(\n            _token,\n            poolBalances.balanceToken,\n            poolBalances.balanceCerby,\n            _amountCerbyCredit\n        );\n    }\n}\n",
  "sourcePath": "/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/contracts/CerbySwapV1_AdminFunctions.sol",
  "ast": {
    "absolutePath": "project:/contracts/CerbySwapV1_AdminFunctions.sol",
    "exportedSymbols": {
      "AccessSettings": [
        4303
      ],
      "CerbyCronJobsExecution": [
        178
      ],
      "CerbySwapV1_AdminFunctions": [
        445
      ],
      "CerbySwapV1_Declarations": [
        650
      ],
      "CerbySwapV1_ERC1155": [
        864
      ],
      "CerbySwapV1_GetFunctions": [
        1438
      ],
      "CerbySwapV1_LiquidityFunctions": [
        2175
      ],
      "CerbySwapV1_Math": [
        2232
      ],
      "CerbySwapV1_MinimalProxy": [
        2339
      ],
      "CerbySwapV1_Modifiers": [
        2390
      ],
      "CerbySwapV1_SafeFunctions": [
        2661
      ],
      "CerbySwapV1_SwapFunctions": [
        3568
      ],
      "ERC1155": [
        5100
      ],
      "ERC165": [
        5714
      ],
      "ICerbyBotDetection": [
        4191
      ],
      "ICerbyERC20": [
        4245
      ],
      "ICerbySwapV1_Vault": [
        4288
      ],
      "ICerbyToken": [
        4405
      ],
      "IERC1155": [
        5177
      ],
      "IERC1155Receiver": [
        5218
      ],
      "IERC165": [
        5726
      ],
      "Ownable": [
        4565
      ],
      "TransactionInfo": [
        4148
      ]
    },
    "id": 446,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 275,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:24:2"
      },
      {
        "absolutePath": "project:/openzeppelin/access/Ownable.sol",
        "file": "../openzeppelin/access/Ownable.sol",
        "id": 276,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 446,
        "sourceUnit": 4566,
        "src": "64:44:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/CerbySwapV1_SwapFunctions.sol",
        "file": "./CerbySwapV1_SwapFunctions.sol",
        "id": 277,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 446,
        "sourceUnit": 3569,
        "src": "109:41:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 278,
              "name": "CerbySwapV1_SwapFunctions",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3568,
              "src": "204:25:2"
            },
            "id": 279,
            "nodeType": "InheritanceSpecifier",
            "src": "204:25:2"
          },
          {
            "baseName": {
              "id": 280,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4565,
              "src": "235:7:2"
            },
            "id": 281,
            "nodeType": "InheritanceSpecifier",
            "src": "235:7:2"
          }
        ],
        "canonicalName": "CerbySwapV1_AdminFunctions",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 445,
        "linearizedBaseContracts": [
          445,
          4565,
          3568,
          2175,
          1438,
          2661,
          2339,
          864,
          178,
          5100,
          2232,
          2390,
          650
        ],
        "name": "CerbySwapV1_AdminFunctions",
        "nameLocation": "170:26:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 292,
              "nodeType": "Block",
              "src": "360:42:2",
              "statements": [
                {
                  "expression": {
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 288,
                      "name": "urlPrefix",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 667,
                      "src": "370:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 289,
                      "name": "_newUrlPrefix",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 283,
                      "src": "382:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "370:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 291,
                  "nodeType": "ExpressionStatement",
                  "src": "370:25:2"
                }
              ]
            },
            "functionSelector": "9dff76c7",
            "id": 293,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 286,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 285,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4506,
                  "src": "346:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "346:9:2"
              }
            ],
            "name": "adminSetUrlPrefix",
            "nameLocation": "258:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 283,
                  "mutability": "mutable",
                  "name": "_newUrlPrefix",
                  "nameLocation": "301:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
                  "src": "285:29:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "285:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "275:45:2"
            },
            "returnParameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "360:0:2"
            },
            "scope": 445,
            "src": "249:153:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 310,
              "nodeType": "Block",
              "src": "573:93:2",
              "statements": [
                {
                  "expression": {
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 302,
                      "name": "contractName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 661,
                      "src": "583:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 303,
                      "name": "_newContractName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 295,
                      "src": "598:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "583:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "583:31:2"
                },
                {
                  "expression": {
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 306,
                      "name": "contractSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 664,
                      "src": "624:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 307,
                      "name": "_newContractSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 297,
                      "src": "641:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "624:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "624:35:2"
                }
              ]
            },
            "functionSelector": "3935ac11",
            "id": 311,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 300,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 299,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4506,
                  "src": "559:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "559:9:2"
              }
            ],
            "name": "adminUpdateNameAndSymbol",
            "nameLocation": "417:24:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 295,
                  "mutability": "mutable",
                  "name": "_newContractName",
                  "nameLocation": "467:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 311,
                  "src": "451:32:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 294,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "451:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 297,
                  "mutability": "mutable",
                  "name": "_newContractSymbol",
                  "nameLocation": "509:18:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 311,
                  "src": "493:34:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 296,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "493:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "441:92:2"
            },
            "returnParameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "573:0:2"
            },
            "scope": 445,
            "src": "408:258:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 371,
              "nodeType": "Block",
              "src": "783:649:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 319,
                          "name": "_settings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 314,
                          "src": "810:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Settings_$531_calldata_ptr",
                            "typeString": "struct CerbySwapV1_Declarations.Settings calldata"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "feeMinimum",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 524,
                        "src": "810:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "834:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "810:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 323,
                          "name": "_settings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 314,
                          "src": "851:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Settings_$531_calldata_ptr",
                            "typeString": "struct CerbySwapV1_Declarations.Settings calldata"
                          }
                        },
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "feeMinimum",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 524,
                        "src": "851:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "expression": {
                          "id": 325,
                          "name": "_settings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 314,
                          "src": "874:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Settings_$531_calldata_ptr",
                            "typeString": "struct CerbySwapV1_Declarations.Settings calldata"
                          }
                        },
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "feeMaximum",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 526,
                        "src": "874:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "851:43:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "810:84:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 337,
                  "nodeType": "IfStatement",
                  "src": "793:246:2",
                  "trueBody": {
                    "id": 336,
                    "nodeType": "Block",
                    "src": "956:83:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "6131",
                              "id": 330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "978:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_37d3424576bafb5fd5f9f8e99478f66780477fcd8d71cb2319b37a64a01640db",
                                "typeString": "literal_string \"a1\""
                              },
                              "value": "a1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_37d3424576bafb5fd5f9f8e99478f66780477fcd8d71cb2319b37a64a01640db",
                                "typeString": "literal_string \"a1\""
                              }
                            ],
                            "id": 329,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "970:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "970:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 332,
                        "nodeType": "ExpressionStatement",
                        "src": "970:13:2"
                      },
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 333,
                            "name": "CerbySwapV1_FeeIsWrong",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 639,
                            "src": "1004:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1004:24:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 335,
                        "nodeType": "RevertStatement",
                        "src": "997:31:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 338,
                        "name": "_settings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 314,
                        "src": "1053:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Settings_$531_calldata_ptr",
                          "typeString": "struct CerbySwapV1_Declarations.Settings calldata"
                        }
                      },
                      "id": 339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tvlMultiplierMinimum",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 528,
                      "src": "1053:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 340,
                        "name": "_settings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 314,
                        "src": "1086:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Settings_$531_calldata_ptr",
                          "typeString": "struct CerbySwapV1_Declarations.Settings calldata"
                        }
                      },
                      "id": 341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tvlMultiplierMaximum",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 530,
                      "src": "1086:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "1053:63:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 351,
                  "nodeType": "IfStatement",
                  "src": "1049:162:2",
                  "trueBody": {
                    "id": 350,
                    "nodeType": "Block",
                    "src": "1118:93:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "6132",
                              "id": 344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1140:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a2060faa0fc5697bc282c626d908a989dc0d2b79270a5cdc58fbc0ab74c35faf",
                                "typeString": "literal_string \"a2\""
                              },
                              "value": "a2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_a2060faa0fc5697bc282c626d908a989dc0d2b79270a5cdc58fbc0ab74c35faf",
                                "typeString": "literal_string \"a2\""
                              }
                            ],
                            "id": 343,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "1132:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1132:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 346,
                        "nodeType": "ExpressionStatement",
                        "src": "1132:13:2"
                      },
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 347,
                            "name": "CerbySwapV1_TvlMultiplierIsWrong",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 641,
                            "src": "1166:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1166:34:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 349,
                        "nodeType": "RevertStatement",
                        "src": "1159:41:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 352,
                        "name": "_settings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 314,
                        "src": "1225:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Settings_$531_calldata_ptr",
                          "typeString": "struct CerbySwapV1_Declarations.Settings calldata"
                        }
                      },
                      "id": 353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintFeeMultiplier",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 522,
                      "src": "1225:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 354,
                        "name": "MINT_FEE_DENORM",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "1256:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1274:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "1256:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1225:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 366,
                  "nodeType": "IfStatement",
                  "src": "1221:174:2",
                  "trueBody": {
                    "id": 365,
                    "nodeType": "Block",
                    "src": "1277:118:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "6133",
                              "id": 359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1299:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4c0096a9174723913927e4420e8a38ca630a7c75320866adb036c401f44761cc",
                                "typeString": "literal_string \"a3\""
                              },
                              "value": "a3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_4c0096a9174723913927e4420e8a38ca630a7c75320866adb036c401f44761cc",
                                "typeString": "literal_string \"a3\""
                              }
                            ],
                            "id": 358,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "1291:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1291:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 361,
                        "nodeType": "ExpressionStatement",
                        "src": "1291:13:2"
                      },
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 362,
                            "name": "CerbySwapV1_MintFeeMultiplierMustNotBeLargerThan50Percent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 643,
                            "src": "1325:57:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1325:59:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 364,
                        "nodeType": "RevertStatement",
                        "src": "1318:66:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 367,
                      "name": "settings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "1405:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Settings_$531_storage",
                        "typeString": "struct CerbySwapV1_Declarations.Settings storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 368,
                      "name": "_settings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 314,
                      "src": "1416:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Settings_$531_calldata_ptr",
                        "typeString": "struct CerbySwapV1_Declarations.Settings calldata"
                      }
                    },
                    "src": "1405:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Settings_$531_storage",
                      "typeString": "struct CerbySwapV1_Declarations.Settings storage ref"
                    }
                  },
                  "id": 370,
                  "nodeType": "ExpressionStatement",
                  "src": "1405:20:2"
                }
              ]
            },
            "functionSelector": "3d07ffdc",
            "id": 372,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 317,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 316,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4506,
                  "src": "769:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "769:9:2"
              }
            ],
            "name": "adminUpdateSettings",
            "nameLocation": "681:19:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 314,
                  "mutability": "mutable",
                  "name": "_settings",
                  "nameLocation": "728:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 372,
                  "src": "710:27:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Settings_$531_calldata_ptr",
                    "typeString": "struct CerbySwapV1_Declarations.Settings"
                  },
                  "typeName": {
                    "id": 313,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 312,
                      "name": "Settings",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 531,
                      "src": "710:8:2"
                    },
                    "referencedDeclaration": 531,
                    "src": "710:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Settings_$531_storage_ptr",
                      "typeString": "struct CerbySwapV1_Declarations.Settings"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "700:43:2"
            },
            "returnParameters": {
              "id": 318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "783:0:2"
            },
            "scope": 445,
            "src": "672:760:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 394,
              "nodeType": "Block",
              "src": "1797:189:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 387,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 375,
                        "src": "1832:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                          "typeString": "contract ICerbyERC20"
                        }
                      },
                      {
                        "id": 388,
                        "name": "_amountTokensIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 377,
                        "src": "1852:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 389,
                        "name": "_amountCerbyToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 379,
                        "src": "1881:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 390,
                        "name": "MAX_CERBY_CREDIT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 487,
                        "src": "1913:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 391,
                        "name": "_transferTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 381,
                        "src": "1958:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                          "typeString": "contract ICerbyERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 386,
                      "name": "_createPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1736,
                      "src": "1807:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ICerbyERC20_$4245_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (contract ICerbyERC20,uint256,uint256,uint256,address)"
                      }
                    },
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1807:172:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 393,
                  "nodeType": "ExpressionStatement",
                  "src": "1807:172:2"
                }
              ]
            },
            "functionSelector": "d5d60737",
            "id": 395,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 384,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 383,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4506,
                  "src": "1783:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1783:9:2"
              }
            ],
            "name": "adminCreatePool",
            "nameLocation": "1594:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 375,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1631:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "1619:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                    "typeString": "contract ICerbyERC20"
                  },
                  "typeName": {
                    "id": 374,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 373,
                      "name": "ICerbyERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4245,
                      "src": "1619:11:2"
                    },
                    "referencedDeclaration": 4245,
                    "src": "1619:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                      "typeString": "contract ICerbyERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 377,
                  "mutability": "mutable",
                  "name": "_amountTokensIn",
                  "nameLocation": "1655:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "1647:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1647:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 379,
                  "mutability": "mutable",
                  "name": "_amountCerbyToMint",
                  "nameLocation": "1688:18:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "1680:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1680:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 381,
                  "mutability": "mutable",
                  "name": "_transferTo",
                  "nameLocation": "1724:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "1716:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1716:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1609:132:2"
            },
            "returnParameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1797:0:2"
            },
            "scope": 445,
            "src": "1585:401:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 443,
              "nodeType": "Block",
              "src": "2457:589:2",
              "statements": [
                {
                  "assignments": [
                    410
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 410,
                      "mutability": "mutable",
                      "name": "poolBalances",
                      "nameLocation": "2487:12:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 443,
                      "src": "2467:32:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolBalances_$547_memory_ptr",
                        "typeString": "struct CerbySwapV1_Declarations.PoolBalances"
                      },
                      "typeName": {
                        "id": 409,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 408,
                          "name": "PoolBalances",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 547,
                          "src": "2467:12:2"
                        },
                        "referencedDeclaration": 547,
                        "src": "2467:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolBalances_$547_storage_ptr",
                          "typeString": "struct CerbySwapV1_Declarations.PoolBalances"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 414,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 412,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "2532:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                          "typeString": "contract ICerbyERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                          "typeString": "contract ICerbyERC20"
                        }
                      ],
                      "id": 411,
                      "name": "_getPoolBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2456,
                      "src": "2502:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_ICerbyERC20_$4245_$returns$_t_struct$_PoolBalances_$547_memory_ptr_$",
                        "typeString": "function (contract ICerbyERC20) view returns (struct CerbySwapV1_Declarations.PoolBalances memory)"
                      }
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2502:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolBalances_$547_memory_ptr",
                      "typeString": "struct CerbySwapV1_Declarations.PoolBalances memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2467:81:2"
                },
                {
                  "assignments": [
                    417
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 417,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "2640:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 443,
                      "src": "2627:17:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pool_$542_storage_ptr",
                        "typeString": "struct CerbySwapV1_Declarations.Pool"
                      },
                      "typeName": {
                        "id": 416,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 415,
                          "name": "Pool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 542,
                          "src": "2627:4:2"
                        },
                        "referencedDeclaration": 542,
                        "src": "2627:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$542_storage_ptr",
                          "typeString": "struct CerbySwapV1_Declarations.Pool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 424,
                  "initialValue": {
                    "baseExpression": {
                      "id": 418,
                      "name": "pools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 453,
                      "src": "2647:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Pool_$542_storage_$dyn_storage",
                        "typeString": "struct CerbySwapV1_Declarations.Pool storage ref[] storage ref"
                      }
                    },
                    "id": 423,
                    "indexExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 419,
                          "name": "cachedTokenValues",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 459,
                          "src": "2653:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_ICerbyERC20_$4245_$_t_struct$_TokenCache_$516_storage_$",
                            "typeString": "mapping(contract ICerbyERC20 => struct CerbySwapV1_Declarations.TokenCache storage ref)"
                          }
                        },
                        "id": 421,
                        "indexExpression": {
                          "id": 420,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 398,
                          "src": "2671:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                            "typeString": "contract ICerbyERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2653:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenCache_$516_storage",
                          "typeString": "struct CerbySwapV1_Declarations.TokenCache storage ref"
                        }
                      },
                      "id": 422,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "poolId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 515,
                      "src": "2653:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2647:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pool_$542_storage",
                      "typeString": "struct CerbySwapV1_Declarations.Pool storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2627:59:2"
                },
                {
                  "expression": {
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 425,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "2746:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$542_storage_ptr",
                          "typeString": "struct CerbySwapV1_Declarations.Pool storage pointer"
                        }
                      },
                      "id": 427,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "creditCerby",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 541,
                      "src": "2746:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 430,
                          "name": "_amountCerbyCredit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 400,
                          "src": "2786:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2765:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint128_$",
                          "typeString": "type(uint128)"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2765:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2765:49:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "2746:68:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "2746:68:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 435,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "2913:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                          "typeString": "contract ICerbyERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 436,
                          "name": "poolBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 410,
                          "src": "2933:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolBalances_$547_memory_ptr",
                            "typeString": "struct CerbySwapV1_Declarations.PoolBalances memory"
                          }
                        },
                        "id": 437,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 544,
                        "src": "2933:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 438,
                          "name": "poolBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 410,
                          "src": "2972:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolBalances_$547_memory_ptr",
                            "typeString": "struct CerbySwapV1_Declarations.PoolBalances memory"
                          }
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceCerby",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 546,
                        "src": "2972:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 440,
                        "name": "_amountCerbyCredit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 400,
                        "src": "3011:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                          "typeString": "contract ICerbyERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 434,
                      "name": "Sync",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 609,
                      "src": "2895:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ICerbyERC20_$4245_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ICerbyERC20,uint256,uint256,uint256)"
                      }
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2895:144:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 442,
                  "nodeType": "EmitStatement",
                  "src": "2890:149:2"
                }
              ]
            },
            "functionSelector": "6e00df6f",
            "id": 444,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 403,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 402,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4506,
                  "src": "2406:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2406:9:2"
              },
              {
                "arguments": [
                  {
                    "id": 405,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 398,
                    "src": "2445:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                      "typeString": "contract ICerbyERC20"
                    }
                  }
                ],
                "id": 406,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 404,
                  "name": "tokenMustExistInPool",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2370,
                  "src": "2424:20:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2424:28:2"
              }
            ],
            "name": "adminChangeCerbyCreditInPool",
            "nameLocation": "2282:28:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 398,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2332:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 444,
                  "src": "2320:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                    "typeString": "contract ICerbyERC20"
                  },
                  "typeName": {
                    "id": 397,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 396,
                      "name": "ICerbyERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4245,
                      "src": "2320:11:2"
                    },
                    "referencedDeclaration": 4245,
                    "src": "2320:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                      "typeString": "contract ICerbyERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 400,
                  "mutability": "mutable",
                  "name": "_amountCerbyCredit",
                  "nameLocation": "2356:18:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 444,
                  "src": "2348:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2348:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2310:70:2"
            },
            "returnParameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2457:0:2"
            },
            "scope": 445,
            "src": "2273:773:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 446,
        "src": "152:2896:2",
        "usedErrors": [
          14,
          611,
          613,
          615,
          617,
          619,
          621,
          623,
          625,
          627,
          629,
          631,
          633,
          635,
          637,
          639,
          641,
          643,
          645,
          647,
          649,
          4472,
          4474,
          4637,
          4639,
          4641,
          4643,
          4645,
          4647
        ]
      }
    ],
    "src": "38:3011:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-20T07:31:48.870Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}