{
  "contractName": "CerbySwapV1_MinimalProxy",
  "abi": [
    {
      "inputs": [],
      "name": "CerbySwapV1_AmountOfCerbyMustBeLargerThanOne",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_AmountOfCerbyOrTokensInMustBeLargerThanOne",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_AmountOfTokensMustBeLargerThanOne",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_CreditCerbyIsAlreadyMaximum",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_CreditCerbyMustNotBeBelowZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_FeeIsWrong",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_FeeOnTransferTokensAreForbidden",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_InputCerbyAmountIsLargerThanMaximumSpecified",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_InputTokensAmountIsLargerThanMaximumSpecified",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_InvariantKValueMustBeSameOrIncreasedOnAnySwaps",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_MintFeeMultiplierMustNotBeLargerThan50Percent",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_OutputCerbyAmountIsLowerThanMinimumSpecified",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_OutputTokensAmountIsLowerThanMinimumSpecified",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_SafeTransferFromFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_SafeTransferNativeFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_SwappingTokenToSameTokenIsForbidden",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_TokenAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_TokenDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_TransactionIsExpired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_TvlMultiplierIsWrong",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ICerbyERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountTokensIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountCerbyToMint",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_lpAmount",
          "type": "uint256"
        }
      ],
      "name": "LiquidityAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ICerbyERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountTokensOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountCerbyToBurn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountLpTokensBalanceToBurn",
          "type": "uint256"
        }
      ],
      "name": "LiquidityRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ICerbyERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract ICerbySwapV1_Vault",
          "name": "_vaultAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        }
      ],
      "name": "PoolCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ICerbyERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountTokensIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountCerbyIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountTokensOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountCerbyOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_currentFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_transferTo",
          "type": "address"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ICerbyERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newBalanceToken",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newBalanceCerby",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newCreditCerby",
          "type": "uint256"
        }
      ],
      "name": "Sync",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CerbySwapV1_AmountOfCerbyMustBeLargerThanOne\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_AmountOfCerbyOrTokensInMustBeLargerThanOne\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_AmountOfTokensMustBeLargerThanOne\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_CreditCerbyIsAlreadyMaximum\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_CreditCerbyMustNotBeBelowZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_FeeIsWrong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_FeeOnTransferTokensAreForbidden\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_InputCerbyAmountIsLargerThanMaximumSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_InputTokensAmountIsLargerThanMaximumSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_InvariantKValueMustBeSameOrIncreasedOnAnySwaps\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_MintFeeMultiplierMustNotBeLargerThan50Percent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_OutputCerbyAmountIsLowerThanMinimumSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_OutputTokensAmountIsLowerThanMinimumSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_SafeTransferFromFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_SafeTransferNativeFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_SwappingTokenToSameTokenIsForbidden\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_TokenDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_TransactionIsExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_TvlMultiplierIsWrong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ICerbyERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountTokensIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountCerbyToMint\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lpAmount\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ICerbyERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountTokensOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountCerbyToBurn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountLpTokensBalanceToBurn\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ICerbyERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ICerbySwapV1_Vault\",\"name\":\"_vaultAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ICerbyERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountTokensIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountCerbyIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountTokensOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountCerbyOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_currentFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_transferTo\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ICerbyERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newBalanceToken\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newBalanceCerby\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newCreditCerby\",\"type\":\"uint256\"}],\"name\":\"Sync\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CerbySwapV1_MinimalProxy.sol\":\"CerbySwapV1_MinimalProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/CerbySwapV1_Declarations.sol\":{\"keccak256\":\"0x4dc37292510859c5985c3a39bd4aca2a0671dad84f8bd2a01f02fba27fe2e6b0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2b6facccc94d73f97d5f23e1b35c648c5cec0442c767f3ba94bd1d0222fda9ba\",\"dweb:/ipfs/QmNPNbppsWMbdWKSG2XK18a6RBpBtopSvV59t225vEyAyo\"]},\"project:/contracts/CerbySwapV1_MinimalProxy.sol\":{\"keccak256\":\"0x9e2c690856fa40ff654bb5eda6e8d9df1a1097861253fbdc3318e867952f890d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e18b712aee9f8652a6413c16faefbdf1a3a15d875fd4e295f96f9c279bfa3531\",\"dweb:/ipfs/QmVWq61BRtN9mp6DZDCPXWNijLULGE4iNaxtdBC5r6Byde\"]},\"project:/contracts/interfaces/ICerbyERC20.sol\":{\"keccak256\":\"0xf1ff4af9d58f7ad71784eab554ce3840ce0b4580e8d2d4070f363a173c50edcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2fcf00345ab051feea91a4f704dc0b1d71ef5bdc4fa97282db4645a351a37b1\",\"dweb:/ipfs/Qmd3s8iLKv2tq6S9GGs2AoDNmyXHznDQSn6fXWGkHDB4EC\"]},\"project:/contracts/interfaces/ICerbySwapV1_Vault.sol\":{\"keccak256\":\"0x3347c0b2c866c6dee870af5a6842cb213f7da4f8dfd4dcbf769f7688de2e5109\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb27afe1579aeb1c12a4d8052eed87962fbf6f5bcb150680dcb67170b2a08d36\",\"dweb:/ipfs/QmUmoE623AsFJ6Tb9mJ28JLVwtjP2c8EHuGUPD53Q2zp55\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220293959676b725c79d0cf6e46268169575594de89909a44214ed9bec8add4410c64736f6c634300080e0033",
  "deployedBytecode": "0x6080604052600080fdfea2646970667358221220293959676b725c79d0cf6e46268169575594de89909a44214ed9bec8add4410c64736f6c634300080e0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "205:2436:8:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "205:2436:8:-:0;;;;;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.14;\n\n// original code\n// https://github.com/optionality/clone-factory/blob/master/contracts/CloneFactory.sol\n\nimport \"./CerbySwapV1_Declarations.sol\";\n\ncontract CerbySwapV1_MinimalProxy is CerbySwapV1_Declarations {\n\n    function cloneVault(\n        ICerbyERC20 _token\n    )\n        internal\n        returns (ICerbySwapV1_Vault)\n    {       \n        bytes32 salt = _getSaltByToken(_token);\n\n        bytes20 vaultImplementationBytes = bytes20(\n            address(VAULT_IMPLEMENTATION)\n        );\n\n        address resultVaultAddress;\n        assembly {\n            let clone := mload(0x40)\n            mstore(\n                clone,\n                0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000\n            )\n            mstore(add(clone, 0x14), vaultImplementationBytes)\n            mstore(\n                add(clone, 0x28),\n                0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000\n            )\n            resultVaultAddress := create2(\n                0,\n                clone,\n                0x37,\n                salt\n            )\n        }\n\n        cachedTokenValues[_token].vaultAddress = ICerbySwapV1_Vault(resultVaultAddress);\n        return ICerbySwapV1_Vault(resultVaultAddress);\n    }\n\n    function _generateVaultAddressByToken(\n        ICerbyERC20 _token\n    )\n        internal\n        view\n        returns(ICerbySwapV1_Vault)\n    {\n        bytes32 salt = _getSaltByToken(_token);\n\n        address factory = address(this);\n        address vaultCloneAddress;  \n        address vaultImplementationAddress = address(VAULT_IMPLEMENTATION);\n        assembly {\n            let ptr := mload(0x40)\n            mstore(\n                ptr,\n                0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000\n            )\n            mstore(add(ptr, 0x14), shl(0x60, vaultImplementationAddress))\n            mstore(\n                add(ptr, 0x28),\n                0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000\n            )\n            mstore(add(ptr, 0x38), shl(0x60, factory))\n            mstore(add(ptr, 0x4c), salt)\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\n            vaultCloneAddress := keccak256(add(ptr, 0x37), 0x55)\n        }\n\n        return ICerbySwapV1_Vault(vaultCloneAddress);\n    }\n\n    function _getSaltByToken(\n        ICerbyERC20 _token\n    )\n        internal\n        view\n        returns(bytes32)\n    {        \n        return keccak256(\n            abi.encodePacked(\n                _token,\n                address(this) // factory\n            )\n        );\n    }\n}\n",
  "sourcePath": "/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/contracts/CerbySwapV1_MinimalProxy.sol",
  "ast": {
    "absolutePath": "project:/contracts/CerbySwapV1_MinimalProxy.sol",
    "exportedSymbols": {
      "CerbySwapV1_Declarations": [
        650
      ],
      "CerbySwapV1_MinimalProxy": [
        2339
      ],
      "ICerbyERC20": [
        4245
      ],
      "ICerbySwapV1_Vault": [
        4288
      ]
    },
    "id": 2340,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2234,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:8"
      },
      {
        "absolutePath": "project:/contracts/CerbySwapV1_Declarations.sol",
        "file": "./CerbySwapV1_Declarations.sol",
        "id": 2235,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2340,
        "sourceUnit": 651,
        "src": "163:40:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2236,
              "name": "CerbySwapV1_Declarations",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 650,
              "src": "242:24:8"
            },
            "id": 2237,
            "nodeType": "InheritanceSpecifier",
            "src": "242:24:8"
          }
        ],
        "canonicalName": "CerbySwapV1_MinimalProxy",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2339,
        "linearizedBaseContracts": [
          2339,
          650
        ],
        "name": "CerbySwapV1_MinimalProxy",
        "nameLocation": "214:24:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2279,
              "nodeType": "Block",
              "src": "386:912:8",
              "statements": [
                {
                  "assignments": [
                    2247
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2247,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "411:4:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2279,
                      "src": "403:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2246,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "403:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2251,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2249,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2240,
                        "src": "434:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                          "typeString": "contract ICerbyERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                          "typeString": "contract ICerbyERC20"
                        }
                      ],
                      "id": 2248,
                      "name": "_getSaltByToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2338,
                      "src": "418:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_ICerbyERC20_$4245_$returns$_t_bytes32_$",
                        "typeString": "function (contract ICerbyERC20) view returns (bytes32)"
                      }
                    },
                    "id": 2250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "418:23:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "403:38:8"
                },
                {
                  "assignments": [
                    2253
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2253,
                      "mutability": "mutable",
                      "name": "vaultImplementationBytes",
                      "nameLocation": "460:24:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2279,
                      "src": "452:32:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes20",
                        "typeString": "bytes20"
                      },
                      "typeName": {
                        "id": 2252,
                        "name": "bytes20",
                        "nodeType": "ElementaryTypeName",
                        "src": "452:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2261,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2258,
                            "name": "VAULT_IMPLEMENTATION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 471,
                            "src": "516:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICerbySwapV1_Vault_$4288",
                              "typeString": "contract ICerbySwapV1_Vault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ICerbySwapV1_Vault_$4288",
                              "typeString": "contract ICerbySwapV1_Vault"
                            }
                          ],
                          "id": 2257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "508:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2256,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "508:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "508:29:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "487:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes20_$",
                        "typeString": "type(bytes20)"
                      },
                      "typeName": {
                        "id": 2254,
                        "name": "bytes20",
                        "nodeType": "ElementaryTypeName",
                        "src": "487:7:8",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "487:60:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes20",
                      "typeString": "bytes20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "452:95:8"
                },
                {
                  "assignments": [
                    2263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2263,
                      "mutability": "mutable",
                      "name": "resultVaultAddress",
                      "nameLocation": "566:18:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2279,
                      "src": "558:26:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2262,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "558:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2264,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "558:26:8"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "603:544:8",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "617:24:8",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "636:4:8",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "630:5:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "630:11:8"
                        },
                        "variables": [
                          {
                            "name": "clone",
                            "nodeType": "YulTypedName",
                            "src": "621:5:8",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "clone",
                              "nodeType": "YulIdentifier",
                              "src": "678:5:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "701:66:8",
                              "type": "",
                              "value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "654:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "654:127:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "654:127:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "clone",
                                  "nodeType": "YulIdentifier",
                                  "src": "805:5:8"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "812:4:8",
                                  "type": "",
                                  "value": "0x14"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "801:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "801:16:8"
                            },
                            {
                              "name": "vaultImplementationBytes",
                              "nodeType": "YulIdentifier",
                              "src": "819:24:8"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "794:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "794:50:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "794:50:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "clone",
                                  "nodeType": "YulIdentifier",
                                  "src": "885:5:8"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "892:4:8",
                                  "type": "",
                                  "value": "0x28"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "881:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "881:16:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "915:66:8",
                              "type": "",
                              "value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "857:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "857:138:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "857:138:8"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1008:129:8",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1055:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "clone",
                              "nodeType": "YulIdentifier",
                              "src": "1074:5:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1097:4:8",
                              "type": "",
                              "value": "0x37"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1119:4:8"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1030:7:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1030:107:8"
                        },
                        "variableNames": [
                          {
                            "name": "resultVaultAddress",
                            "nodeType": "YulIdentifier",
                            "src": "1008:18:8"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 2263,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1008:18:8",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2247,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1119:4:8",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2253,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "819:24:8",
                      "valueSize": 1
                    }
                  ],
                  "id": 2265,
                  "nodeType": "InlineAssembly",
                  "src": "594:553:8"
                },
                {
                  "expression": {
                    "id": 2273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2266,
                          "name": "cachedTokenValues",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 459,
                          "src": "1157:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_ICerbyERC20_$4245_$_t_struct$_TokenCache_$516_storage_$",
                            "typeString": "mapping(contract ICerbyERC20 => struct CerbySwapV1_Declarations.TokenCache storage ref)"
                          }
                        },
                        "id": 2268,
                        "indexExpression": {
                          "id": 2267,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2240,
                          "src": "1175:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                            "typeString": "contract ICerbyERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1157:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenCache_$516_storage",
                          "typeString": "struct CerbySwapV1_Declarations.TokenCache storage ref"
                        }
                      },
                      "id": 2269,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "vaultAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 513,
                      "src": "1157:38:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICerbySwapV1_Vault_$4288",
                        "typeString": "contract ICerbySwapV1_Vault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2271,
                          "name": "resultVaultAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2263,
                          "src": "1217:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2270,
                        "name": "ICerbySwapV1_Vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4288,
                        "src": "1198:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ICerbySwapV1_Vault_$4288_$",
                          "typeString": "type(contract ICerbySwapV1_Vault)"
                        }
                      },
                      "id": 2272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1198:38:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICerbySwapV1_Vault_$4288",
                        "typeString": "contract ICerbySwapV1_Vault"
                      }
                    },
                    "src": "1157:79:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICerbySwapV1_Vault_$4288",
                      "typeString": "contract ICerbySwapV1_Vault"
                    }
                  },
                  "id": 2274,
                  "nodeType": "ExpressionStatement",
                  "src": "1157:79:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2276,
                        "name": "resultVaultAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2263,
                        "src": "1272:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2275,
                      "name": "ICerbySwapV1_Vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4288,
                      "src": "1253:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICerbySwapV1_Vault_$4288_$",
                        "typeString": "type(contract ICerbySwapV1_Vault)"
                      }
                    },
                    "id": 2277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1253:38:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICerbySwapV1_Vault_$4288",
                      "typeString": "contract ICerbySwapV1_Vault"
                    }
                  },
                  "functionReturnParameters": 2245,
                  "id": 2278,
                  "nodeType": "Return",
                  "src": "1246:45:8"
                }
              ]
            },
            "id": 2280,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cloneVault",
            "nameLocation": "283:10:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2240,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "315:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2280,
                  "src": "303:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                    "typeString": "contract ICerbyERC20"
                  },
                  "typeName": {
                    "id": 2239,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2238,
                      "name": "ICerbyERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4245,
                      "src": "303:11:8"
                    },
                    "referencedDeclaration": 4245,
                    "src": "303:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                      "typeString": "contract ICerbyERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "293:34:8"
            },
            "returnParameters": {
              "id": 2245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2244,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2280,
                  "src": "362:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICerbySwapV1_Vault_$4288",
                    "typeString": "contract ICerbySwapV1_Vault"
                  },
                  "typeName": {
                    "id": 2243,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2242,
                      "name": "ICerbySwapV1_Vault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4288,
                      "src": "362:18:8"
                    },
                    "referencedDeclaration": 4288,
                    "src": "362:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICerbySwapV1_Vault_$4288",
                      "typeString": "contract ICerbySwapV1_Vault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "361:20:8"
            },
            "scope": 2339,
            "src": "274:1024:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2317,
              "nodeType": "Block",
              "src": "1446:908:8",
              "statements": [
                {
                  "assignments": [
                    2290
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2290,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1464:4:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2317,
                      "src": "1456:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2289,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1456:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2294,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2292,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2283,
                        "src": "1487:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                          "typeString": "contract ICerbyERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                          "typeString": "contract ICerbyERC20"
                        }
                      ],
                      "id": 2291,
                      "name": "_getSaltByToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2338,
                      "src": "1471:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_ICerbyERC20_$4245_$returns$_t_bytes32_$",
                        "typeString": "function (contract ICerbyERC20) view returns (bytes32)"
                      }
                    },
                    "id": 2293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1471:23:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1456:38:8"
                },
                {
                  "assignments": [
                    2296
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2296,
                      "mutability": "mutable",
                      "name": "factory",
                      "nameLocation": "1513:7:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2317,
                      "src": "1505:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2295,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1505:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2301,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2299,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "1531:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CerbySwapV1_MinimalProxy_$2339",
                          "typeString": "contract CerbySwapV1_MinimalProxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CerbySwapV1_MinimalProxy_$2339",
                          "typeString": "contract CerbySwapV1_MinimalProxy"
                        }
                      ],
                      "id": 2298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1523:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 2297,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1523:7:8",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1523:13:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1505:31:8"
                },
                {
                  "assignments": [
                    2303
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2303,
                      "mutability": "mutable",
                      "name": "vaultCloneAddress",
                      "nameLocation": "1554:17:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2317,
                      "src": "1546:25:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2302,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1546:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2304,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1546:25:8"
                },
                {
                  "assignments": [
                    2306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2306,
                      "mutability": "mutable",
                      "name": "vaultImplementationAddress",
                      "nameLocation": "1591:26:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2317,
                      "src": "1583:34:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2305,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1583:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2311,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2309,
                        "name": "VAULT_IMPLEMENTATION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 471,
                        "src": "1628:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICerbySwapV1_Vault_$4288",
                          "typeString": "contract ICerbySwapV1_Vault"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ICerbySwapV1_Vault_$4288",
                          "typeString": "contract ICerbySwapV1_Vault"
                        }
                      ],
                      "id": 2308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1620:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 2307,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1620:7:8",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1620:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1583:66:8"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1668:625:8",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1682:22:8",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1699:4:8",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1693:5:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1693:11:8"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "1686:3:8",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "1741:3:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1762:66:8",
                              "type": "",
                              "value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1717:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1717:125:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1717:125:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1866:3:8"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1871:4:8",
                                  "type": "",
                                  "value": "0x14"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1862:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1862:14:8"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1882:4:8",
                                  "type": "",
                                  "value": "0x60"
                                },
                                {
                                  "name": "vaultImplementationAddress",
                                  "nodeType": "YulIdentifier",
                                  "src": "1888:26:8"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1878:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1878:37:8"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1855:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1855:61:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1855:61:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1957:3:8"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1962:4:8",
                                  "type": "",
                                  "value": "0x28"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1953:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1953:14:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1985:66:8",
                              "type": "",
                              "value": "0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1929:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1929:136:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1929:136:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2089:3:8"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2094:4:8",
                                  "type": "",
                                  "value": "0x38"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2085:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2085:14:8"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2105:4:8",
                                  "type": "",
                                  "value": "0x60"
                                },
                                {
                                  "name": "factory",
                                  "nodeType": "YulIdentifier",
                                  "src": "2111:7:8"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2101:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2101:18:8"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2078:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2078:42:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2078:42:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2144:3:8"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2149:4:8",
                                  "type": "",
                                  "value": "0x4c"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2140:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2140:14:8"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "2156:4:8"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2133:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2133:28:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2133:28:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2185:3:8"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2190:4:8",
                                  "type": "",
                                  "value": "0x6c"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2181:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2181:14:8"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2207:3:8"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2212:4:8",
                                  "type": "",
                                  "value": "0x37"
                                }
                              ],
                              "functionName": {
                                "name": "keccak256",
                                "nodeType": "YulIdentifier",
                                "src": "2197:9:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2197:20:8"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2174:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2174:44:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2174:44:8"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2231:52:8",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2266:3:8"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2271:4:8",
                                  "type": "",
                                  "value": "0x37"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2262:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2262:14:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2278:4:8",
                              "type": "",
                              "value": "0x55"
                            }
                          ],
                          "functionName": {
                            "name": "keccak256",
                            "nodeType": "YulIdentifier",
                            "src": "2252:9:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2252:31:8"
                        },
                        "variableNames": [
                          {
                            "name": "vaultCloneAddress",
                            "nodeType": "YulIdentifier",
                            "src": "2231:17:8"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 2296,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2111:7:8",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2290,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2156:4:8",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2303,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2231:17:8",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2306,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1888:26:8",
                      "valueSize": 1
                    }
                  ],
                  "id": 2312,
                  "nodeType": "InlineAssembly",
                  "src": "1659:634:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2314,
                        "name": "vaultCloneAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2303,
                        "src": "2329:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2313,
                      "name": "ICerbySwapV1_Vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4288,
                      "src": "2310:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICerbySwapV1_Vault_$4288_$",
                        "typeString": "type(contract ICerbySwapV1_Vault)"
                      }
                    },
                    "id": 2315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2310:37:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICerbySwapV1_Vault_$4288",
                      "typeString": "contract ICerbySwapV1_Vault"
                    }
                  },
                  "functionReturnParameters": 2288,
                  "id": 2316,
                  "nodeType": "Return",
                  "src": "2303:44:8"
                }
              ]
            },
            "id": 2318,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_generateVaultAddressByToken",
            "nameLocation": "1313:28:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2283,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1363:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2318,
                  "src": "1351:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                    "typeString": "contract ICerbyERC20"
                  },
                  "typeName": {
                    "id": 2282,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2281,
                      "name": "ICerbyERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4245,
                      "src": "1351:11:8"
                    },
                    "referencedDeclaration": 4245,
                    "src": "1351:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                      "typeString": "contract ICerbyERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1341:34:8"
            },
            "returnParameters": {
              "id": 2288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2287,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2318,
                  "src": "1422:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICerbySwapV1_Vault_$4288",
                    "typeString": "contract ICerbySwapV1_Vault"
                  },
                  "typeName": {
                    "id": 2286,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2285,
                      "name": "ICerbySwapV1_Vault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4288,
                      "src": "1422:18:8"
                    },
                    "referencedDeclaration": 4288,
                    "src": "1422:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICerbySwapV1_Vault_$4288",
                      "typeString": "contract ICerbySwapV1_Vault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1421:20:8"
            },
            "scope": 2339,
            "src": "1304:1050:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2337,
              "nodeType": "Block",
              "src": "2478:161:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2329,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2321,
                            "src": "2560:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                              "typeString": "contract ICerbyERC20"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 2332,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "2592:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CerbySwapV1_MinimalProxy_$2339",
                                  "typeString": "contract CerbySwapV1_MinimalProxy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CerbySwapV1_MinimalProxy_$2339",
                                  "typeString": "contract CerbySwapV1_MinimalProxy"
                                }
                              ],
                              "id": 2331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2584:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2330,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2584:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2584:13:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                              "typeString": "contract ICerbyERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2327,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "2526:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2526:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2526:96:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2326,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "2503:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2503:129:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 2325,
                  "id": 2336,
                  "nodeType": "Return",
                  "src": "2496:136:8"
                }
              ]
            },
            "id": 2338,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getSaltByToken",
            "nameLocation": "2369:15:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2321,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2406:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2338,
                  "src": "2394:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                    "typeString": "contract ICerbyERC20"
                  },
                  "typeName": {
                    "id": 2320,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2319,
                      "name": "ICerbyERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4245,
                      "src": "2394:11:8"
                    },
                    "referencedDeclaration": 4245,
                    "src": "2394:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                      "typeString": "contract ICerbyERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2384:34:8"
            },
            "returnParameters": {
              "id": 2325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2324,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2338,
                  "src": "2465:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2323,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2465:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2464:9:8"
            },
            "scope": 2339,
            "src": "2360:279:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2340,
        "src": "205:2436:8",
        "usedErrors": [
          611,
          613,
          615,
          617,
          619,
          621,
          623,
          625,
          627,
          629,
          631,
          633,
          635,
          637,
          639,
          641,
          643,
          645,
          647,
          649
        ]
      }
    ],
    "src": "32:2610:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-20T07:31:48.888Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}