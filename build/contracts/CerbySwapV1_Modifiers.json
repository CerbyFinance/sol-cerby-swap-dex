{
  "contractName": "CerbySwapV1_Modifiers",
  "abi": [
    {
      "inputs": [],
      "name": "CerbySwapV1_AmountOfCerbyMustBeLargerThanOne",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_AmountOfCerbyOrTokensInMustBeLargerThanOne",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_AmountOfTokensMustBeLargerThanOne",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_CreditCerbyIsAlreadyMaximum",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_CreditCerbyMustNotBeBelowZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_FeeIsWrong",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_FeeOnTransferTokensAreForbidden",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_InputCerbyAmountIsLargerThanMaximumSpecified",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_InputTokensAmountIsLargerThanMaximumSpecified",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_InvariantKValueMustBeSameOrIncreasedOnAnySwaps",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_MintFeeMultiplierMustNotBeLargerThan50Percent",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_OutputCerbyAmountIsLowerThanMinimumSpecified",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_OutputTokensAmountIsLowerThanMinimumSpecified",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_SafeTransferFromFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_SafeTransferNativeFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_SwappingTokenToSameTokenIsForbidden",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_TokenAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_TokenDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_TransactionIsExpired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CerbySwapV1_TvlMultiplierIsWrong",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ICerbyERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountTokensIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountCerbyToMint",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_lpAmount",
          "type": "uint256"
        }
      ],
      "name": "LiquidityAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ICerbyERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountTokensOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountCerbyToBurn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountLpTokensBalanceToBurn",
          "type": "uint256"
        }
      ],
      "name": "LiquidityRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ICerbyERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract ICerbySwapV1_Vault",
          "name": "_vaultAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        }
      ],
      "name": "PoolCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ICerbyERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountTokensIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountCerbyIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountTokensOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountCerbyOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_currentFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_transferTo",
          "type": "address"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ICerbyERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newBalanceToken",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newBalanceCerby",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newCreditCerby",
          "type": "uint256"
        }
      ],
      "name": "Sync",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CerbySwapV1_AmountOfCerbyMustBeLargerThanOne\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_AmountOfCerbyOrTokensInMustBeLargerThanOne\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_AmountOfTokensMustBeLargerThanOne\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_CreditCerbyIsAlreadyMaximum\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_CreditCerbyMustNotBeBelowZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_FeeIsWrong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_FeeOnTransferTokensAreForbidden\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_InputCerbyAmountIsLargerThanMaximumSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_InputTokensAmountIsLargerThanMaximumSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_InvariantKValueMustBeSameOrIncreasedOnAnySwaps\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_MintFeeMultiplierMustNotBeLargerThan50Percent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_OutputCerbyAmountIsLowerThanMinimumSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_OutputTokensAmountIsLowerThanMinimumSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_SafeTransferFromFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_SafeTransferNativeFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_SwappingTokenToSameTokenIsForbidden\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_TokenDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_TransactionIsExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CerbySwapV1_TvlMultiplierIsWrong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ICerbyERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountTokensIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountCerbyToMint\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lpAmount\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ICerbyERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountTokensOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountCerbyToBurn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountLpTokensBalanceToBurn\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ICerbyERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ICerbySwapV1_Vault\",\"name\":\"_vaultAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ICerbyERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountTokensIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountCerbyIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountTokensOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountCerbyOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_currentFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_transferTo\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ICerbyERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newBalanceToken\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newBalanceCerby\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newCreditCerby\",\"type\":\"uint256\"}],\"name\":\"Sync\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CerbySwapV1_Modifiers.sol\":\"CerbySwapV1_Modifiers\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/CerbySwapV1_Declarations.sol\":{\"keccak256\":\"0x4dc37292510859c5985c3a39bd4aca2a0671dad84f8bd2a01f02fba27fe2e6b0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2b6facccc94d73f97d5f23e1b35c648c5cec0442c767f3ba94bd1d0222fda9ba\",\"dweb:/ipfs/QmNPNbppsWMbdWKSG2XK18a6RBpBtopSvV59t225vEyAyo\"]},\"project:/contracts/CerbySwapV1_Modifiers.sol\":{\"keccak256\":\"0x412a3db874928d0026c81586df3ca9d2348ffdcdab6c97ff011f4f7569b111ec\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3bde858efd0f6b87d171d17c74fec99caa6e139bb45ece403d3ec971e5b7e527\",\"dweb:/ipfs/QmVBFtQjaQsP5H479TXFHRuGWJ2SuFSr6uf1o1xugnJJq2\"]},\"project:/contracts/interfaces/ICerbyERC20.sol\":{\"keccak256\":\"0xf1ff4af9d58f7ad71784eab554ce3840ce0b4580e8d2d4070f363a173c50edcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2fcf00345ab051feea91a4f704dc0b1d71ef5bdc4fa97282db4645a351a37b1\",\"dweb:/ipfs/Qmd3s8iLKv2tq6S9GGs2AoDNmyXHznDQSn6fXWGkHDB4EC\"]},\"project:/contracts/interfaces/ICerbySwapV1_Vault.sol\":{\"keccak256\":\"0x3347c0b2c866c6dee870af5a6842cb213f7da4f8dfd4dcbf769f7688de2e5109\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb27afe1579aeb1c12a4d8052eed87962fbf6f5bcb150680dcb67170b2a08d36\",\"dweb:/ipfs/QmUmoE623AsFJ6Tb9mJ28JLVwtjP2c8EHuGUPD53Q2zp55\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity ^0.8.14;\n\nimport \"./CerbySwapV1_Declarations.sol\";\n\nabstract contract CerbySwapV1_Modifiers is CerbySwapV1_Declarations {\n\n    modifier tokenMustExistInPool(\n        ICerbyERC20 _token\n    ) {\n        if (cachedTokenValues[_token].poolId == 0 || _token == CERBY_TOKEN) {\n            revert(\"C\"); // TODO: remove this line on production\n            revert CerbySwapV1_TokenDoesNotExist();\n        }\n        _;\n    }\n\n    modifier transactionIsNotExpired(\n        uint256 _expireTimestamp\n    ) {\n        if (block.timestamp > _expireTimestamp) {\n            revert(\"D\"); // TODO: remove this line on production\n            revert CerbySwapV1_TransactionIsExpired();\n        }\n        _;\n    }\n}\n",
  "sourcePath": "/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/contracts/CerbySwapV1_Modifiers.sol",
  "ast": {
    "absolutePath": "project:/contracts/CerbySwapV1_Modifiers.sol",
    "exportedSymbols": {
      "CerbySwapV1_Declarations": [
        650
      ],
      "CerbySwapV1_Modifiers": [
        2390
      ],
      "ICerbyERC20": [
        4245
      ],
      "ICerbySwapV1_Vault": [
        4288
      ]
    },
    "id": 2391,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2341,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:24:9"
      },
      {
        "absolutePath": "project:/contracts/CerbySwapV1_Declarations.sol",
        "file": "./CerbySwapV1_Declarations.sol",
        "id": 2342,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2391,
        "sourceUnit": 651,
        "src": "64:40:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 2343,
              "name": "CerbySwapV1_Declarations",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 650,
              "src": "149:24:9"
            },
            "id": 2344,
            "nodeType": "InheritanceSpecifier",
            "src": "149:24:9"
          }
        ],
        "canonicalName": "CerbySwapV1_Modifiers",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2390,
        "linearizedBaseContracts": [
          2390,
          650
        ],
        "name": "CerbySwapV1_Modifiers",
        "nameLocation": "124:21:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2369,
              "nodeType": "Block",
              "src": "245:223:9",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "id": 2354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 2349,
                            "name": "cachedTokenValues",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 459,
                            "src": "259:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_ICerbyERC20_$4245_$_t_struct$_TokenCache_$516_storage_$",
                              "typeString": "mapping(contract ICerbyERC20 => struct CerbySwapV1_Declarations.TokenCache storage ref)"
                            }
                          },
                          "id": 2351,
                          "indexExpression": {
                            "id": 2350,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2347,
                            "src": "277:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                              "typeString": "contract ICerbyERC20"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "259:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenCache_$516_storage",
                            "typeString": "struct CerbySwapV1_Declarations.TokenCache storage ref"
                          }
                        },
                        "id": 2352,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "poolId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 515,
                        "src": "259:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "295:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "259:37:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                        "typeString": "contract ICerbyERC20"
                      },
                      "id": 2357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2355,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2347,
                        "src": "300:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                          "typeString": "contract ICerbyERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 2356,
                        "name": "CERBY_TOKEN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 465,
                        "src": "310:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                          "typeString": "contract ICerbyERC20"
                        }
                      },
                      "src": "300:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "259:62:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2367,
                  "nodeType": "IfStatement",
                  "src": "255:196:9",
                  "trueBody": {
                    "id": 2366,
                    "nodeType": "Block",
                    "src": "323:128:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "43",
                              "id": 2360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "344:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_017e667f4b8c174291d1543c466717566e206df1bfd6f30271055ddafdb18f72",
                                "typeString": "literal_string \"C\""
                              },
                              "value": "C"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_017e667f4b8c174291d1543c466717566e206df1bfd6f30271055ddafdb18f72",
                                "typeString": "literal_string \"C\""
                              }
                            ],
                            "id": 2359,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "337:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 2361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "337:11:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2362,
                        "nodeType": "ExpressionStatement",
                        "src": "337:11:9"
                      },
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2363,
                            "name": "CerbySwapV1_TokenDoesNotExist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 613,
                            "src": "409:29:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "409:31:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2365,
                        "nodeType": "RevertStatement",
                        "src": "402:38:9"
                      }
                    ]
                  }
                },
                {
                  "id": 2368,
                  "nodeType": "PlaceholderStatement",
                  "src": "460:1:9"
                }
              ]
            },
            "id": 2370,
            "name": "tokenMustExistInPool",
            "nameLocation": "190:20:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2347,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "232:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2370,
                  "src": "220:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                    "typeString": "contract ICerbyERC20"
                  },
                  "typeName": {
                    "id": 2346,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2345,
                      "name": "ICerbyERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4245,
                      "src": "220:11:9"
                    },
                    "referencedDeclaration": 4245,
                    "src": "220:11:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICerbyERC20_$4245",
                      "typeString": "contract ICerbyERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "210:34:9"
            },
            "src": "181:287:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2388,
              "nodeType": "Block",
              "src": "547:198:9",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2374,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "561:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "561:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 2376,
                      "name": "_expireTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2372,
                      "src": "579:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "561:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2386,
                  "nodeType": "IfStatement",
                  "src": "557:171:9",
                  "trueBody": {
                    "id": 2385,
                    "nodeType": "Block",
                    "src": "597:131:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "44",
                              "id": 2379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "618:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6c3fd336b49dcb1c57dd4fbeaf5f898320b0da06a5ef64e798c6497600bb79f2",
                                "typeString": "literal_string \"D\""
                              },
                              "value": "D"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_6c3fd336b49dcb1c57dd4fbeaf5f898320b0da06a5ef64e798c6497600bb79f2",
                                "typeString": "literal_string \"D\""
                              }
                            ],
                            "id": 2378,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "611:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 2380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "611:11:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2381,
                        "nodeType": "ExpressionStatement",
                        "src": "611:11:9"
                      },
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2382,
                            "name": "CerbySwapV1_TransactionIsExpired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 615,
                            "src": "683:32:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "683:34:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2384,
                        "nodeType": "RevertStatement",
                        "src": "676:41:9"
                      }
                    ]
                  }
                },
                {
                  "id": 2387,
                  "nodeType": "PlaceholderStatement",
                  "src": "737:1:9"
                }
              ]
            },
            "id": 2389,
            "name": "transactionIsNotExpired",
            "nameLocation": "483:23:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2372,
                  "mutability": "mutable",
                  "name": "_expireTimestamp",
                  "nameLocation": "524:16:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2389,
                  "src": "516:24:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "516:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "506:40:9"
            },
            "src": "474:271:9",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2391,
        "src": "106:641:9",
        "usedErrors": [
          611,
          613,
          615,
          617,
          619,
          621,
          623,
          625,
          627,
          629,
          631,
          633,
          635,
          637,
          639,
          641,
          643,
          645,
          647,
          649
        ]
      }
    ],
    "src": "38:710:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-20T07:31:48.890Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}