{
  "contractName": "TestBtcToken",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mintByBridge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnByBridge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mintHumanAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnHumanAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferCustom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnByBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnHumanAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintByBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintHumanAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferCustom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/TestBtcToken.sol\":\"TestBtcToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/TestBtcToken.sol\":{\"keccak256\":\"0x613256133bbc972c867e2bac0fd9bbbf5969cc75f6d5a12a056b3773215caef2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d9a5fac0caaeb5e33626466894f41d342cadfbd6c95b055193493e878175dcb\",\"dweb:/ipfs/QmUiXiWQN1FZmcVjncS9bHNNjNUXop4chWtr25aJ9DfvWC\"]},\"project:/openzeppelin/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x316a8d76c048547dc6383e42472e25e6c4a4dbe1b52731784e5ab0974121eda9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6660b4ef1d51208244354265fa5a4fd82ddf2a5deee9c65b0d5857f568eb886f\",\"dweb:/ipfs/QmaG6AuSiR8SwHSmYqyLbG7rTbg7tr9kYXoTJfrGBNXov4\"]},\"project:/openzeppelin/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x425bb7f780665ba9ed830f3cc8b6db59b9416b1d84727d22fbc43fb42acbf4ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b8719ace6234ebfb80183c1a6d29500c096c491744992a49d9478b6041c3626\",\"dweb:/ipfs/QmWQypaw9S833m3AskoRYYdXtpWc7Es9NX9iCh3cRJVwXX\"]},\"project:/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x3b9347741cbe8875e50ef51a75a2c2d866113f7541724b824cd2254b5729d3f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://134c2e2464bf302745edbdb66e7510fe74ed43575f4596f9b5ccc865fd591c7c\",\"dweb:/ipfs/QmfCLdiZgnizLns3c7U6e73RH6pAXgeqySZ6NWH7quN46G\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060408051808201825260118152702bb930b83832b210212a21902a37b5b2b760791b6020808301918252835180850190945260048452635742544360e01b90840152815191929161006491600391610165565b508051610078906004906020840190610165565b5050600580546001600160a01b03191633179055506100b773dc15ca882f975c33d8f20ab3669d27195b8d87a66b033b2e3c9fd0803ce80000006100fc565b6100e173539faa851d86781009ec30df437d794bcd090c8f6b033b2e3c9fd0803ce80000006100fc565b6100f7336b033b2e3c9fd0803ce80000006100fc565b61025e565b806002600082825461010e91906101fe565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b82805461017190610224565b90600052602060002090601f01602090048101928261019357600085556101d9565b82601f106101ac57805160ff19168380011785556101d9565b828001600101855582156101d9579182015b828111156101d95782518255916020019190600101906101be565b506101e59291506101e9565b5090565b5b808211156101e557600081556001016101ea565b6000821982111561021f57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061023857607f821691505b60208210810361025857634e487b7160e01b600052602260045260246000fd5b50919050565b6107d28061026d6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806339509351116100975780639cff2eba116100665780639cff2eba146101e6578063a457c2d7146101f9578063a9059cbb1461020c578063dd62ed3e1461021f57600080fd5b806339509351146101a257806366830b211461016d57806370a08231146101b557806395d89b41146101de57600080fd5b806318a8ad87116100d357806318a8ad871461016d5780631f2eba241461014657806323b872dd14610180578063313ce5671461019357600080fd5b806306fdde0314610105578063095ea7b3146101235780630bb9ff5d1461014657806318160ddd1461015b575b600080fd5b61010d610258565b60405161011a91906105f1565b60405180910390f35b610136610131366004610662565b6102ea565b604051901515815260200161011a565b610159610154366004610662565b610300565b005b6002545b60405190815260200161011a565b61015961017b366004610662565b61030e565b61013661018e36600461068c565b610318565b6040516012815260200161011a565b6101366101b0366004610662565b610392565b61015f6101c33660046106c8565b6001600160a01b031660009081526020819052604090205490565b61010d6103ce565b6101596101f436600461068c565b6103dd565b610136610207366004610662565b6103ed565b61013661021a366004610662565b610424565b61015f61022d3660046106ea565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102679061071d565b80601f01602080910402602001604051908101604052809291908181526020018280546102939061071d565b80156102e05780601f106102b5576101008083540402835291602001916102e0565b820191906000526020600020905b8154815290600101906020018083116102c357829003601f168201915b5050505050905090565b60006102f7338484610431565b50600192915050565b61030a8282610493565b5050565b61030a82826104fd565b6001600160a01b03831660009081526001602090815260408083203384529091528120546000191461037d576001600160a01b03841660009081526001602090815260408083203384529091528120805484929061037790849061076d565b90915550505b610388848484610571565b5060019392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102f79185906103c9908690610784565b610431565b6060600480546102679061071d565b6103e8838383610571565b505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102f79185906103c990869061076d565b60006102f7338484610571565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b80600260008282546104a59190610784565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b6001600160a01b0382166000908152602081905260408120805483929061052590849061076d565b90915550506002805482900390556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016104f1565b6001600160a01b0383166000908152602081905260408120805483929061059990849061076d565b90915550506001600160a01b0382811660008181526020818152604091829020805486019055905184815291928616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610486565b600060208083528351808285015260005b8181101561061e57858101830151858201604001528201610602565b81811115610630576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461065d57600080fd5b919050565b6000806040838503121561067557600080fd5b61067e83610646565b946020939093013593505050565b6000806000606084860312156106a157600080fd5b6106aa84610646565b92506106b860208501610646565b9150604084013590509250925092565b6000602082840312156106da57600080fd5b6106e382610646565b9392505050565b600080604083850312156106fd57600080fd5b61070683610646565b915061071460208401610646565b90509250929050565b600181811c9082168061073157607f821691505b60208210810361075157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561077f5761077f610757565b500390565b6000821982111561079757610797610757565b50019056fea26469706673582212200134f71b933d23a5f8a6b55345749b883f34fc353567e3bc04d2c058b895c85664736f6c634300080e0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c806339509351116100975780639cff2eba116100665780639cff2eba146101e6578063a457c2d7146101f9578063a9059cbb1461020c578063dd62ed3e1461021f57600080fd5b806339509351146101a257806366830b211461016d57806370a08231146101b557806395d89b41146101de57600080fd5b806318a8ad87116100d357806318a8ad871461016d5780631f2eba241461014657806323b872dd14610180578063313ce5671461019357600080fd5b806306fdde0314610105578063095ea7b3146101235780630bb9ff5d1461014657806318160ddd1461015b575b600080fd5b61010d610258565b60405161011a91906105f1565b60405180910390f35b610136610131366004610662565b6102ea565b604051901515815260200161011a565b610159610154366004610662565b610300565b005b6002545b60405190815260200161011a565b61015961017b366004610662565b61030e565b61013661018e36600461068c565b610318565b6040516012815260200161011a565b6101366101b0366004610662565b610392565b61015f6101c33660046106c8565b6001600160a01b031660009081526020819052604090205490565b61010d6103ce565b6101596101f436600461068c565b6103dd565b610136610207366004610662565b6103ed565b61013661021a366004610662565b610424565b61015f61022d3660046106ea565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102679061071d565b80601f01602080910402602001604051908101604052809291908181526020018280546102939061071d565b80156102e05780601f106102b5576101008083540402835291602001916102e0565b820191906000526020600020905b8154815290600101906020018083116102c357829003601f168201915b5050505050905090565b60006102f7338484610431565b50600192915050565b61030a8282610493565b5050565b61030a82826104fd565b6001600160a01b03831660009081526001602090815260408083203384529091528120546000191461037d576001600160a01b03841660009081526001602090815260408083203384529091528120805484929061037790849061076d565b90915550505b610388848484610571565b5060019392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102f79185906103c9908690610784565b610431565b6060600480546102679061071d565b6103e8838383610571565b505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102f79185906103c990869061076d565b60006102f7338484610571565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b80600260008282546104a59190610784565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b6001600160a01b0382166000908152602081905260408120805483929061052590849061076d565b90915550506002805482900390556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016104f1565b6001600160a01b0383166000908152602081905260408120805483929061059990849061076d565b90915550506001600160a01b0382811660008181526020818152604091829020805486019055905184815291928616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610486565b600060208083528351808285015260005b8181101561061e57858101830151858201604001528201610602565b81811115610630576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461065d57600080fd5b919050565b6000806040838503121561067557600080fd5b61067e83610646565b946020939093013593505050565b6000806000606084860312156106a157600080fd5b6106aa84610646565b92506106b860208501610646565b9150604084013590509250925092565b6000602082840312156106da57600080fd5b6106e382610646565b9392505050565b600080604083850312156106fd57600080fd5b61070683610646565b915061071460208401610646565b90509250929050565b600181811c9082168061073157607f821691505b60208210810361075157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561077f5761077f610757565b500390565b6000821982111561079757610797610757565b50019056fea26469706673582212200134f71b933d23a5f8a6b55345749b883f34fc353567e3bc04d2c058b895c85664736f6c634300080e0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:808:76",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:76",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "62:177:76",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "97:111:76",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "118:1:76",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "125:3:76",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "130:10:76",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "121:3:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "121:20:76"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "111:6:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "111:31:76"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "111:31:76"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "162:1:76",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "165:4:76",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "155:6:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "155:15:76"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "155:15:76"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "190:1:76",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "193:4:76",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "183:6:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "183:15:76"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "183:15:76"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "78:1:76"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "85:1:76"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "81:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "81:6:76"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "75:2:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "75:13:76"
                  },
                  "nodeType": "YulIf",
                  "src": "72:136:76"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "217:16:76",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "228:1:76"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "231:1:76"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "224:3:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "224:9:76"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "217:3:76"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "45:1:76",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "48:1:76",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "54:3:76",
                "type": ""
              }
            ],
            "src": "14:225:76"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "345:76:76",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "355:26:76",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "367:9:76"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "378:2:76",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "363:3:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "363:18:76"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "355:4:76"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "397:9:76"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "408:6:76"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "390:6:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "390:25:76"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "390:25:76"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "314:9:76",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "325:6:76",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "336:4:76",
                "type": ""
              }
            ],
            "src": "244:177:76"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "481:325:76",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "491:22:76",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "505:1:76",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "508:4:76"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "501:3:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "501:12:76"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "491:6:76"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "522:38:76",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "552:4:76"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "558:1:76",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "548:3:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "548:12:76"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "526:18:76",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "599:31:76",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "601:27:76",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "615:6:76"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "623:4:76",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "611:3:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "611:17:76"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "601:6:76"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "579:18:76"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "572:6:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "572:26:76"
                  },
                  "nodeType": "YulIf",
                  "src": "569:61:76"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "689:111:76",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "710:1:76",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "717:3:76",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "722:10:76",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "713:3:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "713:20:76"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "703:6:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "703:31:76"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "703:31:76"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "754:1:76",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "757:4:76",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "747:6:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "747:15:76"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "747:15:76"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "782:1:76",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "785:4:76",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "775:6:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "775:15:76"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "775:15:76"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "645:18:76"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "668:6:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "676:2:76",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "665:2:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "665:14:76"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "642:2:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "642:38:76"
                  },
                  "nodeType": "YulIf",
                  "src": "639:161:76"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "461:4:76",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "470:6:76",
                "type": ""
              }
            ],
            "src": "426:380:76"
          }
        ]
      },
      "contents": "{\n    { }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 76,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3182:76",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:76",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "135:476:76",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "145:12:76",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "155:2:76",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "149:2:76",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "173:9:76"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "184:2:76"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:21:76"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:21:76"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "196:27:76",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "216:6:76"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "210:5:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:13:76"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "200:6:76",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "243:9:76"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "254:2:76"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "239:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "239:18:76"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "259:6:76"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "232:6:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "232:34:76"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "232:34:76"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "275:10:76",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "284:1:76",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "279:1:76",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "344:90:76",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "373:9:76"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "384:1:76"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "369:3:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "369:17:76"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "388:2:76",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "365:3:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "365:26:76"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "407:6:76"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "415:1:76"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "403:3:76"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "403:14:76"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "419:2:76"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "399:3:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "399:23:76"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "393:5:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "393:30:76"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "358:6:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "358:66:76"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "358:66:76"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "305:1:76"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "308:6:76"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "302:2:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "302:13:76"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "316:19:76",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "318:15:76",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "327:1:76"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "330:2:76"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "323:3:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "323:10:76"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "318:1:76"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "298:3:76",
                    "statements": []
                  },
                  "src": "294:140:76"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "468:66:76",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "497:9:76"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "508:6:76"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "493:3:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "493:22:76"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "517:2:76",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "489:3:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "489:31:76"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "522:1:76",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "482:6:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "482:42:76"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "482:42:76"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "449:1:76"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "452:6:76"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "446:2:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "446:13:76"
                  },
                  "nodeType": "YulIf",
                  "src": "443:91:76"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "543:62:76",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "559:9:76"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "578:6:76"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "586:2:76",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "574:3:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "574:15:76"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "595:2:76",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "591:3:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "591:7:76"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "570:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "570:29:76"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "555:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "555:45:76"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "602:2:76",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "551:3:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:54:76"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "543:4:76"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "104:9:76",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "115:6:76",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "126:4:76",
                "type": ""
              }
            ],
            "src": "14:597:76"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "665:124:76",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "675:29:76",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "697:6:76"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "684:12:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "684:20:76"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "675:5:76"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "767:16:76",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "776:1:76",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "779:1:76",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "769:6:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "769:12:76"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "769:12:76"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "726:5:76"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "737:5:76"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "752:3:76",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "757:1:76",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "748:3:76"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "748:11:76"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "761:1:76",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "744:3:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "744:19:76"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "733:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "733:31:76"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "723:2:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "723:42:76"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "716:6:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "716:50:76"
                  },
                  "nodeType": "YulIf",
                  "src": "713:70:76"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "644:6:76",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "655:5:76",
                "type": ""
              }
            ],
            "src": "616:173:76"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "881:167:76",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "927:16:76",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "936:1:76",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "939:1:76",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "929:6:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "929:12:76"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "929:12:76"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "902:7:76"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "911:9:76"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "898:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "898:23:76"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "923:2:76",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "894:3:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "894:32:76"
                  },
                  "nodeType": "YulIf",
                  "src": "891:52:76"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "952:39:76",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "981:9:76"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "962:18:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "962:29:76"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "952:6:76"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1000:42:76",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1027:9:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1038:2:76",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1023:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1023:18:76"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1010:12:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1010:32:76"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1000:6:76"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "839:9:76",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "850:7:76",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "862:6:76",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "870:6:76",
                "type": ""
              }
            ],
            "src": "794:254:76"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1148:92:76",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1158:26:76",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1170:9:76"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1181:2:76",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1166:3:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1166:18:76"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1158:4:76"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1200:9:76"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1225:6:76"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1218:6:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1218:14:76"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1211:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1211:22:76"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1193:6:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1193:41:76"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1193:41:76"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1117:9:76",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1128:6:76",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1139:4:76",
                "type": ""
              }
            ],
            "src": "1053:187:76"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1346:76:76",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1356:26:76",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1368:9:76"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1379:2:76",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1364:3:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1364:18:76"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1356:4:76"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1398:9:76"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1409:6:76"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1391:6:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1391:25:76"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1391:25:76"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1315:9:76",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1326:6:76",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1337:4:76",
                "type": ""
              }
            ],
            "src": "1245:177:76"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1531:224:76",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1577:16:76",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1586:1:76",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1589:1:76",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1579:6:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1579:12:76"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1579:12:76"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1552:7:76"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1561:9:76"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1548:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1548:23:76"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1573:2:76",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1544:3:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1544:32:76"
                  },
                  "nodeType": "YulIf",
                  "src": "1541:52:76"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1602:39:76",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1631:9:76"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1612:18:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1612:29:76"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1602:6:76"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1650:48:76",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1683:9:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1694:2:76",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1679:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1679:18:76"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1660:18:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1660:38:76"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1650:6:76"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1707:42:76",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1734:9:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1745:2:76",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1730:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1730:18:76"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1717:12:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1717:32:76"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1707:6:76"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1481:9:76",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1492:7:76",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1504:6:76",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1512:6:76",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1520:6:76",
                "type": ""
              }
            ],
            "src": "1427:328:76"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1857:87:76",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1867:26:76",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1879:9:76"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1890:2:76",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1875:3:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1875:18:76"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1867:4:76"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1909:9:76"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1924:6:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1932:4:76",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1920:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1920:17:76"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1902:6:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1902:36:76"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1902:36:76"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1826:9:76",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1837:6:76",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1848:4:76",
                "type": ""
              }
            ],
            "src": "1760:184:76"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2019:116:76",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2065:16:76",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2074:1:76",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2077:1:76",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2067:6:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2067:12:76"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2067:12:76"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2040:7:76"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2049:9:76"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2036:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2036:23:76"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2061:2:76",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2032:3:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2032:32:76"
                  },
                  "nodeType": "YulIf",
                  "src": "2029:52:76"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2090:39:76",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2119:9:76"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2100:18:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2100:29:76"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2090:6:76"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1985:9:76",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1996:7:76",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2008:6:76",
                "type": ""
              }
            ],
            "src": "1949:186:76"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2227:173:76",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2273:16:76",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2282:1:76",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2285:1:76",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2275:6:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2275:12:76"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2275:12:76"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2248:7:76"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2257:9:76"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2244:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2244:23:76"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2269:2:76",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2240:3:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2240:32:76"
                  },
                  "nodeType": "YulIf",
                  "src": "2237:52:76"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2298:39:76",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2327:9:76"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2308:18:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2308:29:76"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2298:6:76"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2346:48:76",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2379:9:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2390:2:76",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2375:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2375:18:76"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2356:18:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2356:38:76"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2346:6:76"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2185:9:76",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2196:7:76",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2208:6:76",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2216:6:76",
                "type": ""
              }
            ],
            "src": "2140:260:76"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2460:325:76",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2470:22:76",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2484:1:76",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2487:4:76"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "2480:3:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2480:12:76"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2470:6:76"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2501:38:76",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2531:4:76"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2537:1:76",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2527:3:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2527:12:76"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2505:18:76",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2578:31:76",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2580:27:76",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2594:6:76"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2602:4:76",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2590:3:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2590:17:76"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2580:6:76"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2558:18:76"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2551:6:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2551:26:76"
                  },
                  "nodeType": "YulIf",
                  "src": "2548:61:76"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2668:111:76",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2689:1:76",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2696:3:76",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2701:10:76",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2692:3:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2692:20:76"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2682:6:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2682:31:76"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2682:31:76"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2733:1:76",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2736:4:76",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2726:6:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2726:15:76"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2726:15:76"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2761:1:76",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2764:4:76",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2754:6:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2754:15:76"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2754:15:76"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2624:18:76"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2647:6:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2655:2:76",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2644:2:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2644:14:76"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2621:2:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2621:38:76"
                  },
                  "nodeType": "YulIf",
                  "src": "2618:161:76"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2440:4:76",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2449:6:76",
                "type": ""
              }
            ],
            "src": "2405:380:76"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2822:95:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2839:1:76",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2846:3:76",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2851:10:76",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2842:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2842:20:76"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2832:6:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2832:31:76"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2832:31:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2879:1:76",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2882:4:76",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2872:6:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2872:15:76"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2872:15:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2903:1:76",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2906:4:76",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2896:6:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2896:15:76"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2896:15:76"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2790:127:76"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2971:76:76",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2993:22:76",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2995:16:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2995:18:76"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2995:18:76"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2987:1:76"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2990:1:76"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2984:2:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2984:8:76"
                  },
                  "nodeType": "YulIf",
                  "src": "2981:34:76"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3024:17:76",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3036:1:76"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3039:1:76"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3032:3:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3032:9:76"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "3024:4:76"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2953:1:76",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2956:1:76",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "2962:4:76",
                "type": ""
              }
            ],
            "src": "2922:125:76"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3100:80:76",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3127:22:76",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3129:16:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3129:18:76"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3129:18:76"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3116:1:76"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3123:1:76"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3119:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3119:6:76"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3113:2:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3113:13:76"
                  },
                  "nodeType": "YulIf",
                  "src": "3110:39:76"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3158:16:76",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3169:1:76"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3172:1:76"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3165:3:76"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3165:9:76"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "3158:3:76"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3083:1:76",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3086:1:76",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3092:3:76",
                "type": ""
              }
            ],
            "src": "3052:128:76"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n}",
      "id": 76,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "107:1070:14:-:0;;;164:353;;;;;;;;;-1:-1:-1;1901:144:71;;;;;;;;;;;-1:-1:-1;;;1901:144:71;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1901:144:71;;;;1990:17;;1901:144;;;1990:17;;:9;;:17;:::i;:::-;-1:-1:-1;2017:21:71;;;;:11;;:21;;;;;:::i;:::-;-1:-1:-1;;311:5:14::1;:18:::0;;-1:-1:-1;;;;;;311:18:14::1;319:10;311:18;::::0;;-1:-1:-1;339:61:14::1;345:42;389:10;339:5;:61::i;:::-;410;416:42;460:10;410:5;:61::i;:::-;481:29;487:10;499;481:5;:29::i;:::-;107:1070:::0;;8232:342:71;8375:7;8355:16;;:27;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8469:23:71;;:13;:23;;;;;;;;;;;:34;;;;;;8528:39;390:25:76;;;8528:39:71;;363:18:76;8528:39:71;;;;;;;8232:342;;:::o;107:1070:14:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;107:1070:14;;;-1:-1:-1;107:1070:14;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:225:76;54:3;85:1;81:6;78:1;75:13;72:136;;;130:10;125:3;121:20;118:1;111:31;165:4;162:1;155:15;193:4;190:1;183:15;72:136;-1:-1:-1;224:9:76;;14:225::o;426:380::-;505:1;501:12;;;;548;;;569:61;;623:4;615:6;611:17;601:27;;569:61;676:2;668:6;665:14;645:18;642:38;639:161;;722:10;717:3;713:20;710:1;703:31;757:4;754:1;747:15;785:4;782:1;775:15;639:161;;426:380;;;:::o;:::-;107:1070:14;;;;;;",
  "deployedSourceMap": "107:1070:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2110:152:71;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4559:204;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:76;;1211:22;1193:41;;1181:2;1166:18;4559:204:71;1053:187:76;722:135:14;;;;;;:::i;:::-;;:::i;:::-;;3356:160:71;3493:16;;3356:160;;;1391:25:76;;;1379:2;1364:18;3356:160:71;1245:177:76;863:139:14;;;;;;:::i;:::-;;:::i;5230:368:71:-;;;;;;:::i;:::-;;:::i;3155:141::-;;;3287:2;1902:36:76;;1890:2;1875:18;3155:141:71;1760:184:76;5993:291:71;;;;;;:::i;:::-;;:::i;3574:175::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3719:23:71;3689:7;3719:23;;;;;;;;;;;;3574:175;2375:156;;;:::i;1008:167:14:-;;;;;;:::i;:::-;;:::i;6771:312:71:-;;;;;;:::i;:::-;;:::i;3952:210::-;;;;;;:::i;:::-;;:::i;4220:201::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4381:23:71;;;4351:7;4381:23;;;:15;:23;;;;;;;;:33;;;;;;;;;;;;;4220:201;2110:152;2209:13;2246:9;2239:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2110:152;:::o;4559:204::-;4676:4;4696:39;4705:10;4717:8;4727:7;4696:8;:39::i;:::-;-1:-1:-1;4752:4:71;4559:204;;;;:::o;722:135:14:-;833:17;839:2;843:6;833:5;:17::i;:::-;722:135;;:::o;863:139::-;976:19;982:4;988:6;976:5;:19::i;5230:368:71:-;-1:-1:-1;;;;;5389:24:71;;5369:4;5389:24;;;:15;:24;;;;;;;;5414:10;5389:36;;;;;;;;-1:-1:-1;;5389:57:71;5385:135;;-1:-1:-1;;;;;5462:24:71;;;;;;:15;:24;;;;;;;;5487:10;5462:36;;;;;;;:47;;5502:7;;5462:24;:47;;5502:7;;5462:47;:::i;:::-;;;;-1:-1:-1;;5385:135:71;5530:39;5540:7;5549:10;5561:7;5530:9;:39::i;:::-;-1:-1:-1;5587:4:71;5230:368;;;;;:::o;5993:291::-;6149:10;6107:4;6195:27;;;:15;:27;;;;;;;;-1:-1:-1;;;;;6195:37:71;;;;;;;;;;6107:4;;6127:129;;6173:8;;6195:51;;6235:11;;6195:51;:::i;:::-;6127:8;:129::i;2375:156::-;2476:13;2513:11;2506:18;;;;;:::i;1008:167:14:-;1132:36;1142:6;1150:9;1161:6;1132:9;:36::i;:::-;1008:167;;;:::o;6771:312:71:-;6940:10;6890:4;6988:27;;;:15;:27;;;;;;;;-1:-1:-1;;;;;6988:37:71;;;;;;;;;;6890:4;;6918:136;;6965:8;;6988:56;;7028:16;;6988:56;:::i;3952:210::-;4072:4;4092:42;4102:10;4114;4126:7;4092:9;:42::i;9686:249::-;-1:-1:-1;;;;;9835:23:71;;;;;;;:15;:23;;;;;;;;:33;;;;;;;;;;;;;:43;;;9893:35;;1391:25:76;;;9893:35:71;;1364:18:76;9893:35:71;;;;;;;;9686:249;;;:::o;8232:342::-;8375:7;8355:16;;:27;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8469:23:71;;:13;:23;;;;;;;;;;;:34;;;;;;8528:39;1391:25:76;;;8528:39:71;;1364:18:76;8528:39:71;;;;;;;;8232:342;;:::o;8894:369::-;-1:-1:-1;;;;;9017:23:71;;:13;:23;;;;;;;;;;:34;;9044:7;;9017:13;:34;;9044:7;;9017:34;:::i;:::-;;;;-1:-1:-1;;9085:16:71;:27;;;;;;;9217:39;;1391:25:76;;;-1:-1:-1;;;;;;;9217:39:71;;;;;1379:2:76;1364:18;9217:39:71;1245:177:76;7557:399:71;-1:-1:-1;;;;;7710:22:71;;:13;:22;;;;;;;;;;:33;;7736:7;;7710:13;:33;;7736:7;;7710:33;:::i;:::-;;;;-1:-1:-1;;;;;;;7777:25:71;;;:13;:25;;;;;;;;;;;;:36;;;;;;7911:38;;1391:25:76;;;7777::71;;7911:38;;;;;1364:18:76;7911:38:71;1245:177:76;14:597;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:76;574:15;-1:-1:-1;;570:29:76;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:76:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:76;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:76:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:76:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:127::-;2851:10;2846:3;2842:20;2839:1;2832:31;2882:4;2879:1;2872:15;2906:4;2903:1;2896:15;2922:125;2962:4;2990:1;2987;2984:8;2981:34;;;2995:18;;:::i;:::-;-1:-1:-1;3032:9:76;;2922:125::o;3052:128::-;3092:3;3123:1;3119:6;3116:1;3113:13;3110:39;;;3129:18;;:::i;:::-;-1:-1:-1;3165:9:76;;3052:128::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport \"../openzeppelin/token/ERC20/ERC20.sol\";\n\ncontract TestBtcToken is ERC20 {\n    address owner;\n\n    constructor()\n        //ERC20(\"Cerby Token\", \"CERBY\")\n        ERC20(\"Wrapped BTC Token\", \"WBTC\")\n        //ERC20(\"USD Coin\", \"USDC\")\n    {\n        owner = msg.sender;\n        _mint(0xDc15Ca882F975c33D8f20AB3669D27195B8D87a6, 1e18 * 1e9);\n        _mint(0x539FaA851D86781009EC30dF437D794bCd090c8F, 1e18 * 1e9);\n        _mint(msg.sender, 1e18 * 1e9);\n    }\n\n\n    function mintByBridge(address to, uint256 amount) public {\n        _mint(to, amount);\n    }\n\n    function burnByBridge(address from, uint256 amount) public {\n        _burn(from, amount);\n    }\n\n    function mintHumanAddress(address to, uint256 amount) public {\n        //require(msg.sender == owner);\n        _mint(to, amount);\n    }\n\n    function burnHumanAddress(address from, uint256 amount) public {\n        //require(msg.sender == owner);\n        _burn(from, amount);\n    }\n\n    function transferCustom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external {\n        _transfer(sender, recipient, amount);\n    }\n}\n",
  "sourcePath": "/Users/numwan/Documents/Remix/bitbucket/sol-cerby-swap-v1/contracts/TestBtcToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/TestBtcToken.sol",
    "exportedSymbols": {
      "ERC20": [
        5587
      ],
      "IERC20": [
        5665
      ],
      "IERC20Metadata": [
        5690
      ],
      "TestBtcToken": [
        3881
      ]
    },
    "id": 3882,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3772,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:14"
      },
      {
        "absolutePath": "project:/openzeppelin/token/ERC20/ERC20.sol",
        "file": "../openzeppelin/token/ERC20/ERC20.sol",
        "id": 3773,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3882,
        "sourceUnit": 5588,
        "src": "58:47:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3774,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5587,
              "src": "132:5:14"
            },
            "id": 3775,
            "nodeType": "InheritanceSpecifier",
            "src": "132:5:14"
          }
        ],
        "canonicalName": "TestBtcToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3881,
        "linearizedBaseContracts": [
          3881,
          5587,
          5690,
          5665
        ],
        "name": "TestBtcToken",
        "nameLocation": "116:12:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3777,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "152:5:14",
            "nodeType": "VariableDeclaration",
            "scope": 3881,
            "src": "144:13:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3776,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "144:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3811,
              "nodeType": "Block",
              "src": "301:216:14",
              "statements": [
                {
                  "expression": {
                    "id": 3787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3784,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3777,
                      "src": "311:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3785,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "319:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "319:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "311:18:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3788,
                  "nodeType": "ExpressionStatement",
                  "src": "311:18:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307844633135436138383246393735633333443866323041423336363944323731393542384438376136",
                        "id": 3790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "345:42:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xDc15Ca882F975c33D8f20AB3669D27195B8D87a6"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000"
                        },
                        "id": 3793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31653138",
                          "id": 3791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "389:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "316539",
                          "id": 3792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "396:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000_by_1",
                            "typeString": "int_const 1000000000"
                          },
                          "value": "1e9"
                        },
                        "src": "389:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000"
                        }
                      ],
                      "id": 3789,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5532,
                      "src": "339:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "339:61:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3795,
                  "nodeType": "ExpressionStatement",
                  "src": "339:61:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307835333946614138353144383637383130303945433330644634333744373934624364303930633846",
                        "id": 3797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "416:42:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x539FaA851D86781009EC30dF437D794bCd090c8F"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000"
                        },
                        "id": 3800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31653138",
                          "id": 3798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "460:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "316539",
                          "id": 3799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "467:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000_by_1",
                            "typeString": "int_const 1000000000"
                          },
                          "value": "1e9"
                        },
                        "src": "460:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000"
                        }
                      ],
                      "id": 3796,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5532,
                      "src": "410:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "410:61:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3802,
                  "nodeType": "ExpressionStatement",
                  "src": "410:61:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3804,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "487:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "487:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000"
                        },
                        "id": 3808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31653138",
                          "id": 3806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "499:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "316539",
                          "id": 3807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "506:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000_by_1",
                            "typeString": "int_const 1000000000"
                          },
                          "value": "1e9"
                        },
                        "src": "499:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000"
                        }
                      ],
                      "id": 3803,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5532,
                      "src": "481:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "481:29:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3810,
                  "nodeType": "ExpressionStatement",
                  "src": "481:29:14"
                }
              ]
            },
            "id": 3812,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "577261707065642042544320546f6b656e",
                    "id": 3780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "232:19:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6ca99a9ed995efd264de5e181b2363bd1f92365b55baee52d6ca0ad37511ac25",
                      "typeString": "literal_string \"Wrapped BTC Token\""
                    },
                    "value": "Wrapped BTC Token"
                  },
                  {
                    "hexValue": "57425443",
                    "id": 3781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "253:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73",
                      "typeString": "literal_string \"WBTC\""
                    },
                    "value": "WBTC"
                  }
                ],
                "id": 3782,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3779,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5587,
                  "src": "226:5:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "226:34:14"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "175:2:14"
            },
            "returnParameters": {
              "id": 3783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "301:0:14"
            },
            "scope": 3881,
            "src": "164:353:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3824,
              "nodeType": "Block",
              "src": "581:34:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3820,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3814,
                        "src": "597:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3821,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3816,
                        "src": "601:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3819,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5532,
                      "src": "591:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "591:17:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3823,
                  "nodeType": "ExpressionStatement",
                  "src": "591:17:14"
                }
              ]
            },
            "functionSelector": "1f2eba24",
            "id": 3825,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintByBridge",
            "nameLocation": "533:12:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3814,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "554:2:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3825,
                  "src": "546:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "546:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3816,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "566:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3825,
                  "src": "558:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "545:28:14"
            },
            "returnParameters": {
              "id": 3818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "581:0:14"
            },
            "scope": 3881,
            "src": "524:91:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3837,
              "nodeType": "Block",
              "src": "680:36:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3833,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3827,
                        "src": "696:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3834,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3829,
                        "src": "702:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3832,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5561,
                      "src": "690:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "690:19:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3836,
                  "nodeType": "ExpressionStatement",
                  "src": "690:19:14"
                }
              ]
            },
            "functionSelector": "66830b21",
            "id": 3838,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnByBridge",
            "nameLocation": "630:12:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3827,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "651:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3838,
                  "src": "643:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3826,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "643:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3829,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "665:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3838,
                  "src": "657:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "642:30:14"
            },
            "returnParameters": {
              "id": 3831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "680:0:14"
            },
            "scope": 3881,
            "src": "621:95:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3850,
              "nodeType": "Block",
              "src": "783:74:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3846,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3840,
                        "src": "839:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3847,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3842,
                        "src": "843:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3845,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5532,
                      "src": "833:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "833:17:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3849,
                  "nodeType": "ExpressionStatement",
                  "src": "833:17:14"
                }
              ]
            },
            "functionSelector": "0bb9ff5d",
            "id": 3851,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintHumanAddress",
            "nameLocation": "731:16:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3840,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "756:2:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3851,
                  "src": "748:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3842,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "768:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3851,
                  "src": "760:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "760:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "747:28:14"
            },
            "returnParameters": {
              "id": 3844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "783:0:14"
            },
            "scope": 3881,
            "src": "722:135:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3863,
              "nodeType": "Block",
              "src": "926:76:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3859,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3853,
                        "src": "982:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3860,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3855,
                        "src": "988:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3858,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5561,
                      "src": "976:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "976:19:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3862,
                  "nodeType": "ExpressionStatement",
                  "src": "976:19:14"
                }
              ]
            },
            "functionSelector": "18a8ad87",
            "id": 3864,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnHumanAddress",
            "nameLocation": "872:16:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3853,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "897:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3864,
                  "src": "889:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "889:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3855,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "911:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3864,
                  "src": "903:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "903:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "888:30:14"
            },
            "returnParameters": {
              "id": 3857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "926:0:14"
            },
            "scope": 3881,
            "src": "863:139:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3879,
              "nodeType": "Block",
              "src": "1122:53:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3874,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "1142:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3875,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3868,
                        "src": "1150:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3876,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3870,
                        "src": "1161:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3873,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5503,
                      "src": "1132:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1132:36:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3878,
                  "nodeType": "ExpressionStatement",
                  "src": "1132:36:14"
                }
              ]
            },
            "functionSelector": "9cff2eba",
            "id": 3880,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferCustom",
            "nameLocation": "1017:14:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3866,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1049:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3880,
                  "src": "1041:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1041:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3868,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1073:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3880,
                  "src": "1065:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3867,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1065:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3870,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1100:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3880,
                  "src": "1092:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1031:81:14"
            },
            "returnParameters": {
              "id": 3872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1122:0:14"
            },
            "scope": 3881,
            "src": "1008:167:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3882,
        "src": "107:1070:14",
        "usedErrors": []
      }
    ],
    "src": "32:1146:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-20T07:31:48.915Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}