{
	"compiler": {
		"version": "0.8.11+commit.d7f03943"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountTokensIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "expireTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "transferTo",
						"type": "address"
					}
				],
				"name": "addTokenLiquidity",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "getCurrentFeeBasedOnTrades",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "fee",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenIn",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenOut",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountTokensOut",
						"type": "uint256"
					}
				],
				"name": "getInputTokensForExactTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountTokensIn",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenIn",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenOut",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountTokensIn",
						"type": "uint256"
					}
				],
				"name": "getOutputExactTokensForTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountTokensOut",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "tokens",
						"type": "address[]"
					}
				],
				"name": "getPoolsByTokens",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint32[8]",
								"name": "tradeVolumePerPeriodInCerUsd",
								"type": "uint32[8]"
							},
							{
								"internalType": "uint128",
								"name": "balanceToken",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "balanceCerUsd",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "lastSqrtKValue",
								"type": "uint128"
							}
						],
						"internalType": "struct Pool[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountLpTokensBalanceToBurn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "expireTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "transferTo",
						"type": "address"
					}
				],
				"name": "removeTokenLiquidity",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenIn",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenOut",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountTokensIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "minAmountTokensOut",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "expireTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "transferTo",
						"type": "address"
					}
				],
				"name": "swapExactTokensForTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"sol-defifactory-token/interfaces/ICerbySwapV1.sol": "ICerbySwapV1"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"sol-defifactory-token/interfaces/ICerbySwapV1.sol": {
			"keccak256": "0x0810c3b097ee7afd17912da76854a5841abade9fd0c756c628bbb83e429e40cb",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://07d1a0a077adacddc7f4974ba00b544a055c4cda75d0ed47b4dfd0b84b000a9a",
				"dweb:/ipfs/QmVEiK3JDYjnuHAgs6CHu9qKhAgaJ7a2yM54WkkuYgCMfK"
			]
		}
	},
	"version": 1
}